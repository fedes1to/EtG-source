// classID{115}: MonoScript
MonoScript Base // ByteSize{ffffffff}, Index{0}, Version{4}, IsArray{0}, MetaFlag{8000}
	string m_Name // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{1}
	int m_ExecutionOrder // ByteSize{4}, Index{5}, Version{1}, IsArray{0}, MetaFlag{10}
	Hash128 m_PropertiesHash // ByteSize{10}, Index{6}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[0] // ByteSize{1}, Index{7}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[1] // ByteSize{1}, Index{8}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[2] // ByteSize{1}, Index{9}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[3] // ByteSize{1}, Index{a}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[4] // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[5] // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[6] // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[7] // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[8] // ByteSize{1}, Index{f}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[9] // ByteSize{1}, Index{10}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[10] // ByteSize{1}, Index{11}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[11] // ByteSize{1}, Index{12}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[12] // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[13] // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[14] // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[15] // ByteSize{1}, Index{16}, Version{1}, IsArray{0}, MetaFlag{10}
	string m_ClassName // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{0}, MetaFlag{8010}
		Array Array // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{1}, MetaFlag{4011}
			int size // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{11}
			char data // ByteSize{1}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{11}
	string m_Namespace // ByteSize{ffffffff}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{8010}
		Array Array // ByteSize{ffffffff}, Index{1c}, Version{1}, IsArray{1}, MetaFlag{4011}
			int size // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{11}
			char data // ByteSize{1}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{11}
	string m_AssemblyName // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{8010}
		Array Array // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{1}, MetaFlag{4011}
			int size // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{11}
			char data // ByteSize{1}, Index{22}, Version{1}, IsArray{0}, MetaFlag{11}
	bool m_IsEditorScript // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{114}: PrototypeDungeonRoom
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int RoomId // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{1}
	string QAID // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{10}, Version{1}, IsArray{0}, MetaFlag{1}
	string GUID // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 PreventMirroring // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
	int category // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
	int subCategoryNormal // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
	int subCategoryBoss // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
	int subCategorySpecial // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
	int subCategorySecret // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypeRoomExitData exitData // ByteSize{ffffffff}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{8000}
		PrototypeRoomExit exits // ByteSize{ffffffff}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1d}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
				PrototypeRoomExit data // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{8000}
					int exitDirection // ByteSize{4}, Index{20}, Version{1}, IsArray{0}, MetaFlag{0}
					int exitType // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
					int exitGroup // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 containsDoor // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{4100}
					PPtr<$DungeonPlaceable> specifiedDoor // ByteSize{c}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{25}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
					int exitLength // ByteSize{4}, Index{27}, Version{1}, IsArray{0}, MetaFlag{0}
					vector containedCells // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{29}, Version{1}, IsArray{1}, MetaFlag{4000}
							int size // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{0}
							Vector2f data // ByteSize{8}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{200000}
								float x // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{200000}
								float y // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{200000}
	PrototypeRoomPitEntry pits // ByteSize{ffffffff}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{2f}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeRoomPitEntry data // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{0}, MetaFlag{8000}
				vector containedCells // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
						Vector2f data // ByteSize{8}, Index{35}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{36}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{200000}
				int borderType // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypePlacedObjectData placedObjects // ByteSize{ffffffff}, Index{39}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{3a}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypePlacedObjectData data // ByteSize{ffffffff}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{8000}
				PPtr<$DungeonPlaceable> placeableContents // ByteSize{c}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$DungeonPlaceableBehaviour> nonenemyBehaviour // ByteSize{c}, Index{40}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{42}, Version{1}, IsArray{0}, MetaFlag{800001}
				string enemyBehaviourGuid // ByteSize{ffffffff}, Index{43}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{44}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{45}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{46}, Version{1}, IsArray{0}, MetaFlag{1}
				PPtr<$GameObject> unspecifiedContents // ByteSize{c}, Index{47}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{49}, Version{1}, IsArray{0}, MetaFlag{800001}
				Vector2f contentsBasePosition // ByteSize{8}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{200000}
				int layer // ByteSize{4}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{0}
				float spawnChance // ByteSize{4}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{0}
				int xMPxOffset // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
				int yMPxOffset // ByteSize{4}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
				PrototypePlacedObjectFieldData fieldData // ByteSize{ffffffff}, Index{51}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{52}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
						PrototypePlacedObjectFieldData data // ByteSize{ffffffff}, Index{54}, Version{1}, IsArray{0}, MetaFlag{8000}
							int fieldType // ByteSize{4}, Index{55}, Version{1}, IsArray{0}, MetaFlag{0}
							string fieldName // ByteSize{ffffffff}, Index{56}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{57}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{58}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{59}, Version{1}, IsArray{0}, MetaFlag{1}
							float floatValue // ByteSize{4}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 boolValue // ByteSize{1}, Index{5b}, Version{1}, IsArray{0}, MetaFlag{4100}
				DungeonPrerequisite instancePrerequisites // ByteSize{ffffffff}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{5d}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{5e}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite data // ByteSize{ffffffff}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{8000}
							int prerequisiteType // ByteSize{4}, Index{60}, Version{1}, IsArray{0}, MetaFlag{0}
							int prerequisiteOperation // ByteSize{4}, Index{61}, Version{1}, IsArray{0}, MetaFlag{0}
							int statToCheck // ByteSize{4}, Index{62}, Version{1}, IsArray{0}, MetaFlag{0}
							int maxToCheck // ByteSize{4}, Index{63}, Version{1}, IsArray{0}, MetaFlag{0}
							float comparisonValue // ByteSize{4}, Index{64}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 useSessionStatValue // ByteSize{1}, Index{65}, Version{1}, IsArray{0}, MetaFlag{4100}
							string encounteredObjectGuid // ByteSize{ffffffff}, Index{66}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{67}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{68}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{69}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{6c}, Version{1}, IsArray{0}, MetaFlag{800001}
							int requiredNumberOfEncounters // ByteSize{4}, Index{6d}, Version{1}, IsArray{0}, MetaFlag{0}
							int requiredCharacter // ByteSize{4}, Index{6e}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireCharacter // ByteSize{1}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{4100}
							int requiredTileset // ByteSize{4}, Index{70}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireTileset // ByteSize{1}, Index{71}, Version{1}, IsArray{0}, MetaFlag{4100}
							int saveFlagToCheck // ByteSize{4}, Index{72}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireFlag // ByteSize{1}, Index{73}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 requireDemoMode // ByteSize{1}, Index{74}, Version{1}, IsArray{0}, MetaFlag{4100}
				vector linkedTriggerAreaIDs // ByteSize{ffffffff}, Index{75}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{76}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{77}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{78}, Version{1}, IsArray{0}, MetaFlag{0}
				int assignedPathIDx // ByteSize{4}, Index{79}, Version{1}, IsArray{0}, MetaFlag{0}
				int assignedPathStartNode // ByteSize{4}, Index{7a}, Version{1}, IsArray{0}, MetaFlag{0}
	vector placedObjectPositions // ByteSize{ffffffff}, Index{7b}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{7c}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{7d}, Version{1}, IsArray{0}, MetaFlag{0}
			Vector2f data // ByteSize{8}, Index{7e}, Version{1}, IsArray{0}, MetaFlag{200000}
				float x // ByteSize{4}, Index{7f}, Version{1}, IsArray{0}, MetaFlag{200000}
				float y // ByteSize{4}, Index{80}, Version{1}, IsArray{0}, MetaFlag{200000}
	PrototypeRoomObjectLayer additionalObjectLayers // ByteSize{ffffffff}, Index{81}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{82}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{83}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeRoomObjectLayer data // ByteSize{ffffffff}, Index{84}, Version{1}, IsArray{0}, MetaFlag{8000}
				PrototypePlacedObjectData placedObjects // ByteSize{ffffffff}, Index{85}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{86}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{87}, Version{1}, IsArray{0}, MetaFlag{0}
						PrototypePlacedObjectData data // ByteSize{ffffffff}, Index{88}, Version{1}, IsArray{0}, MetaFlag{8000}
							PPtr<$DungeonPlaceable> placeableContents // ByteSize{c}, Index{89}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{8a}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{8b}, Version{1}, IsArray{0}, MetaFlag{800001}
							PPtr<$DungeonPlaceableBehaviour> nonenemyBehaviour // ByteSize{c}, Index{8c}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{8d}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{8e}, Version{1}, IsArray{0}, MetaFlag{800001}
							string enemyBehaviourGuid // ByteSize{ffffffff}, Index{8f}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{90}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{91}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{92}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$GameObject> unspecifiedContents // ByteSize{c}, Index{93}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{94}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{95}, Version{1}, IsArray{0}, MetaFlag{800001}
							Vector2f contentsBasePosition // ByteSize{8}, Index{96}, Version{1}, IsArray{0}, MetaFlag{200000}
								float x // ByteSize{4}, Index{97}, Version{1}, IsArray{0}, MetaFlag{200000}
								float y // ByteSize{4}, Index{98}, Version{1}, IsArray{0}, MetaFlag{200000}
							int layer // ByteSize{4}, Index{99}, Version{1}, IsArray{0}, MetaFlag{0}
							float spawnChance // ByteSize{4}, Index{9a}, Version{1}, IsArray{0}, MetaFlag{0}
							int xMPxOffset // ByteSize{4}, Index{9b}, Version{1}, IsArray{0}, MetaFlag{0}
							int yMPxOffset // ByteSize{4}, Index{9c}, Version{1}, IsArray{0}, MetaFlag{0}
							PrototypePlacedObjectFieldData fieldData // ByteSize{ffffffff}, Index{9d}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{9e}, Version{1}, IsArray{1}, MetaFlag{8000}
									int size // ByteSize{4}, Index{9f}, Version{1}, IsArray{0}, MetaFlag{0}
									PrototypePlacedObjectFieldData data // ByteSize{ffffffff}, Index{a0}, Version{1}, IsArray{0}, MetaFlag{8000}
										int fieldType // ByteSize{4}, Index{a1}, Version{1}, IsArray{0}, MetaFlag{0}
										string fieldName // ByteSize{ffffffff}, Index{a2}, Version{1}, IsArray{0}, MetaFlag{8000}
											Array Array // ByteSize{ffffffff}, Index{a3}, Version{1}, IsArray{1}, MetaFlag{4001}
												int size // ByteSize{4}, Index{a4}, Version{1}, IsArray{0}, MetaFlag{1}
												char data // ByteSize{1}, Index{a5}, Version{1}, IsArray{0}, MetaFlag{1}
										float floatValue // ByteSize{4}, Index{a6}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 boolValue // ByteSize{1}, Index{a7}, Version{1}, IsArray{0}, MetaFlag{4100}
							DungeonPrerequisite instancePrerequisites // ByteSize{ffffffff}, Index{a8}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{a9}, Version{1}, IsArray{1}, MetaFlag{8000}
									int size // ByteSize{4}, Index{aa}, Version{1}, IsArray{0}, MetaFlag{0}
									DungeonPrerequisite data // ByteSize{ffffffff}, Index{ab}, Version{1}, IsArray{0}, MetaFlag{8000}
										int prerequisiteType // ByteSize{4}, Index{ac}, Version{1}, IsArray{0}, MetaFlag{0}
										int prerequisiteOperation // ByteSize{4}, Index{ad}, Version{1}, IsArray{0}, MetaFlag{0}
										int statToCheck // ByteSize{4}, Index{ae}, Version{1}, IsArray{0}, MetaFlag{0}
										int maxToCheck // ByteSize{4}, Index{af}, Version{1}, IsArray{0}, MetaFlag{0}
										float comparisonValue // ByteSize{4}, Index{b0}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 useSessionStatValue // ByteSize{1}, Index{b1}, Version{1}, IsArray{0}, MetaFlag{4100}
										string encounteredObjectGuid // ByteSize{ffffffff}, Index{b2}, Version{1}, IsArray{0}, MetaFlag{8000}
											Array Array // ByteSize{ffffffff}, Index{b3}, Version{1}, IsArray{1}, MetaFlag{4001}
												int size // ByteSize{4}, Index{b4}, Version{1}, IsArray{0}, MetaFlag{1}
												char data // ByteSize{1}, Index{b5}, Version{1}, IsArray{0}, MetaFlag{1}
										PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{b6}, Version{1}, IsArray{0}, MetaFlag{0}
											int m_FileID // ByteSize{4}, Index{b7}, Version{1}, IsArray{0}, MetaFlag{800001}
											SInt64 m_PathID // ByteSize{8}, Index{b8}, Version{1}, IsArray{0}, MetaFlag{800001}
										int requiredNumberOfEncounters // ByteSize{4}, Index{b9}, Version{1}, IsArray{0}, MetaFlag{0}
										int requiredCharacter // ByteSize{4}, Index{ba}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 requireCharacter // ByteSize{1}, Index{bb}, Version{1}, IsArray{0}, MetaFlag{4100}
										int requiredTileset // ByteSize{4}, Index{bc}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 requireTileset // ByteSize{1}, Index{bd}, Version{1}, IsArray{0}, MetaFlag{4100}
										int saveFlagToCheck // ByteSize{4}, Index{be}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 requireFlag // ByteSize{1}, Index{bf}, Version{1}, IsArray{0}, MetaFlag{4100}
										UInt8 requireDemoMode // ByteSize{1}, Index{c0}, Version{1}, IsArray{0}, MetaFlag{4100}
							vector linkedTriggerAreaIDs // ByteSize{ffffffff}, Index{c1}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{c2}, Version{1}, IsArray{1}, MetaFlag{4000}
									int size // ByteSize{4}, Index{c3}, Version{1}, IsArray{0}, MetaFlag{0}
									int data // ByteSize{4}, Index{c4}, Version{1}, IsArray{0}, MetaFlag{0}
							int assignedPathIDx // ByteSize{4}, Index{c5}, Version{1}, IsArray{0}, MetaFlag{0}
							int assignedPathStartNode // ByteSize{4}, Index{c6}, Version{1}, IsArray{0}, MetaFlag{0}
				vector placedObjectBasePositions // ByteSize{ffffffff}, Index{c7}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{c8}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{c9}, Version{1}, IsArray{0}, MetaFlag{0}
						Vector2f data // ByteSize{8}, Index{ca}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{cb}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{cc}, Version{1}, IsArray{0}, MetaFlag{200000}
				UInt8 layerIsReinforcementLayer // ByteSize{1}, Index{cd}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 shuffle // ByteSize{1}, Index{ce}, Version{1}, IsArray{0}, MetaFlag{4100}
				int randomize // ByteSize{4}, Index{cf}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 suppressPlayerChecks // ByteSize{1}, Index{d0}, Version{1}, IsArray{0}, MetaFlag{4100}
				float delayTime // ByteSize{4}, Index{d1}, Version{1}, IsArray{0}, MetaFlag{0}
				int reinforcementTriggerCondition // ByteSize{4}, Index{d2}, Version{1}, IsArray{0}, MetaFlag{0}
				float probability // ByteSize{4}, Index{d3}, Version{1}, IsArray{0}, MetaFlag{0}
				int numberTimesEncounteredRequired // ByteSize{4}, Index{d4}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypeEventTriggerArea eventTriggerAreas // ByteSize{ffffffff}, Index{d5}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{d6}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{d7}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeEventTriggerArea data // ByteSize{ffffffff}, Index{d8}, Version{1}, IsArray{0}, MetaFlag{8000}
				vector triggerCells // ByteSize{ffffffff}, Index{d9}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{da}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{db}, Version{1}, IsArray{0}, MetaFlag{0}
						Vector2f data // ByteSize{8}, Index{dc}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{dd}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{de}, Version{1}, IsArray{0}, MetaFlag{200000}
	RoomEventDefinition roomEvents // ByteSize{ffffffff}, Index{df}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{e0}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{e1}, Version{1}, IsArray{0}, MetaFlag{0}
			RoomEventDefinition data // ByteSize{8}, Index{e2}, Version{1}, IsArray{0}, MetaFlag{0}
				int condition // ByteSize{4}, Index{e3}, Version{1}, IsArray{0}, MetaFlag{0}
				int action // ByteSize{4}, Index{e4}, Version{1}, IsArray{0}, MetaFlag{0}
	SerializedPath paths // ByteSize{ffffffff}, Index{e5}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{e6}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{e7}, Version{1}, IsArray{0}, MetaFlag{0}
			SerializedPath data // ByteSize{ffffffff}, Index{e8}, Version{1}, IsArray{0}, MetaFlag{8000}
				SerializedPathNode nodes // ByteSize{ffffffff}, Index{e9}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{ea}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{eb}, Version{1}, IsArray{0}, MetaFlag{0}
						SerializedPathNode data // ByteSize{19}, Index{ec}, Version{1}, IsArray{0}, MetaFlag{8000}
							IntVector2 position // ByteSize{8}, Index{ed}, Version{1}, IsArray{0}, MetaFlag{0}
								int x // ByteSize{4}, Index{ee}, Version{1}, IsArray{0}, MetaFlag{0}
								int y // ByteSize{4}, Index{ef}, Version{1}, IsArray{0}, MetaFlag{0}
							float delayTime // ByteSize{4}, Index{f0}, Version{1}, IsArray{0}, MetaFlag{0}
							int placement // ByteSize{4}, Index{f1}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 UsesAlternateTarget // ByteSize{1}, Index{f2}, Version{1}, IsArray{0}, MetaFlag{4100}
							int AlternateTargetPathIndex // ByteSize{4}, Index{f3}, Version{1}, IsArray{0}, MetaFlag{0}
							int AlternateTargetNodeIndex // ByteSize{4}, Index{f4}, Version{1}, IsArray{0}, MetaFlag{0}
				int wrapMode // ByteSize{4}, Index{f5}, Version{1}, IsArray{0}, MetaFlag{0}
				float overrideSpeed // ByteSize{4}, Index{f6}, Version{1}, IsArray{0}, MetaFlag{0}
				int tilesetPathGrid // ByteSize{4}, Index{f7}, Version{1}, IsArray{0}, MetaFlag{0}
	int overriddenTilesets // ByteSize{4}, Index{f8}, Version{1}, IsArray{0}, MetaFlag{0}
	DungeonPrerequisite prerequisites // ByteSize{ffffffff}, Index{f9}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{fa}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{fb}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonPrerequisite data // ByteSize{ffffffff}, Index{fc}, Version{1}, IsArray{0}, MetaFlag{8000}
				int prerequisiteType // ByteSize{4}, Index{fd}, Version{1}, IsArray{0}, MetaFlag{0}
				int prerequisiteOperation // ByteSize{4}, Index{fe}, Version{1}, IsArray{0}, MetaFlag{0}
				int statToCheck // ByteSize{4}, Index{ff}, Version{1}, IsArray{0}, MetaFlag{0}
				int maxToCheck // ByteSize{4}, Index{100}, Version{1}, IsArray{0}, MetaFlag{0}
				float comparisonValue // ByteSize{4}, Index{101}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 useSessionStatValue // ByteSize{1}, Index{102}, Version{1}, IsArray{0}, MetaFlag{4100}
				string encounteredObjectGuid // ByteSize{ffffffff}, Index{103}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{104}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{105}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{106}, Version{1}, IsArray{0}, MetaFlag{1}
				PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{107}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{108}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{109}, Version{1}, IsArray{0}, MetaFlag{800001}
				int requiredNumberOfEncounters // ByteSize{4}, Index{10a}, Version{1}, IsArray{0}, MetaFlag{0}
				int requiredCharacter // ByteSize{4}, Index{10b}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requireCharacter // ByteSize{1}, Index{10c}, Version{1}, IsArray{0}, MetaFlag{4100}
				int requiredTileset // ByteSize{4}, Index{10d}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requireTileset // ByteSize{1}, Index{10e}, Version{1}, IsArray{0}, MetaFlag{4100}
				int saveFlagToCheck // ByteSize{4}, Index{10f}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requireFlag // ByteSize{1}, Index{110}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 requireDemoMode // ByteSize{1}, Index{111}, Version{1}, IsArray{0}, MetaFlag{4100}
	int RequiredCurseLevel // ByteSize{4}, Index{112}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 InvalidInCoop // ByteSize{1}, Index{113}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector excludedOtherRooms // ByteSize{ffffffff}, Index{114}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{115}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{116}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$PrototypeDungeonRoom> data // ByteSize{c}, Index{117}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{118}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{119}, Version{1}, IsArray{0}, MetaFlag{800001}
	PrototypeRectangularFeature rectangularFeatures // ByteSize{ffffffff}, Index{11a}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{11b}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{11c}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeRectangularFeature data // ByteSize{10}, Index{11d}, Version{1}, IsArray{0}, MetaFlag{0}
				IntVector2 basePosition // ByteSize{8}, Index{11e}, Version{1}, IsArray{0}, MetaFlag{0}
					int x // ByteSize{4}, Index{11f}, Version{1}, IsArray{0}, MetaFlag{0}
					int y // ByteSize{4}, Index{120}, Version{1}, IsArray{0}, MetaFlag{0}
				IntVector2 dimensions // ByteSize{8}, Index{121}, Version{1}, IsArray{0}, MetaFlag{0}
					int x // ByteSize{4}, Index{122}, Version{1}, IsArray{0}, MetaFlag{0}
					int y // ByteSize{4}, Index{123}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 usesProceduralLighting // ByteSize{1}, Index{124}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 usesProceduralDecoration // ByteSize{1}, Index{125}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 cullProceduralDecorationOnWeakPlatforms // ByteSize{1}, Index{126}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 allowFloorDecoration // ByteSize{1}, Index{127}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 allowWallDecoration // ByteSize{1}, Index{128}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 preventAddedDecoLayering // ByteSize{1}, Index{129}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 precludeAllTilemapDrawing // ByteSize{1}, Index{12a}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 drawPrecludedCeilingTiles // ByteSize{1}, Index{12b}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 preventFacewallAO // ByteSize{1}, Index{12c}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 preventBorders // ByteSize{1}, Index{12d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 usesCustomAmbientLight // ByteSize{1}, Index{12e}, Version{1}, IsArray{0}, MetaFlag{4100}
	ColorRGBA customAmbientLight // ByteSize{10}, Index{12f}, Version{1}, IsArray{0}, MetaFlag{200000}
		float r // ByteSize{4}, Index{130}, Version{1}, IsArray{0}, MetaFlag{200001}
		float g // ByteSize{4}, Index{131}, Version{1}, IsArray{0}, MetaFlag{200001}
		float b // ByteSize{4}, Index{132}, Version{1}, IsArray{0}, MetaFlag{200001}
		float a // ByteSize{4}, Index{133}, Version{1}, IsArray{0}, MetaFlag{200001}
	UInt8 ForceAllowDuplicates // ByteSize{1}, Index{134}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$GameObject> doorTopDecorable // ByteSize{c}, Index{135}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{136}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{137}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$SharedInjectionData> requiredInjectionData // ByteSize{c}, Index{138}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{139}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{13a}, Version{1}, IsArray{0}, MetaFlag{800001}
	RuntimeInjectionFlags injectionFlags // ByteSize{2}, Index{13b}, Version{1}, IsArray{0}, MetaFlag{8000}
		UInt8 ShopAnnexed // ByteSize{1}, Index{13c}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 CastleFireplace // ByteSize{1}, Index{13d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsLostWoodsRoom // ByteSize{1}, Index{13e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 UseCustomMusicState // ByteSize{1}, Index{13f}, Version{1}, IsArray{0}, MetaFlag{4100}
	int OverrideMusicState // ByteSize{4}, Index{140}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 UseCustomMusic // ByteSize{1}, Index{141}, Version{1}, IsArray{0}, MetaFlag{4100}
	string CustomMusicEvent // ByteSize{ffffffff}, Index{142}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{143}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{144}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{145}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 UseCustomMusicSwitch // ByteSize{1}, Index{146}, Version{1}, IsArray{0}, MetaFlag{4100}
	string CustomMusicSwitch // ByteSize{ffffffff}, Index{147}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{148}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{149}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{14a}, Version{1}, IsArray{0}, MetaFlag{1}
	int overrideRoomVisualType // ByteSize{4}, Index{14b}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 overrideRoomVisualTypeForSecretRooms // ByteSize{1}, Index{14c}, Version{1}, IsArray{0}, MetaFlag{4100}
	IntVector2 rewardChestSpawnPosition // ByteSize{8}, Index{14d}, Version{1}, IsArray{0}, MetaFlag{0}
		int x // ByteSize{4}, Index{14e}, Version{1}, IsArray{0}, MetaFlag{0}
		int y // ByteSize{4}, Index{14f}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$GameObject> associatedMinimapIcon // ByteSize{c}, Index{150}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{151}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{152}, Version{1}, IsArray{0}, MetaFlag{800001}
	int m_width // ByteSize{4}, Index{153}, Version{1}, IsArray{0}, MetaFlag{0}
	int m_height // ByteSize{4}, Index{154}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypeDungeonRoomCellData m_OLDcellData // ByteSize{ffffffff}, Index{155}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{156}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{157}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeDungeonRoomCellData data // ByteSize{ffffffff}, Index{158}, Version{1}, IsArray{0}, MetaFlag{8000}
				int state // ByteSize{4}, Index{159}, Version{1}, IsArray{0}, MetaFlag{0}
				int diagonalWallType // ByteSize{4}, Index{15a}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 breakable // ByteSize{1}, Index{15b}, Version{1}, IsArray{0}, MetaFlag{4100}
				string str // ByteSize{ffffffff}, Index{15c}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{15d}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{15e}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{15f}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 conditionalOnParentExit // ByteSize{1}, Index{160}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 conditionalCellIsPit // ByteSize{1}, Index{161}, Version{1}, IsArray{0}, MetaFlag{4100}
				int parentExitIndex // ByteSize{4}, Index{162}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 containsManuallyPlacedLight // ByteSize{1}, Index{163}, Version{1}, IsArray{0}, MetaFlag{4100}
				int lightStampIndex // ByteSize{4}, Index{164}, Version{1}, IsArray{0}, MetaFlag{0}
				int lightPixelsOffsetY // ByteSize{4}, Index{165}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 doesDamage // ByteSize{1}, Index{166}, Version{1}, IsArray{0}, MetaFlag{4100}
				CellDamageDefinition damageDefinition // ByteSize{12}, Index{167}, Version{1}, IsArray{0}, MetaFlag{8000}
					int damageTypes // ByteSize{4}, Index{168}, Version{1}, IsArray{0}, MetaFlag{0}
					float damageToPlayersPerTick // ByteSize{4}, Index{169}, Version{1}, IsArray{0}, MetaFlag{0}
					float damageToEnemiesPerTick // ByteSize{4}, Index{16a}, Version{1}, IsArray{0}, MetaFlag{0}
					float tickFrequency // ByteSize{4}, Index{16b}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 respectsFlying // ByteSize{1}, Index{16c}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 isPoison // ByteSize{1}, Index{16d}, Version{1}, IsArray{0}, MetaFlag{4100}
				int placedObjectRUBELIndex // ByteSize{4}, Index{16e}, Version{1}, IsArray{0}, MetaFlag{0}
				vector additionalPlacedObjectIndices // ByteSize{ffffffff}, Index{16f}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{170}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{171}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{172}, Version{1}, IsArray{0}, MetaFlag{0}
				PrototypeDungeonRoomCellAppearance appearance // ByteSize{ffffffff}, Index{173}, Version{1}, IsArray{0}, MetaFlag{8000}
					int overrideDungeonMaterialIndex // ByteSize{4}, Index{174}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 IsPhantomCarpet // ByteSize{1}, Index{175}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 ForceDisallowGoop // ByteSize{1}, Index{176}, Version{1}, IsArray{0}, MetaFlag{4100}
					int OverrideFloorType // ByteSize{4}, Index{177}, Version{1}, IsArray{0}, MetaFlag{0}
					PrototypeIndexOverrideData globalOverrideIndices // ByteSize{ffffffff}, Index{178}, Version{1}, IsArray{0}, MetaFlag{8000}
						vector indices // ByteSize{ffffffff}, Index{179}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{17a}, Version{1}, IsArray{1}, MetaFlag{4000}
								int size // ByteSize{4}, Index{17b}, Version{1}, IsArray{0}, MetaFlag{0}
								int data // ByteSize{4}, Index{17c}, Version{1}, IsArray{0}, MetaFlag{0}
					PrototypeIndexOverrideData m_overrideIndices // ByteSize{ffffffff}, Index{17d}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{17e}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{17f}, Version{1}, IsArray{0}, MetaFlag{0}
							PrototypeIndexOverrideData data // ByteSize{ffffffff}, Index{180}, Version{1}, IsArray{0}, MetaFlag{8000}
								vector indices // ByteSize{ffffffff}, Index{181}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{182}, Version{1}, IsArray{1}, MetaFlag{4000}
										int size // ByteSize{4}, Index{183}, Version{1}, IsArray{0}, MetaFlag{0}
										int data // ByteSize{4}, Index{184}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 ForceTileNonDecorated // ByteSize{1}, Index{185}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector m_serializedCellType // ByteSize{ffffffff}, Index{186}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{187}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{188}, Version{1}, IsArray{0}, MetaFlag{0}
			int data // ByteSize{4}, Index{189}, Version{1}, IsArray{0}, MetaFlag{0}
	vector m_serializedCellDataIndices // ByteSize{ffffffff}, Index{18a}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{18b}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{18c}, Version{1}, IsArray{0}, MetaFlag{0}
			int data // ByteSize{4}, Index{18d}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypeDungeonRoomCellData m_serializedCellDataData // ByteSize{ffffffff}, Index{18e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{18f}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{190}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeDungeonRoomCellData data // ByteSize{ffffffff}, Index{191}, Version{1}, IsArray{0}, MetaFlag{8000}
				int state // ByteSize{4}, Index{192}, Version{1}, IsArray{0}, MetaFlag{0}
				int diagonalWallType // ByteSize{4}, Index{193}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 breakable // ByteSize{1}, Index{194}, Version{1}, IsArray{0}, MetaFlag{4100}
				string str // ByteSize{ffffffff}, Index{195}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{196}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{197}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{198}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 conditionalOnParentExit // ByteSize{1}, Index{199}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 conditionalCellIsPit // ByteSize{1}, Index{19a}, Version{1}, IsArray{0}, MetaFlag{4100}
				int parentExitIndex // ByteSize{4}, Index{19b}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 containsManuallyPlacedLight // ByteSize{1}, Index{19c}, Version{1}, IsArray{0}, MetaFlag{4100}
				int lightStampIndex // ByteSize{4}, Index{19d}, Version{1}, IsArray{0}, MetaFlag{0}
				int lightPixelsOffsetY // ByteSize{4}, Index{19e}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 doesDamage // ByteSize{1}, Index{19f}, Version{1}, IsArray{0}, MetaFlag{4100}
				CellDamageDefinition damageDefinition // ByteSize{12}, Index{1a0}, Version{1}, IsArray{0}, MetaFlag{8000}
					int damageTypes // ByteSize{4}, Index{1a1}, Version{1}, IsArray{0}, MetaFlag{0}
					float damageToPlayersPerTick // ByteSize{4}, Index{1a2}, Version{1}, IsArray{0}, MetaFlag{0}
					float damageToEnemiesPerTick // ByteSize{4}, Index{1a3}, Version{1}, IsArray{0}, MetaFlag{0}
					float tickFrequency // ByteSize{4}, Index{1a4}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 respectsFlying // ByteSize{1}, Index{1a5}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 isPoison // ByteSize{1}, Index{1a6}, Version{1}, IsArray{0}, MetaFlag{4100}
				int placedObjectRUBELIndex // ByteSize{4}, Index{1a7}, Version{1}, IsArray{0}, MetaFlag{0}
				vector additionalPlacedObjectIndices // ByteSize{ffffffff}, Index{1a8}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{1a9}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{1aa}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{1ab}, Version{1}, IsArray{0}, MetaFlag{0}
				PrototypeDungeonRoomCellAppearance appearance // ByteSize{ffffffff}, Index{1ac}, Version{1}, IsArray{0}, MetaFlag{8000}
					int overrideDungeonMaterialIndex // ByteSize{4}, Index{1ad}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 IsPhantomCarpet // ByteSize{1}, Index{1ae}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 ForceDisallowGoop // ByteSize{1}, Index{1af}, Version{1}, IsArray{0}, MetaFlag{4100}
					int OverrideFloorType // ByteSize{4}, Index{1b0}, Version{1}, IsArray{0}, MetaFlag{0}
					PrototypeIndexOverrideData globalOverrideIndices // ByteSize{ffffffff}, Index{1b1}, Version{1}, IsArray{0}, MetaFlag{8000}
						vector indices // ByteSize{ffffffff}, Index{1b2}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{1b3}, Version{1}, IsArray{1}, MetaFlag{4000}
								int size // ByteSize{4}, Index{1b4}, Version{1}, IsArray{0}, MetaFlag{0}
								int data // ByteSize{4}, Index{1b5}, Version{1}, IsArray{0}, MetaFlag{0}
					PrototypeIndexOverrideData m_overrideIndices // ByteSize{ffffffff}, Index{1b6}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{1b7}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{1b8}, Version{1}, IsArray{0}, MetaFlag{0}
							PrototypeIndexOverrideData data // ByteSize{ffffffff}, Index{1b9}, Version{1}, IsArray{0}, MetaFlag{8000}
								vector indices // ByteSize{ffffffff}, Index{1ba}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{1bb}, Version{1}, IsArray{1}, MetaFlag{4000}
										int size // ByteSize{4}, Index{1bc}, Version{1}, IsArray{0}, MetaFlag{0}
										int data // ByteSize{4}, Index{1bd}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 ForceTileNonDecorated // ByteSize{1}, Index{1be}, Version{1}, IsArray{0}, MetaFlag{4100}
	IntVector2 m_cachedRepresentationIncFacewalls // ByteSize{ffffffff}, Index{1bf}, Version{1}, IsArray{0}, MetaFlag{1}
		Array Array // ByteSize{ffffffff}, Index{1c0}, Version{1}, IsArray{1}, MetaFlag{1}
			int size // ByteSize{4}, Index{1c1}, Version{1}, IsArray{0}, MetaFlag{1}
			IntVector2 data // ByteSize{8}, Index{1c2}, Version{1}, IsArray{0}, MetaFlag{1}
				int x // ByteSize{4}, Index{1c3}, Version{1}, IsArray{0}, MetaFlag{1}
				int y // ByteSize{4}, Index{1c4}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{114}: GenericRoomTable
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	WeightedRoomCollection includedRooms // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{0}, MetaFlag{8000}
		WeightedRoom elements // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
				WeightedRoom data // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{0}, MetaFlag{8000}
					PPtr<$PrototypeDungeonRoom> room // ByteSize{c}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{13}, Version{1}, IsArray{0}, MetaFlag{800001}
					float weight // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 limitedCopies // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
					int maxCopies // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
					DungeonPrerequisite additionalPrerequisites // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
							DungeonPrerequisite data // ByteSize{ffffffff}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{8000}
								int prerequisiteType // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
								int prerequisiteOperation // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
								int statToCheck // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
								int maxToCheck // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
								float comparisonValue // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 useSessionStatValue // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
								string encounteredObjectGuid // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{22}, Version{1}, IsArray{1}, MetaFlag{4001}
										int size // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}
										char data // ByteSize{1}, Index{24}, Version{1}, IsArray{0}, MetaFlag{1}
								PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{25}, Version{1}, IsArray{0}, MetaFlag{0}
									int m_FileID // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
									SInt64 m_PathID // ByteSize{8}, Index{27}, Version{1}, IsArray{0}, MetaFlag{800001}
								int requiredNumberOfEncounters // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
								int requiredCharacter // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireCharacter // ByteSize{1}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{4100}
								int requiredTileset // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireTileset // ByteSize{1}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{4100}
								int saveFlagToCheck // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireFlag // ByteSize{1}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{4100}
								UInt8 requireDemoMode // ByteSize{1}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector includedRoomTables // ByteSize{ffffffff}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{32}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GenericRoomTable> data // ByteSize{c}, Index{33}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{35}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: Dungeonator.SharedInjectionData
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	ProceduralFlowModifierData InjectionData // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
			ProceduralFlowModifierData data // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{0}, MetaFlag{8000}
				string annotation // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 DEBUG_FORCE_SPAWN // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 OncePerRun // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
				vector placementRules // ByteSize{ffffffff}, Index{16}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$GenericRoomTable> roomTable // ByteSize{c}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$PrototypeDungeonRoom> exactRoom // ByteSize{c}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{800001}
				UInt8 IsWarpWing // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 RequiresMasteryToken // ByteSize{1}, Index{21}, Version{1}, IsArray{0}, MetaFlag{4100}
				float chanceToLock // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
				float selectionWeight // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{0}
				float chanceToSpawn // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonPlaceable> RequiredValidPlaceable // ByteSize{c}, Index{25}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{27}, Version{1}, IsArray{0}, MetaFlag{800001}
				DungeonPrerequisite prerequisites // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{29}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite data // ByteSize{ffffffff}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{8000}
							int prerequisiteType // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
							int prerequisiteOperation // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
							int statToCheck // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
							int maxToCheck // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{0}
							float comparisonValue // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 useSessionStatValue // ByteSize{1}, Index{31}, Version{1}, IsArray{0}, MetaFlag{4100}
							string encounteredObjectGuid // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{35}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{36}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{38}, Version{1}, IsArray{0}, MetaFlag{800001}
							int requiredNumberOfEncounters // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
							int requiredCharacter // ByteSize{4}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireCharacter // ByteSize{1}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{4100}
							int requiredTileset // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireTileset // ByteSize{1}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{4100}
							int saveFlagToCheck // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireFlag // ByteSize{1}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 requireDemoMode // ByteSize{1}, Index{40}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 CanBeForcedSecret // ByteSize{1}, Index{41}, Version{1}, IsArray{0}, MetaFlag{4100}
				int RandomNodeChildMinDistanceFromEntrance // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$PrototypeDungeonRoom> exactSecondaryRoom // ByteSize{c}, Index{43}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{44}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{45}, Version{1}, IsArray{0}, MetaFlag{800001}
				int framedCombatNodes // ByteSize{4}, Index{46}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 UseInvalidWeightAsNoInjection // ByteSize{1}, Index{47}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 PreventInjectionOfFailedPrerequisites // ByteSize{1}, Index{48}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsNPCCell // ByteSize{1}, Index{49}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IgnoreUnmetPrerequisiteEntries // ByteSize{1}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 OnlyOne // ByteSize{1}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{4100}
	float ChanceToSpawnOne // ByteSize{4}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{0}
	vector AttachedInjectionData // ByteSize{ffffffff}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{4e}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$SharedInjectionData> data // ByteSize{c}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{52}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: DungeonFlow
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	PPtr<$GenericRoomTable> fallbackRoomTable // ByteSize{c}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{e}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GenericRoomTable> phantomRoomTable // ByteSize{c}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{11}, Version{1}, IsArray{0}, MetaFlag{800001}
	DungeonFlowSubtypeRestriction subtypeRestrictions // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{13}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonFlowSubtypeRestriction data // ByteSize{18}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
				int baseCategoryRestriction // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
				int normalSubcategoryRestriction // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
				int bossSubcategoryRestriction // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
				int specialSubcategoryRestriction // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
				int secretSubcategoryRestriction // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
				int maximumRoomsOfSubtype // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
	DungeonFlowNode m_nodes // ByteSize{ffffffff}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{1d}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonFlowNode data // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{8000}
				UInt8 isSubchainStandin // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
				int nodeType // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
				int roomCategory // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
				float percentChance // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{0}
				int priority // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$PrototypeDungeonRoom> overrideExactRoom // ByteSize{c}, Index{25}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{27}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$GenericRoomTable> overrideRoomTable // ByteSize{c}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{800001}
				UInt8 capSubchain // ByteSize{1}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{4100}
				string subchainIdentifier // ByteSize{ffffffff}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{2d}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 limitedCopiesOfSubchain // ByteSize{1}, Index{30}, Version{1}, IsArray{0}, MetaFlag{4100}
				int maxCopiesOfSubchain // ByteSize{4}, Index{31}, Version{1}, IsArray{0}, MetaFlag{0}
				vector subchainIdentifiers // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{c000}
						int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
						string data // ByteSize{ffffffff}, Index{35}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{1}, MetaFlag{4001}
								int size // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{1}
								char data // ByteSize{1}, Index{38}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 receivesCaps // ByteSize{1}, Index{39}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 isWarpWingEntrance // ByteSize{1}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 handlesOwnWarping // ByteSize{1}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{4100}
				int forcedDoorType // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{0}
				int loopForcedDoorType // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 nodeExpands // ByteSize{1}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{4100}
				string initialChainPrototype // ByteSize{ffffffff}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{40}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{42}, Version{1}, IsArray{0}, MetaFlag{1}
				ChainRule chainRules // ByteSize{ffffffff}, Index{43}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{44}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{45}, Version{1}, IsArray{0}, MetaFlag{0}
						ChainRule data // ByteSize{ffffffff}, Index{46}, Version{1}, IsArray{0}, MetaFlag{8000}
							string form // ByteSize{ffffffff}, Index{47}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{48}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{49}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{1}
							string target // ByteSize{ffffffff}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{4c}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{1}
							float weight // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 mandatory // ByteSize{1}, Index{50}, Version{1}, IsArray{0}, MetaFlag{4100}
				int minChainLength // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{0}
				int maxChainLength // ByteSize{4}, Index{52}, Version{1}, IsArray{0}, MetaFlag{0}
				int minChildrenToBuild // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
				int maxChildrenToBuild // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 canBuildDuplicateChildren // ByteSize{1}, Index{55}, Version{1}, IsArray{0}, MetaFlag{4100}
				string parentNodeGuid // ByteSize{ffffffff}, Index{56}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{57}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{58}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{59}, Version{1}, IsArray{0}, MetaFlag{1}
				vector childNodeGuids // ByteSize{ffffffff}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{5b}, Version{1}, IsArray{1}, MetaFlag{c000}
						int size // ByteSize{4}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{0}
						string data // ByteSize{ffffffff}, Index{5d}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{5e}, Version{1}, IsArray{1}, MetaFlag{4001}
								int size // ByteSize{4}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{1}
								char data // ByteSize{1}, Index{60}, Version{1}, IsArray{0}, MetaFlag{1}
				string loopTargetNodeGuid // ByteSize{ffffffff}, Index{61}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{62}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{63}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{64}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 loopTargetIsOneWay // ByteSize{1}, Index{65}, Version{1}, IsArray{0}, MetaFlag{4100}
				string guidAsString // ByteSize{ffffffff}, Index{66}, Version{1}, IsArray{0}, MetaFlag{8001}
					Array Array // ByteSize{ffffffff}, Index{67}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{68}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{69}, Version{1}, IsArray{0}, MetaFlag{1}
				PPtr<$DungeonFlow> flow // ByteSize{c}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{6c}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector m_nodeGuids // ByteSize{ffffffff}, Index{6d}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{6e}, Version{1}, IsArray{1}, MetaFlag{c000}
			int size // ByteSize{4}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{0}
			string data // ByteSize{ffffffff}, Index{70}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{71}, Version{1}, IsArray{1}, MetaFlag{4001}
					int size // ByteSize{4}, Index{72}, Version{1}, IsArray{0}, MetaFlag{1}
					char data // ByteSize{1}, Index{73}, Version{1}, IsArray{0}, MetaFlag{1}
	string m_firstNodeGuid // ByteSize{ffffffff}, Index{74}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{75}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{76}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{77}, Version{1}, IsArray{0}, MetaFlag{1}
	ProceduralFlowModifierData flowInjectionData // ByteSize{ffffffff}, Index{78}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{79}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{7a}, Version{1}, IsArray{0}, MetaFlag{0}
			ProceduralFlowModifierData data // ByteSize{ffffffff}, Index{7b}, Version{1}, IsArray{0}, MetaFlag{8000}
				string annotation // ByteSize{ffffffff}, Index{7c}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{7d}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{7e}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{7f}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 DEBUG_FORCE_SPAWN // ByteSize{1}, Index{80}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 OncePerRun // ByteSize{1}, Index{81}, Version{1}, IsArray{0}, MetaFlag{4100}
				vector placementRules // ByteSize{ffffffff}, Index{82}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{83}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{84}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{85}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$GenericRoomTable> roomTable // ByteSize{c}, Index{86}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{87}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{88}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$PrototypeDungeonRoom> exactRoom // ByteSize{c}, Index{89}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{8a}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{8b}, Version{1}, IsArray{0}, MetaFlag{800001}
				UInt8 IsWarpWing // ByteSize{1}, Index{8c}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 RequiresMasteryToken // ByteSize{1}, Index{8d}, Version{1}, IsArray{0}, MetaFlag{4100}
				float chanceToLock // ByteSize{4}, Index{8e}, Version{1}, IsArray{0}, MetaFlag{0}
				float selectionWeight // ByteSize{4}, Index{8f}, Version{1}, IsArray{0}, MetaFlag{0}
				float chanceToSpawn // ByteSize{4}, Index{90}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonPlaceable> RequiredValidPlaceable // ByteSize{c}, Index{91}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{92}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{93}, Version{1}, IsArray{0}, MetaFlag{800001}
				DungeonPrerequisite prerequisites // ByteSize{ffffffff}, Index{94}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{95}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{96}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite data // ByteSize{ffffffff}, Index{97}, Version{1}, IsArray{0}, MetaFlag{8000}
							int prerequisiteType // ByteSize{4}, Index{98}, Version{1}, IsArray{0}, MetaFlag{0}
							int prerequisiteOperation // ByteSize{4}, Index{99}, Version{1}, IsArray{0}, MetaFlag{0}
							int statToCheck // ByteSize{4}, Index{9a}, Version{1}, IsArray{0}, MetaFlag{0}
							int maxToCheck // ByteSize{4}, Index{9b}, Version{1}, IsArray{0}, MetaFlag{0}
							float comparisonValue // ByteSize{4}, Index{9c}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 useSessionStatValue // ByteSize{1}, Index{9d}, Version{1}, IsArray{0}, MetaFlag{4100}
							string encounteredObjectGuid // ByteSize{ffffffff}, Index{9e}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{9f}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{a0}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{a1}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{a2}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{a3}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{a4}, Version{1}, IsArray{0}, MetaFlag{800001}
							int requiredNumberOfEncounters // ByteSize{4}, Index{a5}, Version{1}, IsArray{0}, MetaFlag{0}
							int requiredCharacter // ByteSize{4}, Index{a6}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireCharacter // ByteSize{1}, Index{a7}, Version{1}, IsArray{0}, MetaFlag{4100}
							int requiredTileset // ByteSize{4}, Index{a8}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireTileset // ByteSize{1}, Index{a9}, Version{1}, IsArray{0}, MetaFlag{4100}
							int saveFlagToCheck // ByteSize{4}, Index{aa}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireFlag // ByteSize{1}, Index{ab}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 requireDemoMode // ByteSize{1}, Index{ac}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 CanBeForcedSecret // ByteSize{1}, Index{ad}, Version{1}, IsArray{0}, MetaFlag{4100}
				int RandomNodeChildMinDistanceFromEntrance // ByteSize{4}, Index{ae}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$PrototypeDungeonRoom> exactSecondaryRoom // ByteSize{c}, Index{af}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{b0}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{b1}, Version{1}, IsArray{0}, MetaFlag{800001}
				int framedCombatNodes // ByteSize{4}, Index{b2}, Version{1}, IsArray{0}, MetaFlag{0}
	vector sharedInjectionData // ByteSize{ffffffff}, Index{b3}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{b4}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{b5}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$SharedInjectionData> data // ByteSize{c}, Index{b6}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{b7}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{b8}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: Dungeonator.DungeonPlaceable
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int width // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	int height // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 isPassable // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 roomSequential // ByteSize{1}, Index{f}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 respectsEncounterableDifferentiator // ByteSize{1}, Index{10}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 UsePrefabTransformOffset // ByteSize{1}, Index{11}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 MarkSpawnedItemsAsRatIgnored // ByteSize{1}, Index{12}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 DebugThisPlaceable // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsAnnexTable // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{4100}
	DungeonPlaceableVariant variantTiers // ByteSize{ffffffff}, Index{15}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{16}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonPlaceableVariant data // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{0}, MetaFlag{8000}
				float percentChance // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
				Vector2f unitOffset // ByteSize{8}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{200000}
				PPtr<$GameObject> nonDatabasePlaceable // ByteSize{c}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{800001}
				string enemyPlaceableGuid // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}
				int pickupObjectPlaceableId // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 forceBlackPhantom // ByteSize{1}, Index{25}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 addDebrisObject // ByteSize{1}, Index{26}, Version{1}, IsArray{0}, MetaFlag{4100}
				DungeonPrerequisite prerequisites // ByteSize{ffffffff}, Index{27}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite data // ByteSize{ffffffff}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{8000}
							int prerequisiteType // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{0}
							int prerequisiteOperation // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
							int statToCheck // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
							int maxToCheck // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
							float comparisonValue // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 useSessionStatValue // ByteSize{1}, Index{30}, Version{1}, IsArray{0}, MetaFlag{4100}
							string encounteredObjectGuid // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{33}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{34}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{35}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{36}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{37}, Version{1}, IsArray{0}, MetaFlag{800001}
							int requiredNumberOfEncounters // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{0}
							int requiredCharacter // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireCharacter // ByteSize{1}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{4100}
							int requiredTileset // ByteSize{4}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireTileset // ByteSize{1}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{4100}
							int saveFlagToCheck // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireFlag // ByteSize{1}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 requireDemoMode // ByteSize{1}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{4100}
				DungeonPlaceableRoomMaterialRequirement materialRequirements // ByteSize{ffffffff}, Index{40}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{41}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPlaceableRoomMaterialRequirement data // ByteSize{9}, Index{43}, Version{1}, IsArray{0}, MetaFlag{8000}
							int TargetTileset // ByteSize{4}, Index{44}, Version{1}, IsArray{0}, MetaFlag{0}
							int RoomMaterial // ByteSize{4}, Index{45}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 RequireMaterial // ByteSize{1}, Index{46}, Version{1}, IsArray{0}, MetaFlag{4100}

// classID{142}: AssetBundle
AssetBundle Base // ByteSize{ffffffff}, Index{0}, Version{3}, IsArray{0}, MetaFlag{8000}
	string m_Name // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{1}
	vector m_PreloadTable // ByteSize{ffffffff}, Index{5}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{6}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{7}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<Object> data // ByteSize{c}, Index{8}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{9}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{a}, Version{1}, IsArray{0}, MetaFlag{800001}
	map m_Container // ByteSize{ffffffff}, Index{b}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
			pair data // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{0}, MetaFlag{8000}
				string first // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{12}, Version{1}, IsArray{0}, MetaFlag{1}
				AssetInfo second // ByteSize{14}, Index{13}, Version{1}, IsArray{0}, MetaFlag{0}
					int preloadIndex // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
					int preloadSize // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
					PPtr<Object> asset // ByteSize{c}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{18}, Version{1}, IsArray{0}, MetaFlag{800001}
	AssetInfo m_MainAsset // ByteSize{14}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
		int preloadIndex // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
		int preloadSize // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<Object> asset // ByteSize{c}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
	unsigned int m_RuntimeCompatibility // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
	string m_AssetBundleName // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}
	vector m_Dependencies // ByteSize{ffffffff}, Index{24}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{25}, Version{1}, IsArray{1}, MetaFlag{c000}
			int size // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{0}
			string data // ByteSize{ffffffff}, Index{27}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{1}, MetaFlag{4001}
					int size // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{1}
					char data // ByteSize{1}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{1}
	bool m_IsStreamedSceneAssetBundle // ByteSize{1}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{4000}
	int m_ExplicitDataLayout // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
	int m_PathFlags // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
	map m_SceneHashes // ByteSize{ffffffff}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{2f}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
			pair data // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{0}, MetaFlag{8000}
				string first // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{35}, Version{1}, IsArray{0}, MetaFlag{1}
				string second // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{37}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{39}, Version{1}, IsArray{0}, MetaFlag{1}


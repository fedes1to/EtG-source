// classID{115}: MonoScript
MonoScript Base // ByteSize{ffffffff}, Index{0}, Version{4}, IsArray{0}, MetaFlag{8000}
	string m_Name // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{1}
	int m_ExecutionOrder // ByteSize{4}, Index{5}, Version{1}, IsArray{0}, MetaFlag{10}
	Hash128 m_PropertiesHash // ByteSize{10}, Index{6}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[0] // ByteSize{1}, Index{7}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[1] // ByteSize{1}, Index{8}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[2] // ByteSize{1}, Index{9}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[3] // ByteSize{1}, Index{a}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[4] // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[5] // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[6] // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[7] // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[8] // ByteSize{1}, Index{f}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[9] // ByteSize{1}, Index{10}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[10] // ByteSize{1}, Index{11}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[11] // ByteSize{1}, Index{12}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[12] // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[13] // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[14] // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[15] // ByteSize{1}, Index{16}, Version{1}, IsArray{0}, MetaFlag{10}
	string m_ClassName // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{0}, MetaFlag{8010}
		Array Array // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{1}, MetaFlag{4011}
			int size // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{11}
			char data // ByteSize{1}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{11}
	string m_Namespace // ByteSize{ffffffff}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{8010}
		Array Array // ByteSize{ffffffff}, Index{1c}, Version{1}, IsArray{1}, MetaFlag{4011}
			int size // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{11}
			char data // ByteSize{1}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{11}
	string m_AssemblyName // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{8010}
		Array Array // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{1}, MetaFlag{4011}
			int size // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{11}
			char data // ByteSize{1}, Index{22}, Version{1}, IsArray{0}, MetaFlag{11}
	bool m_IsEditorScript // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{4}: Transform
Transform Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	Quaternionf m_LocalRotation // ByteSize{10}, Index{4}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{5}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{200000}
		float z // ByteSize{4}, Index{7}, Version{1}, IsArray{0}, MetaFlag{200000}
		float w // ByteSize{4}, Index{8}, Version{1}, IsArray{0}, MetaFlag{200000}
	Vector3f m_LocalPosition // ByteSize{c}, Index{9}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{b}, Version{1}, IsArray{0}, MetaFlag{200000}
		float z // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{200000}
	Vector3f m_LocalScale // ByteSize{c}, Index{d}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{200000}
		float z // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{200000}
	vector m_Children // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{0}, MetaFlag{8041}
		Array Array // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{1}, MetaFlag{4041}
			int size // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{41}
			PPtr<Transform> data // ByteSize{c}, Index{14}, Version{1}, IsArray{0}, MetaFlag{41}
				int m_FileID // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{41}
				SInt64 m_PathID // ByteSize{8}, Index{16}, Version{1}, IsArray{0}, MetaFlag{41}
	PPtr<Transform> m_Father // ByteSize{c}, Index{17}, Version{1}, IsArray{0}, MetaFlag{1}
		int m_FileID // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{1}
		SInt64 m_PathID // ByteSize{8}, Index{19}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{1}: GameObject
GameObject Base // ByteSize{ffffffff}, Index{0}, Version{5}, IsArray{0}, MetaFlag{8000}
	vector m_Component // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8041}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4041}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
			ComponentPair data // ByteSize{c}, Index{4}, Version{1}, IsArray{0}, MetaFlag{41}
				PPtr<Component> component // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{41}
					int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{41}
					SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{41}
	unsigned int m_Layer // ByteSize{4}, Index{8}, Version{1}, IsArray{0}, MetaFlag{0}
	string m_Name // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{a}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt16 m_Tag // ByteSize{2}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_IsActive // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}

// classID{142}: AssetBundle
AssetBundle Base // ByteSize{ffffffff}, Index{0}, Version{3}, IsArray{0}, MetaFlag{8000}
	string m_Name // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{1}
	vector m_PreloadTable // ByteSize{ffffffff}, Index{5}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{6}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{7}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<Object> data // ByteSize{c}, Index{8}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{9}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{a}, Version{1}, IsArray{0}, MetaFlag{800001}
	map m_Container // ByteSize{ffffffff}, Index{b}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
			pair data // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{0}, MetaFlag{8000}
				string first // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{12}, Version{1}, IsArray{0}, MetaFlag{1}
				AssetInfo second // ByteSize{14}, Index{13}, Version{1}, IsArray{0}, MetaFlag{0}
					int preloadIndex // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
					int preloadSize // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
					PPtr<Object> asset // ByteSize{c}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{18}, Version{1}, IsArray{0}, MetaFlag{800001}
	AssetInfo m_MainAsset // ByteSize{14}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
		int preloadIndex // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
		int preloadSize // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<Object> asset // ByteSize{c}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
	unsigned int m_RuntimeCompatibility // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
	string m_AssetBundleName // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}
	vector m_Dependencies // ByteSize{ffffffff}, Index{24}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{25}, Version{1}, IsArray{1}, MetaFlag{c000}
			int size // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{0}
			string data // ByteSize{ffffffff}, Index{27}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{1}, MetaFlag{4001}
					int size // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{1}
					char data // ByteSize{1}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{1}
	bool m_IsStreamedSceneAssetBundle // ByteSize{1}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{4000}
	int m_ExplicitDataLayout // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
	int m_PathFlags // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
	map m_SceneHashes // ByteSize{ffffffff}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{2f}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
			pair data // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{0}, MetaFlag{8000}
				string first // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{35}, Version{1}, IsArray{0}, MetaFlag{1}
				string second // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{37}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{39}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{114}: Dungeonator.Dungeon
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int contentSource // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	int DungeonSeed // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	string DungeonShortName // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{11}, Version{1}, IsArray{0}, MetaFlag{1}
	string DungeonFloorName // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{13}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{1}
	string DungeonFloorLevelTextOverride // ByteSize{ffffffff}, Index{16}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{19}, Version{1}, IsArray{0}, MetaFlag{1}
	int LevelOverrideType // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
	DebugDungeonSettings debugSettings // ByteSize{e}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{8000}
		UInt8 RAPID_DEBUG_DUNGEON_ITERATION_SEEKER // ByteSize{1}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 RAPID_DEBUG_DUNGEON_ITERATION // ByteSize{1}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{4100}
		int RAPID_DEBUG_DUNGEON_COUNT // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
		UInt8 GENERATION_VIEWER_MODE // ByteSize{1}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 FULL_MINIMAP_VISIBILITY // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 COOP_TEST // ByteSize{1}, Index{21}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 DISABLE_ENEMIES // ByteSize{1}, Index{22}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 DISABLE_LOOPS // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 DISABLE_SECRET_ROOM_COVERS // ByteSize{1}, Index{24}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 DISABLE_OUTLINES // ByteSize{1}, Index{25}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 WALLS_ARE_PITS // ByteSize{1}, Index{26}, Version{1}, IsArray{0}, MetaFlag{4100}
	SemioticDungeonGenSettings PatternSettings // ByteSize{ffffffff}, Index{27}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector flows // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{29}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonFlow> data // ByteSize{c}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{800001}
		ExtraIncludedRoomData mandatoryExtraRooms // ByteSize{ffffffff}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{2f}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
				ExtraIncludedRoomData data // ByteSize{c}, Index{31}, Version{1}, IsArray{0}, MetaFlag{0}
					PPtr<$PrototypeDungeonRoom> room // ByteSize{c}, Index{32}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{33}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{34}, Version{1}, IsArray{0}, MetaFlag{800001}
		ExtraIncludedRoomData optionalExtraRooms // ByteSize{ffffffff}, Index{35}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{0}
				ExtraIncludedRoomData data // ByteSize{c}, Index{38}, Version{1}, IsArray{0}, MetaFlag{0}
					PPtr<$PrototypeDungeonRoom> room // ByteSize{c}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{800001}
		int MAX_GENERATION_ATTEMPTS // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{0}
		UInt8 DEBUG_RENDER_CANVASES_SEPARATELY // ByteSize{1}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 ForceRegenerationOfCharacters // ByteSize{1}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 ActuallyGenerateTilemap // ByteSize{1}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{4100}
	TilemapDecoSettings decoSettings // ByteSize{ffffffff}, Index{40}, Version{1}, IsArray{0}, MetaFlag{8000}
		WeightedIntCollection standardRoomVisualSubtypes // ByteSize{ffffffff}, Index{41}, Version{1}, IsArray{0}, MetaFlag{8000}
			WeightedInt elements // ByteSize{ffffffff}, Index{42}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{43}, Version{1}, IsArray{1}, MetaFlag{8000}
					int size // ByteSize{4}, Index{44}, Version{1}, IsArray{0}, MetaFlag{0}
					WeightedInt data // ByteSize{ffffffff}, Index{45}, Version{1}, IsArray{0}, MetaFlag{8000}
						string annotation // ByteSize{ffffffff}, Index{46}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{47}, Version{1}, IsArray{1}, MetaFlag{4001}
								int size // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{1}
								char data // ByteSize{1}, Index{49}, Version{1}, IsArray{0}, MetaFlag{1}
						int value // ByteSize{4}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{0}
						float weight // ByteSize{4}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite additionalPrerequisites // ByteSize{ffffffff}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{4d}, Version{1}, IsArray{1}, MetaFlag{8000}
								int size // ByteSize{4}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{0}
								DungeonPrerequisite data // ByteSize{ffffffff}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{8000}
									int prerequisiteType // ByteSize{4}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
									int prerequisiteOperation // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{0}
									int statToCheck // ByteSize{4}, Index{52}, Version{1}, IsArray{0}, MetaFlag{0}
									int maxToCheck // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
									float comparisonValue // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
									UInt8 useSessionStatValue // ByteSize{1}, Index{55}, Version{1}, IsArray{0}, MetaFlag{4100}
									string encounteredObjectGuid // ByteSize{ffffffff}, Index{56}, Version{1}, IsArray{0}, MetaFlag{8000}
										Array Array // ByteSize{ffffffff}, Index{57}, Version{1}, IsArray{1}, MetaFlag{4001}
											int size // ByteSize{4}, Index{58}, Version{1}, IsArray{0}, MetaFlag{1}
											char data // ByteSize{1}, Index{59}, Version{1}, IsArray{0}, MetaFlag{1}
									PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{0}
										int m_FileID // ByteSize{4}, Index{5b}, Version{1}, IsArray{0}, MetaFlag{800001}
										SInt64 m_PathID // ByteSize{8}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{800001}
									int requiredNumberOfEncounters // ByteSize{4}, Index{5d}, Version{1}, IsArray{0}, MetaFlag{0}
									int requiredCharacter // ByteSize{4}, Index{5e}, Version{1}, IsArray{0}, MetaFlag{0}
									UInt8 requireCharacter // ByteSize{1}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{4100}
									int requiredTileset // ByteSize{4}, Index{60}, Version{1}, IsArray{0}, MetaFlag{0}
									UInt8 requireTileset // ByteSize{1}, Index{61}, Version{1}, IsArray{0}, MetaFlag{4100}
									int saveFlagToCheck // ByteSize{4}, Index{62}, Version{1}, IsArray{0}, MetaFlag{0}
									UInt8 requireFlag // ByteSize{1}, Index{63}, Version{1}, IsArray{0}, MetaFlag{4100}
									UInt8 requireDemoMode // ByteSize{1}, Index{64}, Version{1}, IsArray{0}, MetaFlag{4100}
		int decalLayerStyle // ByteSize{4}, Index{65}, Version{1}, IsArray{0}, MetaFlag{0}
		int decalSize // ByteSize{4}, Index{66}, Version{1}, IsArray{0}, MetaFlag{0}
		int decalSpacing // ByteSize{4}, Index{67}, Version{1}, IsArray{0}, MetaFlag{0}
		int decalExpansion // ByteSize{4}, Index{68}, Version{1}, IsArray{0}, MetaFlag{0}
		int patternLayerStyle // ByteSize{4}, Index{69}, Version{1}, IsArray{0}, MetaFlag{0}
		int patternSize // ByteSize{4}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{0}
		int patternSpacing // ByteSize{4}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{0}
		int patternExpansion // ByteSize{4}, Index{6c}, Version{1}, IsArray{0}, MetaFlag{0}
		float decoPatchFrequency // ByteSize{4}, Index{6d}, Version{1}, IsArray{0}, MetaFlag{0}
		ColorRGBA ambientLightColor // ByteSize{10}, Index{6e}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{70}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{71}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{72}, Version{1}, IsArray{0}, MetaFlag{200001}
		ColorRGBA ambientLightColorTwo // ByteSize{10}, Index{73}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{74}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{75}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{76}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{77}, Version{1}, IsArray{0}, MetaFlag{200001}
		ColorRGBA lowQualityAmbientLightColor // ByteSize{10}, Index{78}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{79}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{7a}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{7b}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{7c}, Version{1}, IsArray{0}, MetaFlag{200001}
		ColorRGBA lowQualityAmbientLightColorTwo // ByteSize{10}, Index{7d}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{7e}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{7f}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{80}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{81}, Version{1}, IsArray{0}, MetaFlag{200001}
		Vector4f lowQualityCheapLightVector // ByteSize{10}, Index{82}, Version{1}, IsArray{0}, MetaFlag{200000}
			float x // ByteSize{4}, Index{83}, Version{1}, IsArray{0}, MetaFlag{200000}
			float y // ByteSize{4}, Index{84}, Version{1}, IsArray{0}, MetaFlag{200000}
			float z // ByteSize{4}, Index{85}, Version{1}, IsArray{0}, MetaFlag{200000}
			float w // ByteSize{4}, Index{86}, Version{1}, IsArray{0}, MetaFlag{200000}
		UInt8 UsesAlienFXFloorColor // ByteSize{1}, Index{87}, Version{1}, IsArray{0}, MetaFlag{4100}
		ColorRGBA AlienFXFloorColor // ByteSize{10}, Index{88}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{89}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{8a}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{8b}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{8c}, Version{1}, IsArray{0}, MetaFlag{200001}
		UInt8 generateLights // ByteSize{1}, Index{8d}, Version{1}, IsArray{0}, MetaFlag{4100}
		float lightCullingPercentage // ByteSize{4}, Index{8e}, Version{1}, IsArray{0}, MetaFlag{0}
		int lightOverlapRadius // ByteSize{4}, Index{8f}, Version{1}, IsArray{0}, MetaFlag{0}
		float nearestAllowedLight // ByteSize{4}, Index{90}, Version{1}, IsArray{0}, MetaFlag{0}
		int minLightExpanseWidth // ByteSize{4}, Index{91}, Version{1}, IsArray{0}, MetaFlag{0}
		float lightHeight // ByteSize{4}, Index{92}, Version{1}, IsArray{0}, MetaFlag{0}
		vector lightCookies // ByteSize{ffffffff}, Index{93}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{94}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{95}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$Texture2D> data // ByteSize{c}, Index{96}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{97}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{98}, Version{1}, IsArray{0}, MetaFlag{800001}
		UInt8 debug_view // ByteSize{1}, Index{99}, Version{1}, IsArray{0}, MetaFlag{4100}
	TileIndices tileIndices // ByteSize{ffffffff}, Index{9a}, Version{1}, IsArray{0}, MetaFlag{8000}
		int tilesetId // ByteSize{4}, Index{9b}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<$tk2dSpriteCollectionData> dungeonCollection // ByteSize{c}, Index{9c}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{9d}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{9e}, Version{1}, IsArray{0}, MetaFlag{800001}
		UInt8 dungeonCollectionSupportsDiagonalWalls // ByteSize{1}, Index{9f}, Version{1}, IsArray{0}, MetaFlag{4100}
		AOTileIndices aoTileIndices // ByteSize{6c}, Index{a0}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorTileIndex // ByteSize{4}, Index{a1}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallBaseTileIndex // ByteSize{4}, Index{a2}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallTileRightIndex // ByteSize{4}, Index{a3}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallTileLeftIndex // ByteSize{4}, Index{a4}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallTileBothIndex // ByteSize{4}, Index{a5}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOTopFacewallRightIndex // ByteSize{4}, Index{a6}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOTopFacewallLeftIndex // ByteSize{4}, Index{a7}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOTopFacewallBothIndex // ByteSize{4}, Index{a8}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallLeft // ByteSize{4}, Index{a9}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallRight // ByteSize{4}, Index{aa}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallBoth // ByteSize{4}, Index{ab}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceLeft // ByteSize{4}, Index{ac}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceRight // ByteSize{4}, Index{ad}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceBoth // ByteSize{4}, Index{ae}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceLeftWallRight // ByteSize{4}, Index{af}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceRightWallLeft // ByteSize{4}, Index{b0}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallUpAndLeft // ByteSize{4}, Index{b1}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallUpAndRight // ByteSize{4}, Index{b2}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallUpAndBoth // ByteSize{4}, Index{b3}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNortheast // ByteSize{4}, Index{b4}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNortheastLower // ByteSize{4}, Index{b5}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNortheastLowerJoint // ByteSize{4}, Index{b6}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNorthwest // ByteSize{4}, Index{b7}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNorthwestLower // ByteSize{4}, Index{b8}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNorthwestLowerJoint // ByteSize{4}, Index{b9}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallDiagonalNortheast // ByteSize{4}, Index{ba}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallDiagonalNorthwest // ByteSize{4}, Index{bb}, Version{1}, IsArray{0}, MetaFlag{0}
		UInt8 placeBorders // ByteSize{1}, Index{bc}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 placePits // ByteSize{1}, Index{bd}, Version{1}, IsArray{0}, MetaFlag{4100}
		TileIndexVariant chestHighWallIndices // ByteSize{ffffffff}, Index{be}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{bf}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{c0}, Version{1}, IsArray{0}, MetaFlag{0}
				TileIndexVariant data // ByteSize{10}, Index{c1}, Version{1}, IsArray{0}, MetaFlag{0}
					int index // ByteSize{4}, Index{c2}, Version{1}, IsArray{0}, MetaFlag{0}
					float likelihood // ByteSize{4}, Index{c3}, Version{1}, IsArray{0}, MetaFlag{0}
					int overrideLayerIndex // ByteSize{4}, Index{c4}, Version{1}, IsArray{0}, MetaFlag{0}
					int overrideIndex // ByteSize{4}, Index{c5}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<$TileIndexGrid> decalIndexGrid // ByteSize{c}, Index{c6}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{c7}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{c8}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$TileIndexGrid> patternIndexGrid // ByteSize{c}, Index{c9}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{ca}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{cb}, Version{1}, IsArray{0}, MetaFlag{800001}
		vector globalSecondBorderTiles // ByteSize{ffffffff}, Index{cc}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{cd}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{ce}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{cf}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<$TileIndexGrid> edgeDecorationTiles // ByteSize{c}, Index{d0}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{d1}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{d2}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector roomMaterialDefinitions // ByteSize{ffffffff}, Index{d3}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{d4}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{d5}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$DungeonMaterial> data // ByteSize{c}, Index{d6}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{d7}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{d8}, Version{1}, IsArray{0}, MetaFlag{800001}
	DungeonWingDefinition dungeonWingDefinitions // ByteSize{ffffffff}, Index{d9}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{da}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{db}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonWingDefinition data // ByteSize{ffffffff}, Index{dc}, Version{1}, IsArray{0}, MetaFlag{8000}
				WeightedIntCollection includedMaterialIndices // ByteSize{ffffffff}, Index{dd}, Version{1}, IsArray{0}, MetaFlag{8000}
					WeightedInt elements // ByteSize{ffffffff}, Index{de}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{df}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{e0}, Version{1}, IsArray{0}, MetaFlag{0}
							WeightedInt data // ByteSize{ffffffff}, Index{e1}, Version{1}, IsArray{0}, MetaFlag{8000}
								string annotation // ByteSize{ffffffff}, Index{e2}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{e3}, Version{1}, IsArray{1}, MetaFlag{4001}
										int size // ByteSize{4}, Index{e4}, Version{1}, IsArray{0}, MetaFlag{1}
										char data // ByteSize{1}, Index{e5}, Version{1}, IsArray{0}, MetaFlag{1}
								int value // ByteSize{4}, Index{e6}, Version{1}, IsArray{0}, MetaFlag{0}
								float weight // ByteSize{4}, Index{e7}, Version{1}, IsArray{0}, MetaFlag{0}
								DungeonPrerequisite additionalPrerequisites // ByteSize{ffffffff}, Index{e8}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{e9}, Version{1}, IsArray{1}, MetaFlag{8000}
										int size // ByteSize{4}, Index{ea}, Version{1}, IsArray{0}, MetaFlag{0}
										DungeonPrerequisite data // ByteSize{ffffffff}, Index{eb}, Version{1}, IsArray{0}, MetaFlag{8000}
											int prerequisiteType // ByteSize{4}, Index{ec}, Version{1}, IsArray{0}, MetaFlag{0}
											int prerequisiteOperation // ByteSize{4}, Index{ed}, Version{1}, IsArray{0}, MetaFlag{0}
											int statToCheck // ByteSize{4}, Index{ee}, Version{1}, IsArray{0}, MetaFlag{0}
											int maxToCheck // ByteSize{4}, Index{ef}, Version{1}, IsArray{0}, MetaFlag{0}
											float comparisonValue // ByteSize{4}, Index{f0}, Version{1}, IsArray{0}, MetaFlag{0}
											UInt8 useSessionStatValue // ByteSize{1}, Index{f1}, Version{1}, IsArray{0}, MetaFlag{4100}
											string encounteredObjectGuid // ByteSize{ffffffff}, Index{f2}, Version{1}, IsArray{0}, MetaFlag{8000}
												Array Array // ByteSize{ffffffff}, Index{f3}, Version{1}, IsArray{1}, MetaFlag{4001}
													int size // ByteSize{4}, Index{f4}, Version{1}, IsArray{0}, MetaFlag{1}
													char data // ByteSize{1}, Index{f5}, Version{1}, IsArray{0}, MetaFlag{1}
											PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{f6}, Version{1}, IsArray{0}, MetaFlag{0}
												int m_FileID // ByteSize{4}, Index{f7}, Version{1}, IsArray{0}, MetaFlag{800001}
												SInt64 m_PathID // ByteSize{8}, Index{f8}, Version{1}, IsArray{0}, MetaFlag{800001}
											int requiredNumberOfEncounters // ByteSize{4}, Index{f9}, Version{1}, IsArray{0}, MetaFlag{0}
											int requiredCharacter // ByteSize{4}, Index{fa}, Version{1}, IsArray{0}, MetaFlag{0}
											UInt8 requireCharacter // ByteSize{1}, Index{fb}, Version{1}, IsArray{0}, MetaFlag{4100}
											int requiredTileset // ByteSize{4}, Index{fc}, Version{1}, IsArray{0}, MetaFlag{0}
											UInt8 requireTileset // ByteSize{1}, Index{fd}, Version{1}, IsArray{0}, MetaFlag{4100}
											int saveFlagToCheck // ByteSize{4}, Index{fe}, Version{1}, IsArray{0}, MetaFlag{0}
											UInt8 requireFlag // ByteSize{1}, Index{ff}, Version{1}, IsArray{0}, MetaFlag{4100}
											UInt8 requireDemoMode // ByteSize{1}, Index{100}, Version{1}, IsArray{0}, MetaFlag{4100}
				float weight // ByteSize{4}, Index{101}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 canBeCriticalPath // ByteSize{1}, Index{102}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 canBeNoncriticalPath // ByteSize{1}, Index{103}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector pathGridDefinitions // ByteSize{ffffffff}, Index{104}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{105}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{106}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$TileIndexGrid> data // ByteSize{c}, Index{107}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{108}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{109}, Version{1}, IsArray{0}, MetaFlag{800001}
	DustUpVFX dungeonDustups // ByteSize{90}, Index{10a}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<$GameObject> runDustup // ByteSize{c}, Index{10b}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{10c}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{10d}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> waterDustup // ByteSize{c}, Index{10e}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{10f}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{110}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> additionalWaterDustup // ByteSize{c}, Index{111}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{112}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{113}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollNorthDustup // ByteSize{c}, Index{114}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{115}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{116}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollNorthEastDustup // ByteSize{c}, Index{117}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{118}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{119}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollEastDustup // ByteSize{c}, Index{11a}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{11b}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{11c}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollSouthEastDustup // ByteSize{c}, Index{11d}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{11e}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{11f}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollSouthDustup // ByteSize{c}, Index{120}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{121}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{122}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollSouthWestDustup // ByteSize{c}, Index{123}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{124}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{125}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollWestDustup // ByteSize{c}, Index{126}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{127}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{128}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollNorthWestDustup // ByteSize{c}, Index{129}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{12a}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{12b}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollLandDustup // ByteSize{c}, Index{12c}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{12d}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{12e}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DamageTypeEffectMatrix> damageTypeEffectMatrix // ByteSize{c}, Index{12f}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{130}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{131}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonTileStampData> stampData // ByteSize{c}, Index{132}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{133}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{134}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 UsesCustomFloorIdea // ByteSize{1}, Index{135}, Version{1}, IsArray{0}, MetaFlag{4100}
	RobotDaveIdea FloorIdea // ByteSize{ffffffff}, Index{136}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector ValidEasyEnemyPlaceables // ByteSize{ffffffff}, Index{137}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{138}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{139}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonPlaceable> data // ByteSize{c}, Index{13a}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{13b}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{13c}, Version{1}, IsArray{0}, MetaFlag{800001}
		vector ValidHardEnemyPlaceables // ByteSize{ffffffff}, Index{13d}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{13e}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{13f}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonPlaceable> data // ByteSize{c}, Index{140}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{141}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{142}, Version{1}, IsArray{0}, MetaFlag{800001}
		UInt8 UseWallSawblades // ByteSize{1}, Index{143}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseRollingLogsVertical // ByteSize{1}, Index{144}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseRollingLogsHorizontal // ByteSize{1}, Index{145}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseFloorPitTraps // ByteSize{1}, Index{146}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseFloorFlameTraps // ByteSize{1}, Index{147}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseFloorSpikeTraps // ByteSize{1}, Index{148}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseFloorConveyorBelts // ByteSize{1}, Index{149}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseCaveIns // ByteSize{1}, Index{14a}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseAlarmMushrooms // ByteSize{1}, Index{14b}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseMineCarts // ByteSize{1}, Index{14c}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseChandeliers // ByteSize{1}, Index{14d}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 CanIncludePits // ByteSize{1}, Index{14e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 PlaceDoors // ByteSize{1}, Index{14f}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$DungeonPlaceable> doorObjects // ByteSize{c}, Index{150}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{151}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{152}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonPlaceable> lockedDoorObjects // ByteSize{c}, Index{153}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{154}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{155}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonPlaceable> oneWayDoorObjects // ByteSize{c}, Index{156}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{157}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{158}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> oneWayDoorPressurePlate // ByteSize{c}, Index{159}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{15a}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{15b}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonPlaceable> phantomBlockerDoorObjects // ByteSize{c}, Index{15c}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{15d}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{15e}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonPlaceable> alternateDoorObjectsNakatomi // ByteSize{c}, Index{15f}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{160}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{161}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 UsesWallWarpWingDoors // ByteSize{1}, Index{162}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$GameObject> WarpWingDoorPrefab // ByteSize{c}, Index{163}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{164}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{165}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GenericLootTable> baseChestContents // ByteSize{c}, Index{166}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{167}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{168}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector SecretRoomSimpleTriggersFacewall // ByteSize{ffffffff}, Index{169}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{16a}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{16b}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{16c}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{16d}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{16e}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector SecretRoomSimpleTriggersSidewall // ByteSize{ffffffff}, Index{16f}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{170}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{171}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{172}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{173}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{174}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector SecretRoomComplexTriggers // ByteSize{ffffffff}, Index{175}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{176}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{177}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$ComplexSecretRoomTrigger> data // ByteSize{c}, Index{178}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{179}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{17a}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> SecretRoomDoorSparkVFX // ByteSize{c}, Index{17b}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{17c}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{17d}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> SecretRoomHorizontalPoofVFX // ByteSize{c}, Index{17e}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{17f}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{180}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> SecretRoomVerticalPoofVFX // ByteSize{c}, Index{181}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{182}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{183}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> RatTrapdoor // ByteSize{c}, Index{184}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{185}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{186}, Version{1}, IsArray{0}, MetaFlag{800001}
	string NormalRatGUID // ByteSize{ffffffff}, Index{187}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{188}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{189}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{18a}, Version{1}, IsArray{0}, MetaFlag{1}
	PPtr<$SharedDungeonSettings> sharedSettingsPrefab // ByteSize{c}, Index{18b}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{18c}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{18d}, Version{1}, IsArray{0}, MetaFlag{800001}
	int BossMasteryTokenItemId // ByteSize{4}, Index{18e}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 UsesOverrideTertiaryBossSets // ByteSize{1}, Index{18f}, Version{1}, IsArray{0}, MetaFlag{4100}
	TertiaryBossRewardSet OverrideTertiaryRewardSets // ByteSize{ffffffff}, Index{190}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{191}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{192}, Version{1}, IsArray{0}, MetaFlag{0}
			TertiaryBossRewardSet data // ByteSize{ffffffff}, Index{193}, Version{1}, IsArray{0}, MetaFlag{8000}
				string annotation // ByteSize{ffffffff}, Index{194}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{195}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{196}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{197}, Version{1}, IsArray{0}, MetaFlag{1}
				float weight // ByteSize{4}, Index{198}, Version{1}, IsArray{0}, MetaFlag{0}
				vector dropIds // ByteSize{ffffffff}, Index{199}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{19a}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{19b}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{19c}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$GameObject> defaultPlayerPrefab // ByteSize{c}, Index{19d}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{19e}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{19f}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 StripPlayerOnArrival // ByteSize{1}, Index{1a0}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 SuppressEmergencyCrates // ByteSize{1}, Index{1a1}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 SetTutorialFlag // ByteSize{1}, Index{1a2}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 PlayerIsLight // ByteSize{1}, Index{1a3}, Version{1}, IsArray{0}, MetaFlag{4100}
	ColorRGBA PlayerLightColor // ByteSize{10}, Index{1a4}, Version{1}, IsArray{0}, MetaFlag{200000}
		float r // ByteSize{4}, Index{1a5}, Version{1}, IsArray{0}, MetaFlag{200001}
		float g // ByteSize{4}, Index{1a6}, Version{1}, IsArray{0}, MetaFlag{200001}
		float b // ByteSize{4}, Index{1a7}, Version{1}, IsArray{0}, MetaFlag{200001}
		float a // ByteSize{4}, Index{1a8}, Version{1}, IsArray{0}, MetaFlag{200001}
	float PlayerLightIntensity // ByteSize{4}, Index{1a9}, Version{1}, IsArray{0}, MetaFlag{0}
	float PlayerLightRadius // ByteSize{4}, Index{1aa}, Version{1}, IsArray{0}, MetaFlag{0}
	vector PrefabsToAutoSpawn // ByteSize{ffffffff}, Index{1ab}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{1ac}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{1ad}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{1ae}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{1af}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{1b0}, Version{1}, IsArray{0}, MetaFlag{800001}
	string musicEventName // ByteSize{ffffffff}, Index{1b1}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{1b2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{1b3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{1b4}, Version{1}, IsArray{0}, MetaFlag{1}


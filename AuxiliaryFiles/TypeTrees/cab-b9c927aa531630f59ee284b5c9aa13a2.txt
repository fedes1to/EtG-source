// classID{115}: MonoScript
MonoScript Base // ByteSize{ffffffff}, Index{0}, Version{4}, IsArray{0}, MetaFlag{8000}
	string m_Name // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{1}
	int m_ExecutionOrder // ByteSize{4}, Index{5}, Version{1}, IsArray{0}, MetaFlag{10}
	Hash128 m_PropertiesHash // ByteSize{10}, Index{6}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[0] // ByteSize{1}, Index{7}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[1] // ByteSize{1}, Index{8}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[2] // ByteSize{1}, Index{9}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[3] // ByteSize{1}, Index{a}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[4] // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[5] // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[6] // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[7] // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[8] // ByteSize{1}, Index{f}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[9] // ByteSize{1}, Index{10}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[10] // ByteSize{1}, Index{11}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[11] // ByteSize{1}, Index{12}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[12] // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[13] // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[14] // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{10}
		UInt8 bytes[15] // ByteSize{1}, Index{16}, Version{1}, IsArray{0}, MetaFlag{10}
	string m_ClassName // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{0}, MetaFlag{8010}
		Array Array // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{1}, MetaFlag{4011}
			int size // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{11}
			char data // ByteSize{1}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{11}
	string m_Namespace // ByteSize{ffffffff}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{8010}
		Array Array // ByteSize{ffffffff}, Index{1c}, Version{1}, IsArray{1}, MetaFlag{4011}
			int size // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{11}
			char data // ByteSize{1}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{11}
	string m_AssemblyName // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{8010}
		Array Array // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{1}, MetaFlag{4011}
			int size // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{11}
			char data // ByteSize{1}, Index{22}, Version{1}, IsArray{0}, MetaFlag{11}
	bool m_IsEditorScript // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{23}: MeshRenderer
MeshRenderer Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	bool m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 m_CastShadows // ByteSize{1}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 m_ReceiveShadows // ByteSize{1}, Index{6}, Version{1}, IsArray{0}, MetaFlag{100}
	UInt8 m_DynamicOccludee // ByteSize{1}, Index{7}, Version{1}, IsArray{0}, MetaFlag{100}
	UInt8 m_MotionVectors // ByteSize{1}, Index{8}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 m_LightProbeUsage // ByteSize{1}, Index{9}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 m_ReflectionProbeUsage // ByteSize{1}, Index{a}, Version{1}, IsArray{0}, MetaFlag{4000}
	UInt16 m_LightmapIndex // ByteSize{2}, Index{b}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt16 m_LightmapIndexDynamic // ByteSize{2}, Index{c}, Version{1}, IsArray{0}, MetaFlag{800001}
	Vector4f m_LightmapTilingOffset // ByteSize{10}, Index{d}, Version{1}, IsArray{0}, MetaFlag{a00001}
		float x // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{a00001}
		float y // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{a00001}
		float z // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{a00001}
		float w // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{a00001}
	Vector4f m_LightmapTilingOffsetDynamic // ByteSize{10}, Index{12}, Version{1}, IsArray{0}, MetaFlag{a00001}
		float x // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{a00001}
		float y // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{a00001}
		float z // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{a00001}
		float w // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{a00001}
	vector m_Materials // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<Material> data // ByteSize{c}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{800001}
	StaticBatchInfo m_StaticBatchInfo // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{1}
		UInt16 firstSubMesh // ByteSize{2}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{1}
		UInt16 subMeshCount // ByteSize{2}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{1}
	PPtr<Transform> m_StaticBatchRoot // ByteSize{c}, Index{20}, Version{1}, IsArray{0}, MetaFlag{1}
		int m_FileID // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{22}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<Transform> m_ProbeAnchor // ByteSize{c}, Index{23}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{25}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<GameObject> m_LightProbeVolumeOverride // ByteSize{c}, Index{26}, Version{1}, IsArray{0}, MetaFlag{4000}
		int m_FileID // ByteSize{4}, Index{27}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{28}, Version{1}, IsArray{0}, MetaFlag{800001}
	int m_SortingLayerID // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{800001}
	SInt16 m_SortingLayer // ByteSize{2}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{1}
	SInt16 m_SortingOrder // ByteSize{2}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{4001}
	PPtr<Mesh> m_AdditionalVertexStreams // ByteSize{c}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{1}
		int m_FileID // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{1}: GameObject
GameObject Base // ByteSize{ffffffff}, Index{0}, Version{5}, IsArray{0}, MetaFlag{8000}
	vector m_Component // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8041}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4041}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
			ComponentPair data // ByteSize{c}, Index{4}, Version{1}, IsArray{0}, MetaFlag{41}
				PPtr<Component> component // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{41}
					int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{41}
					SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{41}
	unsigned int m_Layer // ByteSize{4}, Index{8}, Version{1}, IsArray{0}, MetaFlag{0}
	string m_Name // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{a}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt16 m_Tag // ByteSize{2}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_IsActive // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}

// classID{33}: MeshFilter
MeshFilter Base // ByteSize{18}, Index{0}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	PPtr<Mesh> m_Mesh // ByteSize{c}, Index{4}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{5}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: SpeculativeRigidbody
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 CollideWithTileMap // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 CollideWithOthers // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{4100}
	Vector2f Velocity // ByteSize{8}, Index{e}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{200000}
	UInt8 CapVelocity // ByteSize{1}, Index{11}, Version{1}, IsArray{0}, MetaFlag{4100}
	Vector2f MaxVelocity // ByteSize{8}, Index{12}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{200000}
	UInt8 ForceAlwaysUpdate // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 CanPush // ByteSize{1}, Index{16}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 CanBePushed // ByteSize{1}, Index{17}, Version{1}, IsArray{0}, MetaFlag{4100}
	float PushSpeedModifier // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 CanCarry // ByteSize{1}, Index{19}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 CanBeCarried // ByteSize{1}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 PreventPiercing // ByteSize{1}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 SkipEmptyColliders // ByteSize{1}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$tk2dBaseSprite> TK2DSprite // ByteSize{c}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{1}
		int m_FileID // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 RecheckTriggers // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 UpdateCollidersOnRotation // ByteSize{1}, Index{21}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 UpdateCollidersOnScale // ByteSize{1}, Index{22}, Version{1}, IsArray{0}, MetaFlag{4100}
	Vector2f AxialScale // ByteSize{8}, Index{23}, Version{1}, IsArray{0}, MetaFlag{200001}
		float x // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{200001}
		float y // ByteSize{4}, Index{25}, Version{1}, IsArray{0}, MetaFlag{200001}
	DebugSettings DebugParams // ByteSize{7}, Index{26}, Version{1}, IsArray{0}, MetaFlag{8000}
		UInt8 ShowPosition // ByteSize{1}, Index{27}, Version{1}, IsArray{0}, MetaFlag{4100}
		int PositionHistory // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
		UInt8 ShowVelocity // ByteSize{1}, Index{29}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 ShowSlope // ByteSize{1}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IgnorePixelGrid // ByteSize{1}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{4101}
	PixelCollider PixelColliders // ByteSize{ffffffff}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{2d}, Version{1}, IsArray{1}, MetaFlag{8001}
			int size // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{1}
			PixelCollider data // ByteSize{ffffffff}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{8001}
				UInt8 Enabled // ByteSize{1}, Index{30}, Version{1}, IsArray{0}, MetaFlag{4101}
				int CollisionLayer // ByteSize{4}, Index{31}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 IsTrigger // ByteSize{1}, Index{32}, Version{1}, IsArray{0}, MetaFlag{4101}
				int ColliderGenerationMode // ByteSize{4}, Index{33}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 BagleUseFirstFrameOnly // ByteSize{1}, Index{34}, Version{1}, IsArray{0}, MetaFlag{4101}
				string SpecifyBagelFrame // ByteSize{ffffffff}, Index{35}, Version{1}, IsArray{0}, MetaFlag{8001}
					Array Array // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{38}, Version{1}, IsArray{0}, MetaFlag{1}
				int BagelColliderNumber // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualOffsetX // ByteSize{4}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualOffsetY // ByteSize{4}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualWidth // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualHeight // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualRadius // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualDiameter // ByteSize{4}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualLeftX // ByteSize{4}, Index{40}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualLeftY // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualRightX // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{1}
				int ManualRightY // ByteSize{4}, Index{43}, Version{1}, IsArray{0}, MetaFlag{1}
				PPtr<$tk2dBaseSprite> Sprite // ByteSize{c}, Index{44}, Version{1}, IsArray{0}, MetaFlag{1}
					int m_FileID // ByteSize{4}, Index{45}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{46}, Version{1}, IsArray{0}, MetaFlag{800001}
				IntVector2 m_offset // ByteSize{8}, Index{47}, Version{1}, IsArray{0}, MetaFlag{1}
					int x // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{1}
					int y // ByteSize{4}, Index{49}, Version{1}, IsArray{0}, MetaFlag{1}
				IntVector2 m_transformOffset // ByteSize{8}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{1}
					int x // ByteSize{4}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{1}
					int y // ByteSize{4}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{1}
				IntVector2 m_dimensions // ByteSize{8}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{1}
					int x // ByteSize{4}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{1}
					int y // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{1}
				float m_rotation // ByteSize{4}, Index{50}, Version{1}, IsArray{0}, MetaFlag{1}
	Position m_position // ByteSize{10}, Index{51}, Version{1}, IsArray{0}, MetaFlag{0}
		IntVector2 m_position // ByteSize{8}, Index{52}, Version{1}, IsArray{0}, MetaFlag{0}
			int x // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
			int y // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
		Vector2f m_remainder // ByteSize{8}, Index{55}, Version{1}, IsArray{0}, MetaFlag{200000}
			float x // ByteSize{4}, Index{56}, Version{1}, IsArray{0}, MetaFlag{200000}
			float y // ByteSize{4}, Index{57}, Version{1}, IsArray{0}, MetaFlag{200000}

// classID{4}: Transform
Transform Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	Quaternionf m_LocalRotation // ByteSize{10}, Index{4}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{5}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{200000}
		float z // ByteSize{4}, Index{7}, Version{1}, IsArray{0}, MetaFlag{200000}
		float w // ByteSize{4}, Index{8}, Version{1}, IsArray{0}, MetaFlag{200000}
	Vector3f m_LocalPosition // ByteSize{c}, Index{9}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{b}, Version{1}, IsArray{0}, MetaFlag{200000}
		float z // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{200000}
	Vector3f m_LocalScale // ByteSize{c}, Index{d}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{200000}
		float z // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{200000}
	vector m_Children // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{0}, MetaFlag{8041}
		Array Array // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{1}, MetaFlag{4041}
			int size // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{41}
			PPtr<Transform> data // ByteSize{c}, Index{14}, Version{1}, IsArray{0}, MetaFlag{41}
				int m_FileID // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{41}
				SInt64 m_PathID // ByteSize{8}, Index{16}, Version{1}, IsArray{0}, MetaFlag{41}
	PPtr<Transform> m_Father // ByteSize{c}, Index{17}, Version{1}, IsArray{0}, MetaFlag{1}
		int m_FileID // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{1}
		SInt64 m_PathID // ByteSize{8}, Index{19}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{114}: PrototypeDungeonRoom
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int RoomId // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{1}
	string QAID // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{10}, Version{1}, IsArray{0}, MetaFlag{1}
	string GUID // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 PreventMirroring // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
	int category // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
	int subCategoryNormal // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
	int subCategoryBoss // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
	int subCategorySpecial // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
	int subCategorySecret // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypeRoomExitData exitData // ByteSize{ffffffff}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{8000}
		PrototypeRoomExit exits // ByteSize{ffffffff}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1d}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
				PrototypeRoomExit data // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{8000}
					int exitDirection // ByteSize{4}, Index{20}, Version{1}, IsArray{0}, MetaFlag{0}
					int exitType // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
					int exitGroup // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 containsDoor // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{4100}
					PPtr<$DungeonPlaceable> specifiedDoor // ByteSize{c}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{25}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
					int exitLength // ByteSize{4}, Index{27}, Version{1}, IsArray{0}, MetaFlag{0}
					vector containedCells // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{29}, Version{1}, IsArray{1}, MetaFlag{4000}
							int size // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{0}
							Vector2f data // ByteSize{8}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{200000}
								float x // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{200000}
								float y // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{200000}
	PrototypeRoomPitEntry pits // ByteSize{ffffffff}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{2f}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeRoomPitEntry data // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{0}, MetaFlag{8000}
				vector containedCells // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
						Vector2f data // ByteSize{8}, Index{35}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{36}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{200000}
				int borderType // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypePlacedObjectData placedObjects // ByteSize{ffffffff}, Index{39}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{3a}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypePlacedObjectData data // ByteSize{ffffffff}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{8000}
				PPtr<$DungeonPlaceable> placeableContents // ByteSize{c}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$DungeonPlaceableBehaviour> nonenemyBehaviour // ByteSize{c}, Index{40}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{42}, Version{1}, IsArray{0}, MetaFlag{800001}
				string enemyBehaviourGuid // ByteSize{ffffffff}, Index{43}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{44}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{45}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{46}, Version{1}, IsArray{0}, MetaFlag{1}
				PPtr<$GameObject> unspecifiedContents // ByteSize{c}, Index{47}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{49}, Version{1}, IsArray{0}, MetaFlag{800001}
				Vector2f contentsBasePosition // ByteSize{8}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{200000}
				int layer // ByteSize{4}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{0}
				float spawnChance // ByteSize{4}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{0}
				int xMPxOffset // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
				int yMPxOffset // ByteSize{4}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
				PrototypePlacedObjectFieldData fieldData // ByteSize{ffffffff}, Index{51}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{52}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
						PrototypePlacedObjectFieldData data // ByteSize{ffffffff}, Index{54}, Version{1}, IsArray{0}, MetaFlag{8000}
							int fieldType // ByteSize{4}, Index{55}, Version{1}, IsArray{0}, MetaFlag{0}
							string fieldName // ByteSize{ffffffff}, Index{56}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{57}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{58}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{59}, Version{1}, IsArray{0}, MetaFlag{1}
							float floatValue // ByteSize{4}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 boolValue // ByteSize{1}, Index{5b}, Version{1}, IsArray{0}, MetaFlag{4100}
				DungeonPrerequisite instancePrerequisites // ByteSize{ffffffff}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{5d}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{5e}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite data // ByteSize{ffffffff}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{8000}
							int prerequisiteType // ByteSize{4}, Index{60}, Version{1}, IsArray{0}, MetaFlag{0}
							int prerequisiteOperation // ByteSize{4}, Index{61}, Version{1}, IsArray{0}, MetaFlag{0}
							int statToCheck // ByteSize{4}, Index{62}, Version{1}, IsArray{0}, MetaFlag{0}
							int maxToCheck // ByteSize{4}, Index{63}, Version{1}, IsArray{0}, MetaFlag{0}
							float comparisonValue // ByteSize{4}, Index{64}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 useSessionStatValue // ByteSize{1}, Index{65}, Version{1}, IsArray{0}, MetaFlag{4100}
							string encounteredObjectGuid // ByteSize{ffffffff}, Index{66}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{67}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{68}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{69}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{6c}, Version{1}, IsArray{0}, MetaFlag{800001}
							int requiredNumberOfEncounters // ByteSize{4}, Index{6d}, Version{1}, IsArray{0}, MetaFlag{0}
							int requiredCharacter // ByteSize{4}, Index{6e}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireCharacter // ByteSize{1}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{4100}
							int requiredTileset // ByteSize{4}, Index{70}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireTileset // ByteSize{1}, Index{71}, Version{1}, IsArray{0}, MetaFlag{4100}
							int saveFlagToCheck // ByteSize{4}, Index{72}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireFlag // ByteSize{1}, Index{73}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 requireDemoMode // ByteSize{1}, Index{74}, Version{1}, IsArray{0}, MetaFlag{4100}
				vector linkedTriggerAreaIDs // ByteSize{ffffffff}, Index{75}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{76}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{77}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{78}, Version{1}, IsArray{0}, MetaFlag{0}
				int assignedPathIDx // ByteSize{4}, Index{79}, Version{1}, IsArray{0}, MetaFlag{0}
				int assignedPathStartNode // ByteSize{4}, Index{7a}, Version{1}, IsArray{0}, MetaFlag{0}
	vector placedObjectPositions // ByteSize{ffffffff}, Index{7b}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{7c}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{7d}, Version{1}, IsArray{0}, MetaFlag{0}
			Vector2f data // ByteSize{8}, Index{7e}, Version{1}, IsArray{0}, MetaFlag{200000}
				float x // ByteSize{4}, Index{7f}, Version{1}, IsArray{0}, MetaFlag{200000}
				float y // ByteSize{4}, Index{80}, Version{1}, IsArray{0}, MetaFlag{200000}
	PrototypeRoomObjectLayer additionalObjectLayers // ByteSize{ffffffff}, Index{81}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{82}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{83}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeRoomObjectLayer data // ByteSize{ffffffff}, Index{84}, Version{1}, IsArray{0}, MetaFlag{8000}
				PrototypePlacedObjectData placedObjects // ByteSize{ffffffff}, Index{85}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{86}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{87}, Version{1}, IsArray{0}, MetaFlag{0}
						PrototypePlacedObjectData data // ByteSize{ffffffff}, Index{88}, Version{1}, IsArray{0}, MetaFlag{8000}
							PPtr<$DungeonPlaceable> placeableContents // ByteSize{c}, Index{89}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{8a}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{8b}, Version{1}, IsArray{0}, MetaFlag{800001}
							PPtr<$DungeonPlaceableBehaviour> nonenemyBehaviour // ByteSize{c}, Index{8c}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{8d}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{8e}, Version{1}, IsArray{0}, MetaFlag{800001}
							string enemyBehaviourGuid // ByteSize{ffffffff}, Index{8f}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{90}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{91}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{92}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$GameObject> unspecifiedContents // ByteSize{c}, Index{93}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{94}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{95}, Version{1}, IsArray{0}, MetaFlag{800001}
							Vector2f contentsBasePosition // ByteSize{8}, Index{96}, Version{1}, IsArray{0}, MetaFlag{200000}
								float x // ByteSize{4}, Index{97}, Version{1}, IsArray{0}, MetaFlag{200000}
								float y // ByteSize{4}, Index{98}, Version{1}, IsArray{0}, MetaFlag{200000}
							int layer // ByteSize{4}, Index{99}, Version{1}, IsArray{0}, MetaFlag{0}
							float spawnChance // ByteSize{4}, Index{9a}, Version{1}, IsArray{0}, MetaFlag{0}
							int xMPxOffset // ByteSize{4}, Index{9b}, Version{1}, IsArray{0}, MetaFlag{0}
							int yMPxOffset // ByteSize{4}, Index{9c}, Version{1}, IsArray{0}, MetaFlag{0}
							PrototypePlacedObjectFieldData fieldData // ByteSize{ffffffff}, Index{9d}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{9e}, Version{1}, IsArray{1}, MetaFlag{8000}
									int size // ByteSize{4}, Index{9f}, Version{1}, IsArray{0}, MetaFlag{0}
									PrototypePlacedObjectFieldData data // ByteSize{ffffffff}, Index{a0}, Version{1}, IsArray{0}, MetaFlag{8000}
										int fieldType // ByteSize{4}, Index{a1}, Version{1}, IsArray{0}, MetaFlag{0}
										string fieldName // ByteSize{ffffffff}, Index{a2}, Version{1}, IsArray{0}, MetaFlag{8000}
											Array Array // ByteSize{ffffffff}, Index{a3}, Version{1}, IsArray{1}, MetaFlag{4001}
												int size // ByteSize{4}, Index{a4}, Version{1}, IsArray{0}, MetaFlag{1}
												char data // ByteSize{1}, Index{a5}, Version{1}, IsArray{0}, MetaFlag{1}
										float floatValue // ByteSize{4}, Index{a6}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 boolValue // ByteSize{1}, Index{a7}, Version{1}, IsArray{0}, MetaFlag{4100}
							DungeonPrerequisite instancePrerequisites // ByteSize{ffffffff}, Index{a8}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{a9}, Version{1}, IsArray{1}, MetaFlag{8000}
									int size // ByteSize{4}, Index{aa}, Version{1}, IsArray{0}, MetaFlag{0}
									DungeonPrerequisite data // ByteSize{ffffffff}, Index{ab}, Version{1}, IsArray{0}, MetaFlag{8000}
										int prerequisiteType // ByteSize{4}, Index{ac}, Version{1}, IsArray{0}, MetaFlag{0}
										int prerequisiteOperation // ByteSize{4}, Index{ad}, Version{1}, IsArray{0}, MetaFlag{0}
										int statToCheck // ByteSize{4}, Index{ae}, Version{1}, IsArray{0}, MetaFlag{0}
										int maxToCheck // ByteSize{4}, Index{af}, Version{1}, IsArray{0}, MetaFlag{0}
										float comparisonValue // ByteSize{4}, Index{b0}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 useSessionStatValue // ByteSize{1}, Index{b1}, Version{1}, IsArray{0}, MetaFlag{4100}
										string encounteredObjectGuid // ByteSize{ffffffff}, Index{b2}, Version{1}, IsArray{0}, MetaFlag{8000}
											Array Array // ByteSize{ffffffff}, Index{b3}, Version{1}, IsArray{1}, MetaFlag{4001}
												int size // ByteSize{4}, Index{b4}, Version{1}, IsArray{0}, MetaFlag{1}
												char data // ByteSize{1}, Index{b5}, Version{1}, IsArray{0}, MetaFlag{1}
										PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{b6}, Version{1}, IsArray{0}, MetaFlag{0}
											int m_FileID // ByteSize{4}, Index{b7}, Version{1}, IsArray{0}, MetaFlag{800001}
											SInt64 m_PathID // ByteSize{8}, Index{b8}, Version{1}, IsArray{0}, MetaFlag{800001}
										int requiredNumberOfEncounters // ByteSize{4}, Index{b9}, Version{1}, IsArray{0}, MetaFlag{0}
										int requiredCharacter // ByteSize{4}, Index{ba}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 requireCharacter // ByteSize{1}, Index{bb}, Version{1}, IsArray{0}, MetaFlag{4100}
										int requiredTileset // ByteSize{4}, Index{bc}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 requireTileset // ByteSize{1}, Index{bd}, Version{1}, IsArray{0}, MetaFlag{4100}
										int saveFlagToCheck // ByteSize{4}, Index{be}, Version{1}, IsArray{0}, MetaFlag{0}
										UInt8 requireFlag // ByteSize{1}, Index{bf}, Version{1}, IsArray{0}, MetaFlag{4100}
										UInt8 requireDemoMode // ByteSize{1}, Index{c0}, Version{1}, IsArray{0}, MetaFlag{4100}
							vector linkedTriggerAreaIDs // ByteSize{ffffffff}, Index{c1}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{c2}, Version{1}, IsArray{1}, MetaFlag{4000}
									int size // ByteSize{4}, Index{c3}, Version{1}, IsArray{0}, MetaFlag{0}
									int data // ByteSize{4}, Index{c4}, Version{1}, IsArray{0}, MetaFlag{0}
							int assignedPathIDx // ByteSize{4}, Index{c5}, Version{1}, IsArray{0}, MetaFlag{0}
							int assignedPathStartNode // ByteSize{4}, Index{c6}, Version{1}, IsArray{0}, MetaFlag{0}
				vector placedObjectBasePositions // ByteSize{ffffffff}, Index{c7}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{c8}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{c9}, Version{1}, IsArray{0}, MetaFlag{0}
						Vector2f data // ByteSize{8}, Index{ca}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{cb}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{cc}, Version{1}, IsArray{0}, MetaFlag{200000}
				UInt8 layerIsReinforcementLayer // ByteSize{1}, Index{cd}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 shuffle // ByteSize{1}, Index{ce}, Version{1}, IsArray{0}, MetaFlag{4100}
				int randomize // ByteSize{4}, Index{cf}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 suppressPlayerChecks // ByteSize{1}, Index{d0}, Version{1}, IsArray{0}, MetaFlag{4100}
				float delayTime // ByteSize{4}, Index{d1}, Version{1}, IsArray{0}, MetaFlag{0}
				int reinforcementTriggerCondition // ByteSize{4}, Index{d2}, Version{1}, IsArray{0}, MetaFlag{0}
				float probability // ByteSize{4}, Index{d3}, Version{1}, IsArray{0}, MetaFlag{0}
				int numberTimesEncounteredRequired // ByteSize{4}, Index{d4}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypeEventTriggerArea eventTriggerAreas // ByteSize{ffffffff}, Index{d5}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{d6}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{d7}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeEventTriggerArea data // ByteSize{ffffffff}, Index{d8}, Version{1}, IsArray{0}, MetaFlag{8000}
				vector triggerCells // ByteSize{ffffffff}, Index{d9}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{da}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{db}, Version{1}, IsArray{0}, MetaFlag{0}
						Vector2f data // ByteSize{8}, Index{dc}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{dd}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{de}, Version{1}, IsArray{0}, MetaFlag{200000}
	RoomEventDefinition roomEvents // ByteSize{ffffffff}, Index{df}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{e0}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{e1}, Version{1}, IsArray{0}, MetaFlag{0}
			RoomEventDefinition data // ByteSize{8}, Index{e2}, Version{1}, IsArray{0}, MetaFlag{0}
				int condition // ByteSize{4}, Index{e3}, Version{1}, IsArray{0}, MetaFlag{0}
				int action // ByteSize{4}, Index{e4}, Version{1}, IsArray{0}, MetaFlag{0}
	SerializedPath paths // ByteSize{ffffffff}, Index{e5}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{e6}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{e7}, Version{1}, IsArray{0}, MetaFlag{0}
			SerializedPath data // ByteSize{ffffffff}, Index{e8}, Version{1}, IsArray{0}, MetaFlag{8000}
				SerializedPathNode nodes // ByteSize{ffffffff}, Index{e9}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{ea}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{eb}, Version{1}, IsArray{0}, MetaFlag{0}
						SerializedPathNode data // ByteSize{19}, Index{ec}, Version{1}, IsArray{0}, MetaFlag{8000}
							IntVector2 position // ByteSize{8}, Index{ed}, Version{1}, IsArray{0}, MetaFlag{0}
								int x // ByteSize{4}, Index{ee}, Version{1}, IsArray{0}, MetaFlag{0}
								int y // ByteSize{4}, Index{ef}, Version{1}, IsArray{0}, MetaFlag{0}
							float delayTime // ByteSize{4}, Index{f0}, Version{1}, IsArray{0}, MetaFlag{0}
							int placement // ByteSize{4}, Index{f1}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 UsesAlternateTarget // ByteSize{1}, Index{f2}, Version{1}, IsArray{0}, MetaFlag{4100}
							int AlternateTargetPathIndex // ByteSize{4}, Index{f3}, Version{1}, IsArray{0}, MetaFlag{0}
							int AlternateTargetNodeIndex // ByteSize{4}, Index{f4}, Version{1}, IsArray{0}, MetaFlag{0}
				int wrapMode // ByteSize{4}, Index{f5}, Version{1}, IsArray{0}, MetaFlag{0}
				float overrideSpeed // ByteSize{4}, Index{f6}, Version{1}, IsArray{0}, MetaFlag{0}
				int tilesetPathGrid // ByteSize{4}, Index{f7}, Version{1}, IsArray{0}, MetaFlag{0}
	int overriddenTilesets // ByteSize{4}, Index{f8}, Version{1}, IsArray{0}, MetaFlag{0}
	DungeonPrerequisite prerequisites // ByteSize{ffffffff}, Index{f9}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{fa}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{fb}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonPrerequisite data // ByteSize{ffffffff}, Index{fc}, Version{1}, IsArray{0}, MetaFlag{8000}
				int prerequisiteType // ByteSize{4}, Index{fd}, Version{1}, IsArray{0}, MetaFlag{0}
				int prerequisiteOperation // ByteSize{4}, Index{fe}, Version{1}, IsArray{0}, MetaFlag{0}
				int statToCheck // ByteSize{4}, Index{ff}, Version{1}, IsArray{0}, MetaFlag{0}
				int maxToCheck // ByteSize{4}, Index{100}, Version{1}, IsArray{0}, MetaFlag{0}
				float comparisonValue // ByteSize{4}, Index{101}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 useSessionStatValue // ByteSize{1}, Index{102}, Version{1}, IsArray{0}, MetaFlag{4100}
				string encounteredObjectGuid // ByteSize{ffffffff}, Index{103}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{104}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{105}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{106}, Version{1}, IsArray{0}, MetaFlag{1}
				PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{107}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{108}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{109}, Version{1}, IsArray{0}, MetaFlag{800001}
				int requiredNumberOfEncounters // ByteSize{4}, Index{10a}, Version{1}, IsArray{0}, MetaFlag{0}
				int requiredCharacter // ByteSize{4}, Index{10b}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requireCharacter // ByteSize{1}, Index{10c}, Version{1}, IsArray{0}, MetaFlag{4100}
				int requiredTileset // ByteSize{4}, Index{10d}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requireTileset // ByteSize{1}, Index{10e}, Version{1}, IsArray{0}, MetaFlag{4100}
				int saveFlagToCheck // ByteSize{4}, Index{10f}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requireFlag // ByteSize{1}, Index{110}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 requireDemoMode // ByteSize{1}, Index{111}, Version{1}, IsArray{0}, MetaFlag{4100}
	int RequiredCurseLevel // ByteSize{4}, Index{112}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 InvalidInCoop // ByteSize{1}, Index{113}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector excludedOtherRooms // ByteSize{ffffffff}, Index{114}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{115}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{116}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$PrototypeDungeonRoom> data // ByteSize{c}, Index{117}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{118}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{119}, Version{1}, IsArray{0}, MetaFlag{800001}
	PrototypeRectangularFeature rectangularFeatures // ByteSize{ffffffff}, Index{11a}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{11b}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{11c}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeRectangularFeature data // ByteSize{10}, Index{11d}, Version{1}, IsArray{0}, MetaFlag{0}
				IntVector2 basePosition // ByteSize{8}, Index{11e}, Version{1}, IsArray{0}, MetaFlag{0}
					int x // ByteSize{4}, Index{11f}, Version{1}, IsArray{0}, MetaFlag{0}
					int y // ByteSize{4}, Index{120}, Version{1}, IsArray{0}, MetaFlag{0}
				IntVector2 dimensions // ByteSize{8}, Index{121}, Version{1}, IsArray{0}, MetaFlag{0}
					int x // ByteSize{4}, Index{122}, Version{1}, IsArray{0}, MetaFlag{0}
					int y // ByteSize{4}, Index{123}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 usesProceduralLighting // ByteSize{1}, Index{124}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 usesProceduralDecoration // ByteSize{1}, Index{125}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 cullProceduralDecorationOnWeakPlatforms // ByteSize{1}, Index{126}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 allowFloorDecoration // ByteSize{1}, Index{127}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 allowWallDecoration // ByteSize{1}, Index{128}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 preventAddedDecoLayering // ByteSize{1}, Index{129}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 precludeAllTilemapDrawing // ByteSize{1}, Index{12a}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 drawPrecludedCeilingTiles // ByteSize{1}, Index{12b}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 preventFacewallAO // ByteSize{1}, Index{12c}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 preventBorders // ByteSize{1}, Index{12d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 usesCustomAmbientLight // ByteSize{1}, Index{12e}, Version{1}, IsArray{0}, MetaFlag{4100}
	ColorRGBA customAmbientLight // ByteSize{10}, Index{12f}, Version{1}, IsArray{0}, MetaFlag{200000}
		float r // ByteSize{4}, Index{130}, Version{1}, IsArray{0}, MetaFlag{200001}
		float g // ByteSize{4}, Index{131}, Version{1}, IsArray{0}, MetaFlag{200001}
		float b // ByteSize{4}, Index{132}, Version{1}, IsArray{0}, MetaFlag{200001}
		float a // ByteSize{4}, Index{133}, Version{1}, IsArray{0}, MetaFlag{200001}
	UInt8 ForceAllowDuplicates // ByteSize{1}, Index{134}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$GameObject> doorTopDecorable // ByteSize{c}, Index{135}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{136}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{137}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$SharedInjectionData> requiredInjectionData // ByteSize{c}, Index{138}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{139}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{13a}, Version{1}, IsArray{0}, MetaFlag{800001}
	RuntimeInjectionFlags injectionFlags // ByteSize{2}, Index{13b}, Version{1}, IsArray{0}, MetaFlag{8000}
		UInt8 ShopAnnexed // ByteSize{1}, Index{13c}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 CastleFireplace // ByteSize{1}, Index{13d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsLostWoodsRoom // ByteSize{1}, Index{13e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 UseCustomMusicState // ByteSize{1}, Index{13f}, Version{1}, IsArray{0}, MetaFlag{4100}
	int OverrideMusicState // ByteSize{4}, Index{140}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 UseCustomMusic // ByteSize{1}, Index{141}, Version{1}, IsArray{0}, MetaFlag{4100}
	string CustomMusicEvent // ByteSize{ffffffff}, Index{142}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{143}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{144}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{145}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 UseCustomMusicSwitch // ByteSize{1}, Index{146}, Version{1}, IsArray{0}, MetaFlag{4100}
	string CustomMusicSwitch // ByteSize{ffffffff}, Index{147}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{148}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{149}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{14a}, Version{1}, IsArray{0}, MetaFlag{1}
	int overrideRoomVisualType // ByteSize{4}, Index{14b}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 overrideRoomVisualTypeForSecretRooms // ByteSize{1}, Index{14c}, Version{1}, IsArray{0}, MetaFlag{4100}
	IntVector2 rewardChestSpawnPosition // ByteSize{8}, Index{14d}, Version{1}, IsArray{0}, MetaFlag{0}
		int x // ByteSize{4}, Index{14e}, Version{1}, IsArray{0}, MetaFlag{0}
		int y // ByteSize{4}, Index{14f}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$GameObject> associatedMinimapIcon // ByteSize{c}, Index{150}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{151}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{152}, Version{1}, IsArray{0}, MetaFlag{800001}
	int m_width // ByteSize{4}, Index{153}, Version{1}, IsArray{0}, MetaFlag{0}
	int m_height // ByteSize{4}, Index{154}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypeDungeonRoomCellData m_OLDcellData // ByteSize{ffffffff}, Index{155}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{156}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{157}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeDungeonRoomCellData data // ByteSize{ffffffff}, Index{158}, Version{1}, IsArray{0}, MetaFlag{8000}
				int state // ByteSize{4}, Index{159}, Version{1}, IsArray{0}, MetaFlag{0}
				int diagonalWallType // ByteSize{4}, Index{15a}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 breakable // ByteSize{1}, Index{15b}, Version{1}, IsArray{0}, MetaFlag{4100}
				string str // ByteSize{ffffffff}, Index{15c}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{15d}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{15e}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{15f}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 conditionalOnParentExit // ByteSize{1}, Index{160}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 conditionalCellIsPit // ByteSize{1}, Index{161}, Version{1}, IsArray{0}, MetaFlag{4100}
				int parentExitIndex // ByteSize{4}, Index{162}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 containsManuallyPlacedLight // ByteSize{1}, Index{163}, Version{1}, IsArray{0}, MetaFlag{4100}
				int lightStampIndex // ByteSize{4}, Index{164}, Version{1}, IsArray{0}, MetaFlag{0}
				int lightPixelsOffsetY // ByteSize{4}, Index{165}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 doesDamage // ByteSize{1}, Index{166}, Version{1}, IsArray{0}, MetaFlag{4100}
				CellDamageDefinition damageDefinition // ByteSize{12}, Index{167}, Version{1}, IsArray{0}, MetaFlag{8000}
					int damageTypes // ByteSize{4}, Index{168}, Version{1}, IsArray{0}, MetaFlag{0}
					float damageToPlayersPerTick // ByteSize{4}, Index{169}, Version{1}, IsArray{0}, MetaFlag{0}
					float damageToEnemiesPerTick // ByteSize{4}, Index{16a}, Version{1}, IsArray{0}, MetaFlag{0}
					float tickFrequency // ByteSize{4}, Index{16b}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 respectsFlying // ByteSize{1}, Index{16c}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 isPoison // ByteSize{1}, Index{16d}, Version{1}, IsArray{0}, MetaFlag{4100}
				int placedObjectRUBELIndex // ByteSize{4}, Index{16e}, Version{1}, IsArray{0}, MetaFlag{0}
				vector additionalPlacedObjectIndices // ByteSize{ffffffff}, Index{16f}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{170}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{171}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{172}, Version{1}, IsArray{0}, MetaFlag{0}
				PrototypeDungeonRoomCellAppearance appearance // ByteSize{ffffffff}, Index{173}, Version{1}, IsArray{0}, MetaFlag{8000}
					int overrideDungeonMaterialIndex // ByteSize{4}, Index{174}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 IsPhantomCarpet // ByteSize{1}, Index{175}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 ForceDisallowGoop // ByteSize{1}, Index{176}, Version{1}, IsArray{0}, MetaFlag{4100}
					int OverrideFloorType // ByteSize{4}, Index{177}, Version{1}, IsArray{0}, MetaFlag{0}
					PrototypeIndexOverrideData globalOverrideIndices // ByteSize{ffffffff}, Index{178}, Version{1}, IsArray{0}, MetaFlag{8000}
						vector indices // ByteSize{ffffffff}, Index{179}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{17a}, Version{1}, IsArray{1}, MetaFlag{4000}
								int size // ByteSize{4}, Index{17b}, Version{1}, IsArray{0}, MetaFlag{0}
								int data // ByteSize{4}, Index{17c}, Version{1}, IsArray{0}, MetaFlag{0}
					PrototypeIndexOverrideData m_overrideIndices // ByteSize{ffffffff}, Index{17d}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{17e}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{17f}, Version{1}, IsArray{0}, MetaFlag{0}
							PrototypeIndexOverrideData data // ByteSize{ffffffff}, Index{180}, Version{1}, IsArray{0}, MetaFlag{8000}
								vector indices // ByteSize{ffffffff}, Index{181}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{182}, Version{1}, IsArray{1}, MetaFlag{4000}
										int size // ByteSize{4}, Index{183}, Version{1}, IsArray{0}, MetaFlag{0}
										int data // ByteSize{4}, Index{184}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 ForceTileNonDecorated // ByteSize{1}, Index{185}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector m_serializedCellType // ByteSize{ffffffff}, Index{186}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{187}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{188}, Version{1}, IsArray{0}, MetaFlag{0}
			int data // ByteSize{4}, Index{189}, Version{1}, IsArray{0}, MetaFlag{0}
	vector m_serializedCellDataIndices // ByteSize{ffffffff}, Index{18a}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{18b}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{18c}, Version{1}, IsArray{0}, MetaFlag{0}
			int data // ByteSize{4}, Index{18d}, Version{1}, IsArray{0}, MetaFlag{0}
	PrototypeDungeonRoomCellData m_serializedCellDataData // ByteSize{ffffffff}, Index{18e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{18f}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{190}, Version{1}, IsArray{0}, MetaFlag{0}
			PrototypeDungeonRoomCellData data // ByteSize{ffffffff}, Index{191}, Version{1}, IsArray{0}, MetaFlag{8000}
				int state // ByteSize{4}, Index{192}, Version{1}, IsArray{0}, MetaFlag{0}
				int diagonalWallType // ByteSize{4}, Index{193}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 breakable // ByteSize{1}, Index{194}, Version{1}, IsArray{0}, MetaFlag{4100}
				string str // ByteSize{ffffffff}, Index{195}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{196}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{197}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{198}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 conditionalOnParentExit // ByteSize{1}, Index{199}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 conditionalCellIsPit // ByteSize{1}, Index{19a}, Version{1}, IsArray{0}, MetaFlag{4100}
				int parentExitIndex // ByteSize{4}, Index{19b}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 containsManuallyPlacedLight // ByteSize{1}, Index{19c}, Version{1}, IsArray{0}, MetaFlag{4100}
				int lightStampIndex // ByteSize{4}, Index{19d}, Version{1}, IsArray{0}, MetaFlag{0}
				int lightPixelsOffsetY // ByteSize{4}, Index{19e}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 doesDamage // ByteSize{1}, Index{19f}, Version{1}, IsArray{0}, MetaFlag{4100}
				CellDamageDefinition damageDefinition // ByteSize{12}, Index{1a0}, Version{1}, IsArray{0}, MetaFlag{8000}
					int damageTypes // ByteSize{4}, Index{1a1}, Version{1}, IsArray{0}, MetaFlag{0}
					float damageToPlayersPerTick // ByteSize{4}, Index{1a2}, Version{1}, IsArray{0}, MetaFlag{0}
					float damageToEnemiesPerTick // ByteSize{4}, Index{1a3}, Version{1}, IsArray{0}, MetaFlag{0}
					float tickFrequency // ByteSize{4}, Index{1a4}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 respectsFlying // ByteSize{1}, Index{1a5}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 isPoison // ByteSize{1}, Index{1a6}, Version{1}, IsArray{0}, MetaFlag{4100}
				int placedObjectRUBELIndex // ByteSize{4}, Index{1a7}, Version{1}, IsArray{0}, MetaFlag{0}
				vector additionalPlacedObjectIndices // ByteSize{ffffffff}, Index{1a8}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{1a9}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{1aa}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{1ab}, Version{1}, IsArray{0}, MetaFlag{0}
				PrototypeDungeonRoomCellAppearance appearance // ByteSize{ffffffff}, Index{1ac}, Version{1}, IsArray{0}, MetaFlag{8000}
					int overrideDungeonMaterialIndex // ByteSize{4}, Index{1ad}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 IsPhantomCarpet // ByteSize{1}, Index{1ae}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 ForceDisallowGoop // ByteSize{1}, Index{1af}, Version{1}, IsArray{0}, MetaFlag{4100}
					int OverrideFloorType // ByteSize{4}, Index{1b0}, Version{1}, IsArray{0}, MetaFlag{0}
					PrototypeIndexOverrideData globalOverrideIndices // ByteSize{ffffffff}, Index{1b1}, Version{1}, IsArray{0}, MetaFlag{8000}
						vector indices // ByteSize{ffffffff}, Index{1b2}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{1b3}, Version{1}, IsArray{1}, MetaFlag{4000}
								int size // ByteSize{4}, Index{1b4}, Version{1}, IsArray{0}, MetaFlag{0}
								int data // ByteSize{4}, Index{1b5}, Version{1}, IsArray{0}, MetaFlag{0}
					PrototypeIndexOverrideData m_overrideIndices // ByteSize{ffffffff}, Index{1b6}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{1b7}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{1b8}, Version{1}, IsArray{0}, MetaFlag{0}
							PrototypeIndexOverrideData data // ByteSize{ffffffff}, Index{1b9}, Version{1}, IsArray{0}, MetaFlag{8000}
								vector indices // ByteSize{ffffffff}, Index{1ba}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{1bb}, Version{1}, IsArray{1}, MetaFlag{4000}
										int size // ByteSize{4}, Index{1bc}, Version{1}, IsArray{0}, MetaFlag{0}
										int data // ByteSize{4}, Index{1bd}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 ForceTileNonDecorated // ByteSize{1}, Index{1be}, Version{1}, IsArray{0}, MetaFlag{4100}
	IntVector2 m_cachedRepresentationIncFacewalls // ByteSize{ffffffff}, Index{1bf}, Version{1}, IsArray{0}, MetaFlag{1}
		Array Array // ByteSize{ffffffff}, Index{1c0}, Version{1}, IsArray{1}, MetaFlag{1}
			int size // ByteSize{4}, Index{1c1}, Version{1}, IsArray{0}, MetaFlag{1}
			IntVector2 data // ByteSize{8}, Index{1c2}, Version{1}, IsArray{0}, MetaFlag{1}
				int x // ByteSize{4}, Index{1c3}, Version{1}, IsArray{0}, MetaFlag{1}
				int y // ByteSize{4}, Index{1c4}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{114}: tk2dSpriteAnimator
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	PPtr<$tk2dSpriteAnimation> library // ByteSize{c}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{e}, Version{1}, IsArray{0}, MetaFlag{800001}
	int defaultClipId // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
	float AdditionalCameraVisibilityRadius // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 AnimateDuringBossIntros // ByteSize{1}, Index{11}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 AlwaysIgnoreTimeScale // ByteSize{1}, Index{12}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 ForceSetEveryFrame // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 playAutomatically // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsFrameBlendedAnimation // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
	float clipTime // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 deferNextStartClip // ByteSize{1}, Index{17}, Version{1}, IsArray{0}, MetaFlag{4100}

// classID{114}: ObjectVisibilityManager
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 SuppressPlayerEnteredRoom // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{4100}

// classID{114}: SpritePulser
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	float duration // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	float minDuration // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	float maxDuration // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
	float metaDuration // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
	float minAlpha // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
	float minScale // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
	float maxScale // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}

// classID{114}: ShadowSystem
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 IsDynamic // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{4100}
	float lightRadius // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 ignoreUnityLight // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{4100}
	ColorRGBA uLightColor // ByteSize{10}, Index{f}, Version{1}, IsArray{0}, MetaFlag{200000}
		float r // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{200001}
		float g // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{200001}
		float b // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{200001}
		float a // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{200001}
	float uLightIntensity // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
	float uLightRange // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$Texture2D> uLightCookie // ByteSize{c}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{18}, Version{1}, IsArray{0}, MetaFlag{800001}
	float uLightCookieAngle // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 ignoreCustomFloorLight // ByteSize{1}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{4100}
	float minLuminance // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
	float shadowBias // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$Camera> shadowCamera // ByteSize{c}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 highQuality // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$Shader> lightDistanceShader // ByteSize{c}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{23}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$Shader> transparentShader // ByteSize{c}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{25}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$Shader> casterShader // ByteSize{c}, Index{27}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{29}, Version{1}, IsArray{0}, MetaFlag{800001}
	int shadowMapSize // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 CoronalLight // ByteSize{1}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector PersonalCookies // ByteSize{ffffffff}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{2d}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$Renderer> data // ByteSize{c}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{31}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: DungeonMaterial
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	WeightedGameObjectCollection wallShards // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{0}, MetaFlag{8000}
		WeightedGameObject elements // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
				WeightedGameObject data // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{0}, MetaFlag{8000}
					PPtr<$GameObject> rawGameObject // ByteSize{c}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{13}, Version{1}, IsArray{0}, MetaFlag{800001}
					int pickupId // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
					float weight // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 forceDuplicatesPossible // ByteSize{1}, Index{16}, Version{1}, IsArray{0}, MetaFlag{4100}
					DungeonPrerequisite additionalPrerequisites // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
							DungeonPrerequisite data // ByteSize{ffffffff}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{8000}
								int prerequisiteType // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
								int prerequisiteOperation // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
								int statToCheck // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
								int maxToCheck // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
								float comparisonValue // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 useSessionStatValue // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
								string encounteredObjectGuid // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{22}, Version{1}, IsArray{1}, MetaFlag{4001}
										int size // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}
										char data // ByteSize{1}, Index{24}, Version{1}, IsArray{0}, MetaFlag{1}
								PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{25}, Version{1}, IsArray{0}, MetaFlag{0}
									int m_FileID // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
									SInt64 m_PathID // ByteSize{8}, Index{27}, Version{1}, IsArray{0}, MetaFlag{800001}
								int requiredNumberOfEncounters // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
								int requiredCharacter // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireCharacter // ByteSize{1}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{4100}
								int requiredTileset // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireTileset // ByteSize{1}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{4100}
								int saveFlagToCheck // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireFlag // ByteSize{1}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{4100}
								UInt8 requireDemoMode // ByteSize{1}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{4100}
	WeightedGameObjectCollection bigWallShards // ByteSize{ffffffff}, Index{30}, Version{1}, IsArray{0}, MetaFlag{8000}
		WeightedGameObject elements // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{33}, Version{1}, IsArray{0}, MetaFlag{0}
				WeightedGameObject data // ByteSize{ffffffff}, Index{34}, Version{1}, IsArray{0}, MetaFlag{8000}
					PPtr<$GameObject> rawGameObject // ByteSize{c}, Index{35}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{36}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{37}, Version{1}, IsArray{0}, MetaFlag{800001}
					int pickupId // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{0}
					float weight // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 forceDuplicatesPossible // ByteSize{1}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{4100}
					DungeonPrerequisite additionalPrerequisites // ByteSize{ffffffff}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{3c}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
							DungeonPrerequisite data // ByteSize{ffffffff}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{8000}
								int prerequisiteType // ByteSize{4}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{0}
								int prerequisiteOperation // ByteSize{4}, Index{40}, Version{1}, IsArray{0}, MetaFlag{0}
								int statToCheck // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{0}
								int maxToCheck // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{0}
								float comparisonValue // ByteSize{4}, Index{43}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 useSessionStatValue // ByteSize{1}, Index{44}, Version{1}, IsArray{0}, MetaFlag{4100}
								string encounteredObjectGuid // ByteSize{ffffffff}, Index{45}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{46}, Version{1}, IsArray{1}, MetaFlag{4001}
										int size // ByteSize{4}, Index{47}, Version{1}, IsArray{0}, MetaFlag{1}
										char data // ByteSize{1}, Index{48}, Version{1}, IsArray{0}, MetaFlag{1}
								PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{49}, Version{1}, IsArray{0}, MetaFlag{0}
									int m_FileID // ByteSize{4}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{800001}
									SInt64 m_PathID // ByteSize{8}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{800001}
								int requiredNumberOfEncounters // ByteSize{4}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{0}
								int requiredCharacter // ByteSize{4}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireCharacter // ByteSize{1}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{4100}
								int requiredTileset // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireTileset // ByteSize{1}, Index{50}, Version{1}, IsArray{0}, MetaFlag{4100}
								int saveFlagToCheck // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireFlag // ByteSize{1}, Index{52}, Version{1}, IsArray{0}, MetaFlag{4100}
								UInt8 requireDemoMode // ByteSize{1}, Index{53}, Version{1}, IsArray{0}, MetaFlag{4100}
	float bigWallShardDamageThreshold // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
	VFXComplex fallbackVerticalTileMapEffects // ByteSize{ffffffff}, Index{55}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{56}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{57}, Version{1}, IsArray{0}, MetaFlag{0}
			VFXComplex data // ByteSize{ffffffff}, Index{58}, Version{1}, IsArray{0}, MetaFlag{8000}
				VFXObject effects // ByteSize{ffffffff}, Index{59}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{5a}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{5b}, Version{1}, IsArray{0}, MetaFlag{0}
						VFXObject data // ByteSize{19}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{8000}
							PPtr<$GameObject> effect // ByteSize{c}, Index{5d}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{5e}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{800001}
							UInt8 orphaned // ByteSize{1}, Index{60}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 attached // ByteSize{1}, Index{61}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 persistsOnDeath // ByteSize{1}, Index{62}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 usesZHeight // ByteSize{1}, Index{63}, Version{1}, IsArray{0}, MetaFlag{4100}
							float zHeight // ByteSize{4}, Index{64}, Version{1}, IsArray{0}, MetaFlag{0}
							int alignment // ByteSize{4}, Index{65}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 destructible // ByteSize{1}, Index{66}, Version{1}, IsArray{0}, MetaFlag{4101}
	VFXComplex fallbackHorizontalTileMapEffects // ByteSize{ffffffff}, Index{67}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{68}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{69}, Version{1}, IsArray{0}, MetaFlag{0}
			VFXComplex data // ByteSize{ffffffff}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{8000}
				VFXObject effects // ByteSize{ffffffff}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{6c}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{6d}, Version{1}, IsArray{0}, MetaFlag{0}
						VFXObject data // ByteSize{19}, Index{6e}, Version{1}, IsArray{0}, MetaFlag{8000}
							PPtr<$GameObject> effect // ByteSize{c}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{70}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{71}, Version{1}, IsArray{0}, MetaFlag{800001}
							UInt8 orphaned // ByteSize{1}, Index{72}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 attached // ByteSize{1}, Index{73}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 persistsOnDeath // ByteSize{1}, Index{74}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 usesZHeight // ByteSize{1}, Index{75}, Version{1}, IsArray{0}, MetaFlag{4100}
							float zHeight // ByteSize{4}, Index{76}, Version{1}, IsArray{0}, MetaFlag{0}
							int alignment // ByteSize{4}, Index{77}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 destructible // ByteSize{1}, Index{78}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<$GameObject> pitfallVFXPrefab // ByteSize{c}, Index{79}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{7a}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7b}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 UsePitAmbientVFX // ByteSize{1}, Index{7c}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector AmbientPitVFX // ByteSize{ffffffff}, Index{7d}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{7e}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{7f}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{80}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{81}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{82}, Version{1}, IsArray{0}, MetaFlag{800001}
	float PitVFXMinCooldown // ByteSize{4}, Index{83}, Version{1}, IsArray{0}, MetaFlag{0}
	float PitVFXMaxCooldown // ByteSize{4}, Index{84}, Version{1}, IsArray{0}, MetaFlag{0}
	float ChanceToSpawnPitVFXOnCooldown // ByteSize{4}, Index{85}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 UseChannelAmbientVFX // ByteSize{1}, Index{86}, Version{1}, IsArray{0}, MetaFlag{4100}
	float ChannelVFXMinCooldown // ByteSize{4}, Index{87}, Version{1}, IsArray{0}, MetaFlag{0}
	float ChannelVFXMaxCooldown // ByteSize{4}, Index{88}, Version{1}, IsArray{0}, MetaFlag{0}
	vector AmbientChannelVFX // ByteSize{ffffffff}, Index{89}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{8a}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{8b}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{8c}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{8d}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{8e}, Version{1}, IsArray{0}, MetaFlag{800001}
	float stampFailChance // ByteSize{4}, Index{8f}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$GenericLootTable> overrideTableTable // ByteSize{c}, Index{90}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{91}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{92}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 supportsPits // ByteSize{1}, Index{93}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 doPitAO // ByteSize{1}, Index{94}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 pitsAreOneDeep // ByteSize{1}, Index{95}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 supportsDiagonalWalls // ByteSize{1}, Index{96}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 supportsUpholstery // ByteSize{1}, Index{97}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 carpetIsMainFloor // ByteSize{1}, Index{98}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector carpetGrids // ByteSize{ffffffff}, Index{99}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{9a}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{9b}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$TileIndexGrid> data // ByteSize{c}, Index{9c}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{9d}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{9e}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 supportsChannels // ByteSize{1}, Index{9f}, Version{1}, IsArray{0}, MetaFlag{4100}
	int minChannelPools // ByteSize{4}, Index{a0}, Version{1}, IsArray{0}, MetaFlag{0}
	int maxChannelPools // ByteSize{4}, Index{a1}, Version{1}, IsArray{0}, MetaFlag{0}
	float channelTenacity // ByteSize{4}, Index{a2}, Version{1}, IsArray{0}, MetaFlag{0}
	vector channelGrids // ByteSize{ffffffff}, Index{a3}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{a4}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{a5}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$TileIndexGrid> data // ByteSize{c}, Index{a6}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{a7}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{a8}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 supportsLavaOrLavalikeSquares // ByteSize{1}, Index{a9}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector lavaGrids // ByteSize{ffffffff}, Index{aa}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{ab}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{ac}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$TileIndexGrid> data // ByteSize{c}, Index{ad}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{ae}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{af}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 supportsIceSquares // ByteSize{1}, Index{b0}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector iceGrids // ByteSize{ffffffff}, Index{b1}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{b2}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{b3}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$TileIndexGrid> data // ByteSize{c}, Index{b4}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{b5}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{b6}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$TileIndexGrid> roomFloorBorderGrid // ByteSize{c}, Index{b7}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{b8}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{b9}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$TileIndexGrid> roomCeilingBorderGrid // ByteSize{c}, Index{ba}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{bb}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{bc}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$TileIndexGrid> pitLayoutGrid // ByteSize{c}, Index{bd}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{be}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{bf}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$TileIndexGrid> pitBorderFlatGrid // ByteSize{c}, Index{c0}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{c1}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{c2}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$TileIndexGrid> pitBorderRaisedGrid // ByteSize{c}, Index{c3}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{c4}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{c5}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$TileIndexGrid> additionalPitBorderFlatGrid // ByteSize{c}, Index{c6}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{c7}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{c8}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$TileIndexGrid> outerCeilingBorderGrid // ByteSize{c}, Index{c9}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{ca}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{cb}, Version{1}, IsArray{0}, MetaFlag{800001}
	float floorSquareDensity // ByteSize{4}, Index{cc}, Version{1}, IsArray{0}, MetaFlag{0}
	vector floorSquares // ByteSize{ffffffff}, Index{cd}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{ce}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{cf}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$TileIndexGrid> data // ByteSize{c}, Index{d0}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{d1}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{d2}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 usesFacewallGrids // ByteSize{1}, Index{d3}, Version{1}, IsArray{0}, MetaFlag{4100}
	FacewallIndexGridDefinition facewallGrids // ByteSize{ffffffff}, Index{d4}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{d5}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{d6}, Version{1}, IsArray{0}, MetaFlag{0}
			FacewallIndexGridDefinition data // ByteSize{38}, Index{d7}, Version{1}, IsArray{0}, MetaFlag{8000}
				PPtr<$TileIndexGrid> grid // ByteSize{c}, Index{d8}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{d9}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{da}, Version{1}, IsArray{0}, MetaFlag{800001}
				int minWidth // ByteSize{4}, Index{db}, Version{1}, IsArray{0}, MetaFlag{0}
				int maxWidth // ByteSize{4}, Index{dc}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 hasIntermediaries // ByteSize{1}, Index{dd}, Version{1}, IsArray{0}, MetaFlag{4100}
				int minIntermediaryBuffer // ByteSize{4}, Index{de}, Version{1}, IsArray{0}, MetaFlag{0}
				int maxIntermediaryBuffer // ByteSize{4}, Index{df}, Version{1}, IsArray{0}, MetaFlag{0}
				int minIntermediaryLength // ByteSize{4}, Index{e0}, Version{1}, IsArray{0}, MetaFlag{0}
				int maxIntermediaryLength // ByteSize{4}, Index{e1}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 topsMatchBottoms // ByteSize{1}, Index{e2}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 middleSectionSequential // ByteSize{1}, Index{e3}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 canExistInCorners // ByteSize{1}, Index{e4}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 forceEdgesInCorners // ByteSize{1}, Index{e5}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 canAcceptWallDecoration // ByteSize{1}, Index{e6}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 canAcceptFloorDecoration // ByteSize{1}, Index{e7}, Version{1}, IsArray{0}, MetaFlag{4100}
				int forcedStampMatchingStyle // ByteSize{4}, Index{e8}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 canBePlacedInExits // ByteSize{1}, Index{e9}, Version{1}, IsArray{0}, MetaFlag{4100}
				float chanceToPlaceIfPossible // ByteSize{4}, Index{ea}, Version{1}, IsArray{0}, MetaFlag{0}
				float perTileFailureRate // ByteSize{4}, Index{eb}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 usesInternalMaterialTransitions // ByteSize{1}, Index{ec}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 usesProceduralMaterialTransitions // ByteSize{1}, Index{ed}, Version{1}, IsArray{0}, MetaFlag{4100}
	RoomInternalMaterialTransition internalMaterialTransitions // ByteSize{ffffffff}, Index{ee}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{ef}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{f0}, Version{1}, IsArray{0}, MetaFlag{0}
			RoomInternalMaterialTransition data // ByteSize{14}, Index{f1}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$TileIndexGrid> transitionGrid // ByteSize{c}, Index{f2}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{f3}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{f4}, Version{1}, IsArray{0}, MetaFlag{800001}
				int materialTransition // ByteSize{4}, Index{f5}, Version{1}, IsArray{0}, MetaFlag{0}
				float proceduralThreshold // ByteSize{4}, Index{f6}, Version{1}, IsArray{0}, MetaFlag{0}
	vector secretRoomWallShardCollections // ByteSize{ffffffff}, Index{f7}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{f8}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{f9}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{fa}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{fb}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{fc}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 overrideStoneFloorType // ByteSize{1}, Index{fd}, Version{1}, IsArray{0}, MetaFlag{4100}
	int overrideFloorType // ByteSize{4}, Index{fe}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 useLighting // ByteSize{1}, Index{ff}, Version{1}, IsArray{0}, MetaFlag{4100}
	WeightedGameObjectCollection lightPrefabs // ByteSize{ffffffff}, Index{100}, Version{1}, IsArray{0}, MetaFlag{8000}
		WeightedGameObject elements // ByteSize{ffffffff}, Index{101}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{102}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{103}, Version{1}, IsArray{0}, MetaFlag{0}
				WeightedGameObject data // ByteSize{ffffffff}, Index{104}, Version{1}, IsArray{0}, MetaFlag{8000}
					PPtr<$GameObject> rawGameObject // ByteSize{c}, Index{105}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{106}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{107}, Version{1}, IsArray{0}, MetaFlag{800001}
					int pickupId // ByteSize{4}, Index{108}, Version{1}, IsArray{0}, MetaFlag{0}
					float weight // ByteSize{4}, Index{109}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 forceDuplicatesPossible // ByteSize{1}, Index{10a}, Version{1}, IsArray{0}, MetaFlag{4100}
					DungeonPrerequisite additionalPrerequisites // ByteSize{ffffffff}, Index{10b}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{10c}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{10d}, Version{1}, IsArray{0}, MetaFlag{0}
							DungeonPrerequisite data // ByteSize{ffffffff}, Index{10e}, Version{1}, IsArray{0}, MetaFlag{8000}
								int prerequisiteType // ByteSize{4}, Index{10f}, Version{1}, IsArray{0}, MetaFlag{0}
								int prerequisiteOperation // ByteSize{4}, Index{110}, Version{1}, IsArray{0}, MetaFlag{0}
								int statToCheck // ByteSize{4}, Index{111}, Version{1}, IsArray{0}, MetaFlag{0}
								int maxToCheck // ByteSize{4}, Index{112}, Version{1}, IsArray{0}, MetaFlag{0}
								float comparisonValue // ByteSize{4}, Index{113}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 useSessionStatValue // ByteSize{1}, Index{114}, Version{1}, IsArray{0}, MetaFlag{4100}
								string encounteredObjectGuid // ByteSize{ffffffff}, Index{115}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{116}, Version{1}, IsArray{1}, MetaFlag{4001}
										int size // ByteSize{4}, Index{117}, Version{1}, IsArray{0}, MetaFlag{1}
										char data // ByteSize{1}, Index{118}, Version{1}, IsArray{0}, MetaFlag{1}
								PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{119}, Version{1}, IsArray{0}, MetaFlag{0}
									int m_FileID // ByteSize{4}, Index{11a}, Version{1}, IsArray{0}, MetaFlag{800001}
									SInt64 m_PathID // ByteSize{8}, Index{11b}, Version{1}, IsArray{0}, MetaFlag{800001}
								int requiredNumberOfEncounters // ByteSize{4}, Index{11c}, Version{1}, IsArray{0}, MetaFlag{0}
								int requiredCharacter // ByteSize{4}, Index{11d}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireCharacter // ByteSize{1}, Index{11e}, Version{1}, IsArray{0}, MetaFlag{4100}
								int requiredTileset // ByteSize{4}, Index{11f}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireTileset // ByteSize{1}, Index{120}, Version{1}, IsArray{0}, MetaFlag{4100}
								int saveFlagToCheck // ByteSize{4}, Index{121}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireFlag // ByteSize{1}, Index{122}, Version{1}, IsArray{0}, MetaFlag{4100}
								UInt8 requireDemoMode // ByteSize{1}, Index{123}, Version{1}, IsArray{0}, MetaFlag{4100}
	LightStampData facewallLightStamps // ByteSize{ffffffff}, Index{124}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{125}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{126}, Version{1}, IsArray{0}, MetaFlag{0}
			LightStampData data // ByteSize{ffffffff}, Index{127}, Version{1}, IsArray{0}, MetaFlag{8000}
				int width // ByteSize{4}, Index{128}, Version{1}, IsArray{0}, MetaFlag{0}
				int height // ByteSize{4}, Index{129}, Version{1}, IsArray{0}, MetaFlag{0}
				float relativeWeight // ByteSize{4}, Index{12a}, Version{1}, IsArray{0}, MetaFlag{0}
				int placementRule // ByteSize{4}, Index{12b}, Version{1}, IsArray{0}, MetaFlag{0}
				int occupySpace // ByteSize{4}, Index{12c}, Version{1}, IsArray{0}, MetaFlag{0}
				int stampCategory // ByteSize{4}, Index{12d}, Version{1}, IsArray{0}, MetaFlag{0}
				int preferredIntermediaryStamps // ByteSize{4}, Index{12e}, Version{1}, IsArray{0}, MetaFlag{0}
				int intermediaryMatchingStyle // ByteSize{4}, Index{12f}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requiresForcedMatchingStyle // ByteSize{1}, Index{130}, Version{1}, IsArray{0}, MetaFlag{4100}
				int opulence // ByteSize{4}, Index{131}, Version{1}, IsArray{0}, MetaFlag{0}
				StampPerRoomPlacementSettings roomTypeData // ByteSize{ffffffff}, Index{132}, Version{1}, IsArray{0}, MetaFlag{0}
					Array Array // ByteSize{ffffffff}, Index{133}, Version{1}, IsArray{1}, MetaFlag{0}
						int size // ByteSize{4}, Index{134}, Version{1}, IsArray{0}, MetaFlag{0}
						StampPerRoomPlacementSettings data // ByteSize{8}, Index{135}, Version{1}, IsArray{0}, MetaFlag{0}
							int roomSubType // ByteSize{4}, Index{136}, Version{1}, IsArray{0}, MetaFlag{0}
							float roomRelativeWeight // ByteSize{4}, Index{137}, Version{1}, IsArray{0}, MetaFlag{0}
				int indexOfSymmetricPartner // ByteSize{4}, Index{138}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 preventRoomRepeats // ByteSize{1}, Index{139}, Version{1}, IsArray{0}, MetaFlag{4100}
				PPtr<$GameObject> objectReference // ByteSize{c}, Index{13a}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{13b}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{13c}, Version{1}, IsArray{0}, MetaFlag{800001}
				UInt8 CanBeTopWallLight // ByteSize{1}, Index{13d}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 CanBeCenterLight // ByteSize{1}, Index{13e}, Version{1}, IsArray{0}, MetaFlag{4100}
				int FallbackIndex // ByteSize{4}, Index{13f}, Version{1}, IsArray{0}, MetaFlag{0}
	LightStampData sidewallLightStamps // ByteSize{ffffffff}, Index{140}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{141}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{142}, Version{1}, IsArray{0}, MetaFlag{0}
			LightStampData data // ByteSize{ffffffff}, Index{143}, Version{1}, IsArray{0}, MetaFlag{8000}
				int width // ByteSize{4}, Index{144}, Version{1}, IsArray{0}, MetaFlag{0}
				int height // ByteSize{4}, Index{145}, Version{1}, IsArray{0}, MetaFlag{0}
				float relativeWeight // ByteSize{4}, Index{146}, Version{1}, IsArray{0}, MetaFlag{0}
				int placementRule // ByteSize{4}, Index{147}, Version{1}, IsArray{0}, MetaFlag{0}
				int occupySpace // ByteSize{4}, Index{148}, Version{1}, IsArray{0}, MetaFlag{0}
				int stampCategory // ByteSize{4}, Index{149}, Version{1}, IsArray{0}, MetaFlag{0}
				int preferredIntermediaryStamps // ByteSize{4}, Index{14a}, Version{1}, IsArray{0}, MetaFlag{0}
				int intermediaryMatchingStyle // ByteSize{4}, Index{14b}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requiresForcedMatchingStyle // ByteSize{1}, Index{14c}, Version{1}, IsArray{0}, MetaFlag{4100}
				int opulence // ByteSize{4}, Index{14d}, Version{1}, IsArray{0}, MetaFlag{0}
				StampPerRoomPlacementSettings roomTypeData // ByteSize{ffffffff}, Index{14e}, Version{1}, IsArray{0}, MetaFlag{0}
					Array Array // ByteSize{ffffffff}, Index{14f}, Version{1}, IsArray{1}, MetaFlag{0}
						int size // ByteSize{4}, Index{150}, Version{1}, IsArray{0}, MetaFlag{0}
						StampPerRoomPlacementSettings data // ByteSize{8}, Index{151}, Version{1}, IsArray{0}, MetaFlag{0}
							int roomSubType // ByteSize{4}, Index{152}, Version{1}, IsArray{0}, MetaFlag{0}
							float roomRelativeWeight // ByteSize{4}, Index{153}, Version{1}, IsArray{0}, MetaFlag{0}
				int indexOfSymmetricPartner // ByteSize{4}, Index{154}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 preventRoomRepeats // ByteSize{1}, Index{155}, Version{1}, IsArray{0}, MetaFlag{4100}
				PPtr<$GameObject> objectReference // ByteSize{c}, Index{156}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{157}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{158}, Version{1}, IsArray{0}, MetaFlag{800001}
				UInt8 CanBeTopWallLight // ByteSize{1}, Index{159}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 CanBeCenterLight // ByteSize{1}, Index{15a}, Version{1}, IsArray{0}, MetaFlag{4100}
				int FallbackIndex // ByteSize{4}, Index{15b}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 usesDecalLayer // ByteSize{1}, Index{15c}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$TileIndexGrid> decalIndexGrid // ByteSize{c}, Index{15d}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{15e}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{15f}, Version{1}, IsArray{0}, MetaFlag{800001}
	int decalLayerStyle // ByteSize{4}, Index{160}, Version{1}, IsArray{0}, MetaFlag{0}
	int decalSize // ByteSize{4}, Index{161}, Version{1}, IsArray{0}, MetaFlag{0}
	int decalSpacing // ByteSize{4}, Index{162}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 usesPatternLayer // ByteSize{1}, Index{163}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$TileIndexGrid> patternIndexGrid // ByteSize{c}, Index{164}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{165}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{166}, Version{1}, IsArray{0}, MetaFlag{800001}
	int patternLayerStyle // ByteSize{4}, Index{167}, Version{1}, IsArray{0}, MetaFlag{0}
	int patternSize // ByteSize{4}, Index{168}, Version{1}, IsArray{0}, MetaFlag{0}
	int patternSpacing // ByteSize{4}, Index{169}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 forceEdgesDiagonal // ByteSize{1}, Index{16a}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$TileIndexGrid> exteriorFacadeBorderGrid // ByteSize{c}, Index{16b}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{16c}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{16d}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$TileIndexGrid> facadeTopGrid // ByteSize{c}, Index{16e}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{16f}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{170}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$TileIndexGrid> bridgeGrid // ByteSize{c}, Index{171}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{172}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{173}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: tk2dSprite
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 automaticallyManagesDepth // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 ignoresTiltworldDepth // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 depthUsesTrimmedBounds // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 allowDefaultLayer // ByteSize{1}, Index{f}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$tk2dBaseSprite> attachParent // ByteSize{c}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{12}, Version{1}, IsArray{0}, MetaFlag{800001}
	int OverrideMaterialMode // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 independentOrientation // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{4101}
	UInt8 autodetectFootprint // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
	IntVector2 customFootprintOrigin // ByteSize{8}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
		int x // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
		int y // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
	IntVector2 customFootprint // ByteSize{8}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
		int x // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
		int y // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 hasOffScreenCachedUpdate // ByteSize{1}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$tk2dSpriteCollectionData> offScreenCachedCollection // ByteSize{c}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{800001}
	int offScreenCachedID // ByteSize{4}, Index{20}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$tk2dSpriteCollectionData> collection // ByteSize{c}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{23}, Version{1}, IsArray{0}, MetaFlag{800001}
	ColorRGBA _color // ByteSize{10}, Index{24}, Version{1}, IsArray{0}, MetaFlag{200000}
		float r // ByteSize{4}, Index{25}, Version{1}, IsArray{0}, MetaFlag{200001}
		float g // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{200001}
		float b // ByteSize{4}, Index{27}, Version{1}, IsArray{0}, MetaFlag{200001}
		float a // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{200001}
	Vector3f _scale // ByteSize{c}, Index{29}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{200000}
		float z // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{200000}
	int _spriteId // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$BoxCollider2D> boxCollider2D // ByteSize{c}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{30}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$BoxCollider> boxCollider // ByteSize{c}, Index{31}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{32}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{33}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$MeshCollider> meshCollider // ByteSize{c}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{35}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{36}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector meshColliderPositions // ByteSize{ffffffff}, Index{37}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{38}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
			Vector3f data // ByteSize{c}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{200000}
				float x // ByteSize{4}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{200000}
				float y // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{200000}
				float z // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{200000}
	PPtr<$Mesh> meshColliderMesh // ByteSize{c}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{40}, Version{1}, IsArray{0}, MetaFlag{800001}
	int CachedPerpState // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{0}
	float m_heightOffGround // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{1}
	int renderLayer // ByteSize{4}, Index{43}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 IsBraveOutlineSprite // ByteSize{1}, Index{44}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsZDepthDirty // ByteSize{1}, Index{45}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 ApplyEmissivePropertyBlock // ByteSize{1}, Index{46}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 GenerateUV2 // ByteSize{1}, Index{47}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 LockUV2OnFrameOne // ByteSize{1}, Index{48}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 StaticPositions // ByteSize{1}, Index{49}, Version{1}, IsArray{0}, MetaFlag{4100}

// classID{114}: HitEffectHandler
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	PPtr<$DungeonMaterial> overrideMaterialDefinition // ByteSize{c}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{e}, Version{1}, IsArray{0}, MetaFlag{800001}
	VFXComplex overrideHitEffect // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{0}, MetaFlag{8000}
		VFXObject effects // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}
				VFXObject data // ByteSize{19}, Index{13}, Version{1}, IsArray{0}, MetaFlag{8000}
					PPtr<$GameObject> effect // ByteSize{c}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{16}, Version{1}, IsArray{0}, MetaFlag{800001}
					UInt8 orphaned // ByteSize{1}, Index{17}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 attached // ByteSize{1}, Index{18}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 persistsOnDeath // ByteSize{1}, Index{19}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 usesZHeight // ByteSize{1}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{4100}
					float zHeight // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
					int alignment // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 destructible // ByteSize{1}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{4101}
	VFXPool overrideHitEffectPool // ByteSize{ffffffff}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{8000}
		int type // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
		VFXComplex effects // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
				VFXComplex data // ByteSize{ffffffff}, Index{23}, Version{1}, IsArray{0}, MetaFlag{8000}
					VFXObject effects // ByteSize{ffffffff}, Index{24}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{25}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{0}
							VFXObject data // ByteSize{19}, Index{27}, Version{1}, IsArray{0}, MetaFlag{8000}
								PPtr<$GameObject> effect // ByteSize{c}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
									int m_FileID // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{800001}
									SInt64 m_PathID // ByteSize{8}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{800001}
								UInt8 orphaned // ByteSize{1}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{4100}
								UInt8 attached // ByteSize{1}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{4100}
								UInt8 persistsOnDeath // ByteSize{1}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{4100}
								UInt8 usesZHeight // ByteSize{1}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{4100}
								float zHeight // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{0}
								int alignment // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 destructible // ByteSize{1}, Index{31}, Version{1}, IsArray{0}, MetaFlag{4101}
	AdditionalHitEffect additionalHitEffects // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
			AdditionalHitEffect data // ByteSize{ffffffff}, Index{35}, Version{1}, IsArray{0}, MetaFlag{8000}
				VFXPool hitEffect // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{0}, MetaFlag{8000}
					int type // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{0}
					VFXComplex effects // ByteSize{ffffffff}, Index{38}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{39}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{0}
							VFXComplex data // ByteSize{ffffffff}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{8000}
								VFXObject effects // ByteSize{ffffffff}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{3d}, Version{1}, IsArray{1}, MetaFlag{8000}
										int size // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{0}
										VFXObject data // ByteSize{19}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{8000}
											PPtr<$GameObject> effect // ByteSize{c}, Index{40}, Version{1}, IsArray{0}, MetaFlag{0}
												int m_FileID // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{800001}
												SInt64 m_PathID // ByteSize{8}, Index{42}, Version{1}, IsArray{0}, MetaFlag{800001}
											UInt8 orphaned // ByteSize{1}, Index{43}, Version{1}, IsArray{0}, MetaFlag{4100}
											UInt8 attached // ByteSize{1}, Index{44}, Version{1}, IsArray{0}, MetaFlag{4100}
											UInt8 persistsOnDeath // ByteSize{1}, Index{45}, Version{1}, IsArray{0}, MetaFlag{4100}
											UInt8 usesZHeight // ByteSize{1}, Index{46}, Version{1}, IsArray{0}, MetaFlag{4100}
											float zHeight // ByteSize{4}, Index{47}, Version{1}, IsArray{0}, MetaFlag{0}
											int alignment // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{0}
											UInt8 destructible // ByteSize{1}, Index{49}, Version{1}, IsArray{0}, MetaFlag{4101}
				float chance // ByteSize{4}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$Transform> transform // ByteSize{c}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{800001}
				UInt8 flipNormals // ByteSize{1}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{4100}
				float radius // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
				float delay // ByteSize{4}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
				float angleVariance // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 doForce // ByteSize{1}, Index{52}, Version{1}, IsArray{0}, MetaFlag{4100}
				float minForce // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
				float maxForce // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
				float additionalVerticalForce // ByteSize{4}, Index{55}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 spawnOnGround // ByteSize{1}, Index{56}, Version{1}, IsArray{0}, MetaFlag{4100}
				float minDistance // ByteSize{4}, Index{57}, Version{1}, IsArray{0}, MetaFlag{0}
				float maxDistance // ByteSize{4}, Index{58}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 specificPixelCollider // ByteSize{1}, Index{59}, Version{1}, IsArray{0}, MetaFlag{4100}
				int pixelColliderIndex // ByteSize{4}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 SuppressAllHitEffects // ByteSize{1}, Index{5b}, Version{1}, IsArray{0}, MetaFlag{4100}

// classID{114}: DungeonDoorController
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int doorMode // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 doorClosesAfterEveryOpen // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{4100}
	DoorModule doorModules // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
			DoorModule data // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{0}, MetaFlag{8000}
				PPtr<$tk2dSpriteAnimator> animator // ByteSize{c}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{14}, Version{1}, IsArray{0}, MetaFlag{800001}
				float openDepth // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
				float closedDepth // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 openPerpendicular // ByteSize{1}, Index{17}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 horizontalFlips // ByteSize{1}, Index{18}, Version{1}, IsArray{0}, MetaFlag{4100}
				string openAnimationName // ByteSize{ffffffff}, Index{19}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{1a}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{1}
				string closeAnimationName // ByteSize{ffffffff}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{1e}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{1}
				vector AOAnimatorsToDisable // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
					Array Array // ByteSize{ffffffff}, Index{22}, Version{1}, IsArray{1}, MetaFlag{0}
						int size // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{0}
						PPtr<$tk2dSpriteAnimator> data // ByteSize{c}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
							int m_FileID // ByteSize{4}, Index{25}, Version{1}, IsArray{0}, MetaFlag{800001}
							SInt64 m_PathID // ByteSize{8}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$tk2dSprite> sprite // ByteSize{c}, Index{27}, Version{1}, IsArray{0}, MetaFlag{1}
					int m_FileID // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{29}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$SpeculativeRigidbody> rigidbody // ByteSize{c}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{1}
					int m_FileID // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 hideSealAnimators // ByteSize{1}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector sealAnimators // ByteSize{ffffffff}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{2f}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$tk2dSpriteAnimator> data // ByteSize{c}, Index{31}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{32}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{33}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector sealChainAnimators // ByteSize{ffffffff}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{35}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{36}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$tk2dSpriteAnimator> data // ByteSize{c}, Index{37}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{39}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector sealVFX // ByteSize{ffffffff}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{3b}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$tk2dSpriteAnimator> data // ByteSize{c}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{800001}
	float unsealDistanceMaximum // ByteSize{4}, Index{40}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$GameObject> unsealedVFXOverride // ByteSize{c}, Index{41}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{43}, Version{1}, IsArray{0}, MetaFlag{800001}
	string sealAnimationName // ByteSize{ffffffff}, Index{44}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{45}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{46}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{47}, Version{1}, IsArray{0}, MetaFlag{1}
	string unsealAnimationName // ByteSize{ffffffff}, Index{48}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{49}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{1}
	string playerNearSealedAnimationName // ByteSize{ffffffff}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{4d}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 SupportsSubsidiaryDoors // ByteSize{1}, Index{50}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 northSouth // ByteSize{1}, Index{51}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$DungeonDoorSubsidiaryBlocker> subsidiaryBlocker // ByteSize{c}, Index{52}, Version{1}, IsArray{0}, MetaFlag{1}
		int m_FileID // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{54}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonDoorController> subsidiaryDoor // ByteSize{c}, Index{55}, Version{1}, IsArray{0}, MetaFlag{1}
		int m_FileID // ByteSize{4}, Index{56}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{57}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonDoorController> parentDoor // ByteSize{c}, Index{58}, Version{1}, IsArray{0}, MetaFlag{1}
		int m_FileID // ByteSize{4}, Index{59}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$tk2dSpriteAnimator> LockAnimator // ByteSize{c}, Index{5b}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{5d}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$tk2dSpriteAnimator> ChainsAnimator // ByteSize{c}, Index{5e}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{60}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 isLocked // ByteSize{1}, Index{61}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 lockIsBusted // ByteSize{1}, Index{62}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 isSealed // ByteSize{1}, Index{63}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 usesUnsealScreenShake // ByteSize{1}, Index{64}, Version{1}, IsArray{0}, MetaFlag{4100}
	ScreenShakeSettings unsealScreenShake // ByteSize{24}, Index{65}, Version{1}, IsArray{0}, MetaFlag{0}
		float magnitude // ByteSize{4}, Index{66}, Version{1}, IsArray{0}, MetaFlag{0}
		float speed // ByteSize{4}, Index{67}, Version{1}, IsArray{0}, MetaFlag{0}
		float time // ByteSize{4}, Index{68}, Version{1}, IsArray{0}, MetaFlag{0}
		float falloff // ByteSize{4}, Index{69}, Version{1}, IsArray{0}, MetaFlag{0}
		Vector2f direction // ByteSize{8}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{200000}
			float x // ByteSize{4}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{200000}
			float y // ByteSize{4}, Index{6c}, Version{1}, IsArray{0}, MetaFlag{200000}
		int vibrationType // ByteSize{4}, Index{6d}, Version{1}, IsArray{0}, MetaFlag{0}
		int simpleVibrationTime // ByteSize{4}, Index{6e}, Version{1}, IsArray{0}, MetaFlag{0}
		int simpleVibrationStrength // ByteSize{4}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{0}

// classID{114}: TileIndexGrid
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int roomTypeRestriction // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topLeftIndices // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{13}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topIndices // ByteSize{ffffffff}, Index{16}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1c}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topRightIndices // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{24}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{25}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{27}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList leftIndices // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{29}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{2a}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{2e}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList centerIndices // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{35}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{37}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList rightIndices // ByteSize{ffffffff}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{3c}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{40}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList bottomLeftIndices // ByteSize{ffffffff}, Index{43}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{44}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{45}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{46}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{47}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{48}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{49}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList bottomIndices // ByteSize{ffffffff}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{4e}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{51}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{52}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList bottomRightIndices // ByteSize{ffffffff}, Index{55}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{56}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{57}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{58}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{59}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{5b}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{5d}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList horizontalIndices // ByteSize{ffffffff}, Index{5e}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{60}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{61}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{62}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{63}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{64}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{65}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{66}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList verticalIndices // ByteSize{ffffffff}, Index{67}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{68}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{69}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{6c}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{6d}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{6e}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topCapIndices // ByteSize{ffffffff}, Index{70}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{71}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{72}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{73}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{74}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{75}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{76}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{77}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{78}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList rightCapIndices // ByteSize{ffffffff}, Index{79}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{7a}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{7b}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{7c}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{7d}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{7e}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{7f}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{80}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{81}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList bottomCapIndices // ByteSize{ffffffff}, Index{82}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{83}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{84}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{85}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{86}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{87}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{88}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{89}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{8a}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList leftCapIndices // ByteSize{ffffffff}, Index{8b}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{8c}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{8d}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{8e}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{8f}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{90}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{91}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{92}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{93}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList allSidesIndices // ByteSize{ffffffff}, Index{94}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{95}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{96}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{97}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{98}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{99}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{9a}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{9b}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{9c}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topLeftNubIndices // ByteSize{ffffffff}, Index{9d}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{9e}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{9f}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{a0}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{a1}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{a2}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{a3}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{a4}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{a5}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topRightNubIndices // ByteSize{ffffffff}, Index{a6}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{a7}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{a8}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{a9}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{aa}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{ab}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{ac}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{ad}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{ae}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList bottomLeftNubIndices // ByteSize{ffffffff}, Index{af}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{b0}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{b1}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{b2}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{b3}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{b4}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{b5}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{b6}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{b7}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList bottomRightNubIndices // ByteSize{ffffffff}, Index{b8}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{b9}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{ba}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{bb}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{bc}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{bd}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{be}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{bf}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{c0}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 extendedSet // ByteSize{1}, Index{c1}, Version{1}, IsArray{0}, MetaFlag{4100}
	TileIndexList topCenterLeftIndices // ByteSize{ffffffff}, Index{c2}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{c3}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{c4}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{c5}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{c6}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{c7}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{c8}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{c9}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{ca}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topCenterIndices // ByteSize{ffffffff}, Index{cb}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{cc}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{cd}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{ce}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{cf}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{d0}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{d1}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{d2}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{d3}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topCenterRightIndices // ByteSize{ffffffff}, Index{d4}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{d5}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{d6}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{d7}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{d8}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{d9}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{da}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{db}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{dc}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList thirdTopRowLeftIndices // ByteSize{ffffffff}, Index{dd}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{de}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{df}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{e0}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{e1}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{e2}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{e3}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{e4}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{e5}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList thirdTopRowCenterIndices // ByteSize{ffffffff}, Index{e6}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{e7}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{e8}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{e9}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{ea}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{eb}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{ec}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{ed}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{ee}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList thirdTopRowRightIndices // ByteSize{ffffffff}, Index{ef}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{f0}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{f1}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{f2}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{f3}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{f4}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{f5}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{f6}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{f7}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList internalBottomLeftCenterIndices // ByteSize{ffffffff}, Index{f8}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{f9}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{fa}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{fb}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{fc}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{fd}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{fe}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{ff}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{100}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList internalBottomCenterIndices // ByteSize{ffffffff}, Index{101}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{102}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{103}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{104}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{105}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{106}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{107}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{108}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{109}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList internalBottomRightCenterIndices // ByteSize{ffffffff}, Index{10a}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{10b}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{10c}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{10d}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{10e}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{10f}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{110}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{111}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{112}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderTopNubLeftIndices // ByteSize{ffffffff}, Index{113}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{114}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{115}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{116}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{117}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{118}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{119}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{11a}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{11b}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderTopNubRightIndices // ByteSize{ffffffff}, Index{11c}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{11d}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{11e}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{11f}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{120}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{121}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{122}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{123}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{124}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderTopNubBothIndices // ByteSize{ffffffff}, Index{125}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{126}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{127}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{128}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{129}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{12a}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{12b}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{12c}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{12d}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderRightNubTopIndices // ByteSize{ffffffff}, Index{12e}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{12f}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{130}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{131}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{132}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{133}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{134}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{135}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{136}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderRightNubBottomIndices // ByteSize{ffffffff}, Index{137}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{138}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{139}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{13a}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{13b}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{13c}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{13d}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{13e}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{13f}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderRightNubBothIndices // ByteSize{ffffffff}, Index{140}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{141}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{142}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{143}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{144}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{145}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{146}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{147}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{148}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderBottomNubLeftIndices // ByteSize{ffffffff}, Index{149}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{14a}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{14b}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{14c}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{14d}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{14e}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{14f}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{150}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{151}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderBottomNubRightIndices // ByteSize{ffffffff}, Index{152}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{153}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{154}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{155}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{156}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{157}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{158}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{159}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{15a}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderBottomNubBothIndices // ByteSize{ffffffff}, Index{15b}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{15c}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{15d}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{15e}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{15f}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{160}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{161}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{162}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{163}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderLeftNubTopIndices // ByteSize{ffffffff}, Index{164}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{165}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{166}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{167}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{168}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{169}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{16a}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{16b}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{16c}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderLeftNubBottomIndices // ByteSize{ffffffff}, Index{16d}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{16e}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{16f}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{170}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{171}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{172}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{173}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{174}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{175}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList borderLeftNubBothIndices // ByteSize{ffffffff}, Index{176}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{177}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{178}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{179}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{17a}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{17b}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{17c}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{17d}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{17e}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalNubsTopLeftBottomRight // ByteSize{ffffffff}, Index{17f}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{180}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{181}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{182}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{183}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{184}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{185}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{186}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{187}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalNubsTopRightBottomLeft // ByteSize{ffffffff}, Index{188}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{189}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{18a}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{18b}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{18c}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{18d}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{18e}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{18f}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{190}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList doubleNubsTop // ByteSize{ffffffff}, Index{191}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{192}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{193}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{194}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{195}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{196}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{197}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{198}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{199}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList doubleNubsRight // ByteSize{ffffffff}, Index{19a}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{19b}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{19c}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{19d}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{19e}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{19f}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1a0}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1a1}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1a2}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList doubleNubsBottom // ByteSize{ffffffff}, Index{1a3}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1a4}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1a5}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1a6}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1a7}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1a8}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1a9}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1aa}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1ab}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList doubleNubsLeft // ByteSize{ffffffff}, Index{1ac}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1ad}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1ae}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1af}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1b0}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1b1}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1b2}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1b3}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1b4}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList quadNubs // ByteSize{ffffffff}, Index{1b5}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1b6}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1b7}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1b8}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1b9}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1ba}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1bb}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1bc}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1bd}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topRightWithNub // ByteSize{ffffffff}, Index{1be}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1bf}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1c0}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1c1}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1c2}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1c3}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1c4}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1c5}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1c6}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList topLeftWithNub // ByteSize{ffffffff}, Index{1c7}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1c8}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1c9}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1ca}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1cb}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1cc}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1cd}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1ce}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1cf}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList bottomRightWithNub // ByteSize{ffffffff}, Index{1d0}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1d1}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1d2}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1d3}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1d4}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1d5}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1d6}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1d7}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1d8}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList bottomLeftWithNub // ByteSize{ffffffff}, Index{1d9}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1da}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1db}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1dc}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1dd}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1de}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1df}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1e0}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1e1}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalBorderNE // ByteSize{ffffffff}, Index{1e2}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1e3}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1e4}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1e5}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1e6}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1e7}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1e8}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1e9}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1ea}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalBorderSE // ByteSize{ffffffff}, Index{1eb}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1ec}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1ed}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1ee}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1ef}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1f0}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1f1}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1f2}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1f3}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalBorderSW // ByteSize{ffffffff}, Index{1f4}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1f5}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1f6}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1f7}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{1f8}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{1f9}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1fa}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{1fb}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{1fc}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalBorderNW // ByteSize{ffffffff}, Index{1fd}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{1fe}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1ff}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{200}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{201}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{202}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{203}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{204}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{205}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalCeilingNE // ByteSize{ffffffff}, Index{206}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{207}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{208}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{209}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{20a}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{20b}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{20c}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{20d}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{20e}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalCeilingSE // ByteSize{ffffffff}, Index{20f}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{210}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{211}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{212}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{213}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{214}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{215}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{216}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{217}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalCeilingSW // ByteSize{ffffffff}, Index{218}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{219}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{21a}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{21b}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{21c}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{21d}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{21e}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{21f}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{220}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList diagonalCeilingNW // ByteSize{ffffffff}, Index{221}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{222}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{223}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{224}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{225}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{226}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{227}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{228}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{229}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 CenterCheckerboard // ByteSize{1}, Index{22a}, Version{1}, IsArray{0}, MetaFlag{4100}
	int CheckerboardDimension // ByteSize{4}, Index{22b}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 CenterIndicesAreStrata // ByteSize{1}, Index{22c}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector PitInternalSquareGrids // ByteSize{ffffffff}, Index{22d}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{22e}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{22f}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$TileIndexGrid> data // ByteSize{c}, Index{230}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{231}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{232}, Version{1}, IsArray{0}, MetaFlag{800001}
	PitSquarePlacementOptions PitInternalSquareOptions // ByteSize{7}, Index{233}, Version{1}, IsArray{0}, MetaFlag{8000}
		float PitSquareChance // ByteSize{4}, Index{234}, Version{1}, IsArray{0}, MetaFlag{0}
		UInt8 CanBeFlushLeft // ByteSize{1}, Index{235}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 CanBeFlushRight // ByteSize{1}, Index{236}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 CanBeFlushBottom // ByteSize{1}, Index{237}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 PitBorderIsInternal // ByteSize{1}, Index{238}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 PitBorderOverridesFloorTile // ByteSize{1}, Index{239}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 CeilingBorderUsesDistancedCenters // ByteSize{1}, Index{23a}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 UsesRatChunkBorders // ByteSize{1}, Index{23b}, Version{1}, IsArray{0}, MetaFlag{4100}
	TileIndexList RatChunkNormalSet // ByteSize{ffffffff}, Index{23c}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{23d}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{23e}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{23f}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{240}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{241}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{242}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{243}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{244}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList RatChunkBottomSet // ByteSize{ffffffff}, Index{245}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{246}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{247}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{248}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{249}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{24a}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{24b}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{24c}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{24d}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$GameObject> PathFacewallStamp // ByteSize{c}, Index{24e}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{24f}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{250}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> PathSidewallStamp // ByteSize{c}, Index{251}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{252}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{253}, Version{1}, IsArray{0}, MetaFlag{800001}
	TileIndexList PathPitPosts // ByteSize{ffffffff}, Index{254}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{255}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{256}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{257}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{258}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{259}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{25a}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{25b}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{25c}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList PathPitPostsBL // ByteSize{ffffffff}, Index{25d}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{25e}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{25f}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{260}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{261}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{262}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{263}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{264}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{265}, Version{1}, IsArray{0}, MetaFlag{0}
	TileIndexList PathPitPostsBR // ByteSize{ffffffff}, Index{266}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector indices // ByteSize{ffffffff}, Index{267}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{268}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{269}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{26a}, Version{1}, IsArray{0}, MetaFlag{0}
		vector indexWeights // ByteSize{ffffffff}, Index{26b}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{26c}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{26d}, Version{1}, IsArray{0}, MetaFlag{0}
				float data // ByteSize{4}, Index{26e}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$GameObject> PathStubNorth // ByteSize{c}, Index{26f}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{270}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{271}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> PathStubEast // ByteSize{c}, Index{272}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{273}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{274}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> PathStubSouth // ByteSize{c}, Index{275}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{276}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{277}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> PathStubWest // ByteSize{c}, Index{278}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{279}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{27a}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{92}: GUILayer
Behaviour Base // ByteSize{d}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}

// classID{20}: Camera
Camera Base // ByteSize{6f}, Index{0}, Version{2}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	unsigned int m_ClearFlags // ByteSize{4}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
	ColorRGBA m_BackGroundColor // ByteSize{10}, Index{6}, Version{1}, IsArray{0}, MetaFlag{200000}
		float r // ByteSize{4}, Index{7}, Version{1}, IsArray{0}, MetaFlag{200001}
		float g // ByteSize{4}, Index{8}, Version{1}, IsArray{0}, MetaFlag{200001}
		float b // ByteSize{4}, Index{9}, Version{1}, IsArray{0}, MetaFlag{200001}
		float a // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{200001}
	Rectf m_NormalizedViewPortRect // ByteSize{10}, Index{b}, Version{2}, IsArray{0}, MetaFlag{0}
		float x // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
		float y // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
		float width // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
		float height // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
	float near clip plane // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
	float far clip plane // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
	float field of view // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}
	bool orthographic // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{4000}
	float orthographic size // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
	float m_Depth // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
	BitField m_CullingMask // ByteSize{4}, Index{16}, Version{2}, IsArray{0}, MetaFlag{0}
		unsigned int m_Bits // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{400001}
	int m_RenderingPath // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{800000}
	PPtr<RenderTexture> m_TargetTexture // ByteSize{c}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{800001}
	int m_TargetDisplay // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{800000}
	int m_TargetEye // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_HDR // ByteSize{1}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_AllowMSAA // ByteSize{1}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_AllowDynamicResolution // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{800000}
	bool m_ForceIntoRT // ByteSize{1}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_OcclusionCulling // ByteSize{1}, Index{22}, Version{1}, IsArray{0}, MetaFlag{4000}
	float m_StereoConvergence // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{0}
	float m_StereoSeparation // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}

// classID{114}: GenericRoomTable
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	WeightedRoomCollection includedRooms // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{0}, MetaFlag{8000}
		WeightedRoom elements // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
				WeightedRoom data // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{0}, MetaFlag{8000}
					PPtr<$PrototypeDungeonRoom> room // ByteSize{c}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{13}, Version{1}, IsArray{0}, MetaFlag{800001}
					float weight // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 limitedCopies // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
					int maxCopies // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
					DungeonPrerequisite additionalPrerequisites // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
							DungeonPrerequisite data // ByteSize{ffffffff}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{8000}
								int prerequisiteType // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
								int prerequisiteOperation // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
								int statToCheck // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
								int maxToCheck // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
								float comparisonValue // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 useSessionStatValue // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
								string encounteredObjectGuid // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{22}, Version{1}, IsArray{1}, MetaFlag{4001}
										int size // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}
										char data // ByteSize{1}, Index{24}, Version{1}, IsArray{0}, MetaFlag{1}
								PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{25}, Version{1}, IsArray{0}, MetaFlag{0}
									int m_FileID // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
									SInt64 m_PathID // ByteSize{8}, Index{27}, Version{1}, IsArray{0}, MetaFlag{800001}
								int requiredNumberOfEncounters // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
								int requiredCharacter // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireCharacter // ByteSize{1}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{4100}
								int requiredTileset // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireTileset // ByteSize{1}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{4100}
								int saveFlagToCheck // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
								UInt8 requireFlag // ByteSize{1}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{4100}
								UInt8 requireDemoMode // ByteSize{1}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector includedRoomTables // ByteSize{ffffffff}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{32}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GenericRoomTable> data // ByteSize{c}, Index{33}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{35}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: SpriteAnimatorKiller
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 onlyDisable // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 deparentOnStart // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector childObjectToDisable // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{13}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$tk2dSpriteAnimator> animator // ByteSize{c}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{16}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$dfSpriteAnimation> dfAnimation // ByteSize{c}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{19}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 hasChildAnimators // ByteSize{1}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 deparentAllChildren // ByteSize{1}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 disableRendererOnDelay // ByteSize{1}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{4100}
	float delayDestructionTime // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
	float fadeTime // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}

// classID{114}: ForceToSortingLayer
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int sortingLayer // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	int targetSortingOrder // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}

// classID{114}: PressurePlate
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 PlayersCanTrigger // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 EnemiesCanTrigger // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 ArbitraryObjectsCanTrigger // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 CanUnpress // ByteSize{1}, Index{f}, Version{1}, IsArray{0}, MetaFlag{4100}
	string depressAnimationName // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{1}
	string unpressAnimationName // ByteSize{ffffffff}, Index{14}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{15}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{17}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{114}: Dungeonator.DungeonPlaceable
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int width // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	int height // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 isPassable // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 roomSequential // ByteSize{1}, Index{f}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 respectsEncounterableDifferentiator // ByteSize{1}, Index{10}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 UsePrefabTransformOffset // ByteSize{1}, Index{11}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 MarkSpawnedItemsAsRatIgnored // ByteSize{1}, Index{12}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 DebugThisPlaceable // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsAnnexTable // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{4100}
	DungeonPlaceableVariant variantTiers // ByteSize{ffffffff}, Index{15}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{16}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonPlaceableVariant data // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{0}, MetaFlag{8000}
				float percentChance // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
				Vector2f unitOffset // ByteSize{8}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{200000}
				PPtr<$GameObject> nonDatabasePlaceable // ByteSize{c}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{800001}
				string enemyPlaceableGuid // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}
				int pickupObjectPlaceableId // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 forceBlackPhantom // ByteSize{1}, Index{25}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 addDebrisObject // ByteSize{1}, Index{26}, Version{1}, IsArray{0}, MetaFlag{4100}
				DungeonPrerequisite prerequisites // ByteSize{ffffffff}, Index{27}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite data // ByteSize{ffffffff}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{8000}
							int prerequisiteType // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{0}
							int prerequisiteOperation // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
							int statToCheck // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
							int maxToCheck // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
							float comparisonValue // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 useSessionStatValue // ByteSize{1}, Index{30}, Version{1}, IsArray{0}, MetaFlag{4100}
							string encounteredObjectGuid // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{33}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{34}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{35}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{36}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{37}, Version{1}, IsArray{0}, MetaFlag{800001}
							int requiredNumberOfEncounters // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{0}
							int requiredCharacter // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireCharacter // ByteSize{1}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{4100}
							int requiredTileset // ByteSize{4}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireTileset // ByteSize{1}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{4100}
							int saveFlagToCheck // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireFlag // ByteSize{1}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 requireDemoMode // ByteSize{1}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{4100}
				DungeonPlaceableRoomMaterialRequirement materialRequirements // ByteSize{ffffffff}, Index{40}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{41}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPlaceableRoomMaterialRequirement data // ByteSize{9}, Index{43}, Version{1}, IsArray{0}, MetaFlag{8000}
							int TargetTileset // ByteSize{4}, Index{44}, Version{1}, IsArray{0}, MetaFlag{0}
							int RoomMaterial // ByteSize{4}, Index{45}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 RequireMaterial // ByteSize{1}, Index{46}, Version{1}, IsArray{0}, MetaFlag{4100}

// classID{28}: Texture2D
Texture2D Base // ByteSize{ffffffff}, Index{0}, Version{2}, IsArray{0}, MetaFlag{8000}
	string m_Name // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{1}
	int m_ForcedFallbackFormat // ByteSize{4}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_DownscaleFallback // ByteSize{1}, Index{6}, Version{1}, IsArray{0}, MetaFlag{4000}
	int m_Width // ByteSize{4}, Index{7}, Version{1}, IsArray{0}, MetaFlag{10}
	int m_Height // ByteSize{4}, Index{8}, Version{1}, IsArray{0}, MetaFlag{10}
	int m_CompleteImageSize // ByteSize{4}, Index{9}, Version{1}, IsArray{0}, MetaFlag{10}
	int m_TextureFormat // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
	int m_MipCount // ByteSize{4}, Index{b}, Version{1}, IsArray{0}, MetaFlag{10}
	bool m_IsReadable // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{4000}
	int m_ImageCount // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{10}
	int m_TextureDimension // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{1}
	GLTextureSettings m_TextureSettings // ByteSize{18}, Index{f}, Version{2}, IsArray{0}, MetaFlag{0}
		int m_FilterMode // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_Aniso // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
		float m_MipBias // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_WrapU // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_WrapV // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_WrapW // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
	int m_LightmapFormat // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
	int m_ColorSpace // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
	TypelessData image data // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{1}, MetaFlag{4001}
		int size // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{1}
		UInt8 data // ByteSize{1}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{1}
	StreamingInfo m_StreamData // ByteSize{ffffffff}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{8000}
		unsigned int offset // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
		unsigned int size // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
		string path // ByteSize{ffffffff}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{1}, MetaFlag{4001}
				int size // ByteSize{4}, Index{20}, Version{1}, IsArray{0}, MetaFlag{1}
				char data // ByteSize{1}, Index{21}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{114}: DungeonFlow
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	PPtr<$GenericRoomTable> fallbackRoomTable // ByteSize{c}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{e}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GenericRoomTable> phantomRoomTable // ByteSize{c}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{11}, Version{1}, IsArray{0}, MetaFlag{800001}
	DungeonFlowSubtypeRestriction subtypeRestrictions // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{13}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonFlowSubtypeRestriction data // ByteSize{18}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
				int baseCategoryRestriction // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
				int normalSubcategoryRestriction // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
				int bossSubcategoryRestriction // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
				int specialSubcategoryRestriction // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
				int secretSubcategoryRestriction // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
				int maximumRoomsOfSubtype // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
	DungeonFlowNode m_nodes // ByteSize{ffffffff}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{1d}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonFlowNode data // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{8000}
				UInt8 isSubchainStandin // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
				int nodeType // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
				int roomCategory // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
				float percentChance // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{0}
				int priority // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$PrototypeDungeonRoom> overrideExactRoom // ByteSize{c}, Index{25}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{27}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$GenericRoomTable> overrideRoomTable // ByteSize{c}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{800001}
				UInt8 capSubchain // ByteSize{1}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{4100}
				string subchainIdentifier // ByteSize{ffffffff}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{2d}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 limitedCopiesOfSubchain // ByteSize{1}, Index{30}, Version{1}, IsArray{0}, MetaFlag{4100}
				int maxCopiesOfSubchain // ByteSize{4}, Index{31}, Version{1}, IsArray{0}, MetaFlag{0}
				vector subchainIdentifiers // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{c000}
						int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
						string data // ByteSize{ffffffff}, Index{35}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{1}, MetaFlag{4001}
								int size // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{1}
								char data // ByteSize{1}, Index{38}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 receivesCaps // ByteSize{1}, Index{39}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 isWarpWingEntrance // ByteSize{1}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 handlesOwnWarping // ByteSize{1}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{4100}
				int forcedDoorType // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{0}
				int loopForcedDoorType // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 nodeExpands // ByteSize{1}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{4100}
				string initialChainPrototype // ByteSize{ffffffff}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{40}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{42}, Version{1}, IsArray{0}, MetaFlag{1}
				ChainRule chainRules // ByteSize{ffffffff}, Index{43}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{44}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{45}, Version{1}, IsArray{0}, MetaFlag{0}
						ChainRule data // ByteSize{ffffffff}, Index{46}, Version{1}, IsArray{0}, MetaFlag{8000}
							string form // ByteSize{ffffffff}, Index{47}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{48}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{49}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{1}
							string target // ByteSize{ffffffff}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{4c}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{1}
							float weight // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 mandatory // ByteSize{1}, Index{50}, Version{1}, IsArray{0}, MetaFlag{4100}
				int minChainLength // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{0}
				int maxChainLength // ByteSize{4}, Index{52}, Version{1}, IsArray{0}, MetaFlag{0}
				int minChildrenToBuild // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
				int maxChildrenToBuild // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 canBuildDuplicateChildren // ByteSize{1}, Index{55}, Version{1}, IsArray{0}, MetaFlag{4100}
				string parentNodeGuid // ByteSize{ffffffff}, Index{56}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{57}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{58}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{59}, Version{1}, IsArray{0}, MetaFlag{1}
				vector childNodeGuids // ByteSize{ffffffff}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{5b}, Version{1}, IsArray{1}, MetaFlag{c000}
						int size // ByteSize{4}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{0}
						string data // ByteSize{ffffffff}, Index{5d}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{5e}, Version{1}, IsArray{1}, MetaFlag{4001}
								int size // ByteSize{4}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{1}
								char data // ByteSize{1}, Index{60}, Version{1}, IsArray{0}, MetaFlag{1}
				string loopTargetNodeGuid // ByteSize{ffffffff}, Index{61}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{62}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{63}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{64}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 loopTargetIsOneWay // ByteSize{1}, Index{65}, Version{1}, IsArray{0}, MetaFlag{4100}
				string guidAsString // ByteSize{ffffffff}, Index{66}, Version{1}, IsArray{0}, MetaFlag{8001}
					Array Array // ByteSize{ffffffff}, Index{67}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{68}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{69}, Version{1}, IsArray{0}, MetaFlag{1}
				PPtr<$DungeonFlow> flow // ByteSize{c}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{6c}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector m_nodeGuids // ByteSize{ffffffff}, Index{6d}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{6e}, Version{1}, IsArray{1}, MetaFlag{c000}
			int size // ByteSize{4}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{0}
			string data // ByteSize{ffffffff}, Index{70}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{71}, Version{1}, IsArray{1}, MetaFlag{4001}
					int size // ByteSize{4}, Index{72}, Version{1}, IsArray{0}, MetaFlag{1}
					char data // ByteSize{1}, Index{73}, Version{1}, IsArray{0}, MetaFlag{1}
	string m_firstNodeGuid // ByteSize{ffffffff}, Index{74}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{75}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{76}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{77}, Version{1}, IsArray{0}, MetaFlag{1}
	ProceduralFlowModifierData flowInjectionData // ByteSize{ffffffff}, Index{78}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{79}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{7a}, Version{1}, IsArray{0}, MetaFlag{0}
			ProceduralFlowModifierData data // ByteSize{ffffffff}, Index{7b}, Version{1}, IsArray{0}, MetaFlag{8000}
				string annotation // ByteSize{ffffffff}, Index{7c}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{7d}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{7e}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{7f}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 DEBUG_FORCE_SPAWN // ByteSize{1}, Index{80}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 OncePerRun // ByteSize{1}, Index{81}, Version{1}, IsArray{0}, MetaFlag{4100}
				vector placementRules // ByteSize{ffffffff}, Index{82}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{83}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{84}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{85}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$GenericRoomTable> roomTable // ByteSize{c}, Index{86}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{87}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{88}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$PrototypeDungeonRoom> exactRoom // ByteSize{c}, Index{89}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{8a}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{8b}, Version{1}, IsArray{0}, MetaFlag{800001}
				UInt8 IsWarpWing // ByteSize{1}, Index{8c}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 RequiresMasteryToken // ByteSize{1}, Index{8d}, Version{1}, IsArray{0}, MetaFlag{4100}
				float chanceToLock // ByteSize{4}, Index{8e}, Version{1}, IsArray{0}, MetaFlag{0}
				float selectionWeight // ByteSize{4}, Index{8f}, Version{1}, IsArray{0}, MetaFlag{0}
				float chanceToSpawn // ByteSize{4}, Index{90}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonPlaceable> RequiredValidPlaceable // ByteSize{c}, Index{91}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{92}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{93}, Version{1}, IsArray{0}, MetaFlag{800001}
				DungeonPrerequisite prerequisites // ByteSize{ffffffff}, Index{94}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{95}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{96}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite data // ByteSize{ffffffff}, Index{97}, Version{1}, IsArray{0}, MetaFlag{8000}
							int prerequisiteType // ByteSize{4}, Index{98}, Version{1}, IsArray{0}, MetaFlag{0}
							int prerequisiteOperation // ByteSize{4}, Index{99}, Version{1}, IsArray{0}, MetaFlag{0}
							int statToCheck // ByteSize{4}, Index{9a}, Version{1}, IsArray{0}, MetaFlag{0}
							int maxToCheck // ByteSize{4}, Index{9b}, Version{1}, IsArray{0}, MetaFlag{0}
							float comparisonValue // ByteSize{4}, Index{9c}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 useSessionStatValue // ByteSize{1}, Index{9d}, Version{1}, IsArray{0}, MetaFlag{4100}
							string encounteredObjectGuid // ByteSize{ffffffff}, Index{9e}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{9f}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{a0}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{a1}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{a2}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{a3}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{a4}, Version{1}, IsArray{0}, MetaFlag{800001}
							int requiredNumberOfEncounters // ByteSize{4}, Index{a5}, Version{1}, IsArray{0}, MetaFlag{0}
							int requiredCharacter // ByteSize{4}, Index{a6}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireCharacter // ByteSize{1}, Index{a7}, Version{1}, IsArray{0}, MetaFlag{4100}
							int requiredTileset // ByteSize{4}, Index{a8}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireTileset // ByteSize{1}, Index{a9}, Version{1}, IsArray{0}, MetaFlag{4100}
							int saveFlagToCheck // ByteSize{4}, Index{aa}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireFlag // ByteSize{1}, Index{ab}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 requireDemoMode // ByteSize{1}, Index{ac}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 CanBeForcedSecret // ByteSize{1}, Index{ad}, Version{1}, IsArray{0}, MetaFlag{4100}
				int RandomNodeChildMinDistanceFromEntrance // ByteSize{4}, Index{ae}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$PrototypeDungeonRoom> exactSecondaryRoom // ByteSize{c}, Index{af}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{b0}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{b1}, Version{1}, IsArray{0}, MetaFlag{800001}
				int framedCombatNodes // ByteSize{4}, Index{b2}, Version{1}, IsArray{0}, MetaFlag{0}
	vector sharedInjectionData // ByteSize{ffffffff}, Index{b3}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{b4}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{b5}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$SharedInjectionData> data // ByteSize{c}, Index{b6}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{b7}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{b8}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: AudioAnimatorListener
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	ActorAudioEvent animationAudioEvents // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
			ActorAudioEvent data // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{0}, MetaFlag{8000}
				string eventTag // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{1}
				string eventName // ByteSize{ffffffff}, Index{14}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{15}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{17}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{114}: SceneLightManager
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	vector validColors // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
			ColorRGBA data // ByteSize{10}, Index{f}, Version{1}, IsArray{0}, MetaFlag{200000}
				float r // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{200001}
				float g // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{200001}
				float b // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{200001}
				float a // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{200001}

// classID{142}: AssetBundle
AssetBundle Base // ByteSize{ffffffff}, Index{0}, Version{3}, IsArray{0}, MetaFlag{8000}
	string m_Name // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{1}
	vector m_PreloadTable // ByteSize{ffffffff}, Index{5}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{6}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{7}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<Object> data // ByteSize{c}, Index{8}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{9}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{a}, Version{1}, IsArray{0}, MetaFlag{800001}
	map m_Container // ByteSize{ffffffff}, Index{b}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
			pair data // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{0}, MetaFlag{8000}
				string first // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{12}, Version{1}, IsArray{0}, MetaFlag{1}
				AssetInfo second // ByteSize{14}, Index{13}, Version{1}, IsArray{0}, MetaFlag{0}
					int preloadIndex // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
					int preloadSize // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
					PPtr<Object> asset // ByteSize{c}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{18}, Version{1}, IsArray{0}, MetaFlag{800001}
	AssetInfo m_MainAsset // ByteSize{14}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
		int preloadIndex // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
		int preloadSize // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<Object> asset // ByteSize{c}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
	unsigned int m_RuntimeCompatibility // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
	string m_AssetBundleName // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{21}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{1}
	vector m_Dependencies // ByteSize{ffffffff}, Index{24}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{25}, Version{1}, IsArray{1}, MetaFlag{c000}
			int size // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{0}
			string data // ByteSize{ffffffff}, Index{27}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{1}, MetaFlag{4001}
					int size // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{1}
					char data // ByteSize{1}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{1}
	bool m_IsStreamedSceneAssetBundle // ByteSize{1}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{4000}
	int m_ExplicitDataLayout // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
	int m_PathFlags // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
	map m_SceneHashes // ByteSize{ffffffff}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{2f}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
			pair data // ByteSize{ffffffff}, Index{31}, Version{1}, IsArray{0}, MetaFlag{8000}
				string first // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{35}, Version{1}, IsArray{0}, MetaFlag{1}
				string second // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{37}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{39}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{124}: FlareLayer
Behaviour Base // ByteSize{d}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}

// classID{114}: Dungeonator.SharedInjectionData
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	ProceduralFlowModifierData InjectionData // ByteSize{ffffffff}, Index{c}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{d}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
			ProceduralFlowModifierData data // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{0}, MetaFlag{8000}
				string annotation // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{13}, Version{1}, IsArray{0}, MetaFlag{1}
				UInt8 DEBUG_FORCE_SPAWN // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 OncePerRun // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
				vector placementRules // ByteSize{ffffffff}, Index{16}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$GenericRoomTable> roomTable // ByteSize{c}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{800001}
				PPtr<$PrototypeDungeonRoom> exactRoom // ByteSize{c}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{800001}
				UInt8 IsWarpWing // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 RequiresMasteryToken // ByteSize{1}, Index{21}, Version{1}, IsArray{0}, MetaFlag{4100}
				float chanceToLock // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
				float selectionWeight // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{0}
				float chanceToSpawn // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonPlaceable> RequiredValidPlaceable // ByteSize{c}, Index{25}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{27}, Version{1}, IsArray{0}, MetaFlag{800001}
				DungeonPrerequisite prerequisites // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{29}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite data // ByteSize{ffffffff}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{8000}
							int prerequisiteType // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
							int prerequisiteOperation // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
							int statToCheck // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
							int maxToCheck // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{0}
							float comparisonValue // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 useSessionStatValue // ByteSize{1}, Index{31}, Version{1}, IsArray{0}, MetaFlag{4100}
							string encounteredObjectGuid // ByteSize{ffffffff}, Index{32}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{33}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{35}, Version{1}, IsArray{0}, MetaFlag{1}
							PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{36}, Version{1}, IsArray{0}, MetaFlag{0}
								int m_FileID // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{800001}
								SInt64 m_PathID // ByteSize{8}, Index{38}, Version{1}, IsArray{0}, MetaFlag{800001}
							int requiredNumberOfEncounters // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
							int requiredCharacter // ByteSize{4}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireCharacter // ByteSize{1}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{4100}
							int requiredTileset // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireTileset // ByteSize{1}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{4100}
							int saveFlagToCheck // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{0}
							UInt8 requireFlag // ByteSize{1}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{4100}
							UInt8 requireDemoMode // ByteSize{1}, Index{40}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 CanBeForcedSecret // ByteSize{1}, Index{41}, Version{1}, IsArray{0}, MetaFlag{4100}
				int RandomNodeChildMinDistanceFromEntrance // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$PrototypeDungeonRoom> exactSecondaryRoom // ByteSize{c}, Index{43}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{44}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{45}, Version{1}, IsArray{0}, MetaFlag{800001}
				int framedCombatNodes // ByteSize{4}, Index{46}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 UseInvalidWeightAsNoInjection // ByteSize{1}, Index{47}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 PreventInjectionOfFailedPrerequisites // ByteSize{1}, Index{48}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsNPCCell // ByteSize{1}, Index{49}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IgnoreUnmetPrerequisiteEntries // ByteSize{1}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 OnlyOne // ByteSize{1}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{4100}
	float ChanceToSpawnOne // ByteSize{4}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{0}
	vector AttachedInjectionData // ByteSize{ffffffff}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{4e}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$SharedInjectionData> data // ByteSize{c}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{52}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: Dungeonator.Dungeon
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int contentSource // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	int DungeonSeed // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	string DungeonShortName // ByteSize{ffffffff}, Index{e}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{11}, Version{1}, IsArray{0}, MetaFlag{1}
	string DungeonFloorName // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{13}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{1}
	string DungeonFloorLevelTextOverride // ByteSize{ffffffff}, Index{16}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{17}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{19}, Version{1}, IsArray{0}, MetaFlag{1}
	int LevelOverrideType // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
	DebugDungeonSettings debugSettings // ByteSize{e}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{8000}
		UInt8 RAPID_DEBUG_DUNGEON_ITERATION_SEEKER // ByteSize{1}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 RAPID_DEBUG_DUNGEON_ITERATION // ByteSize{1}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{4100}
		int RAPID_DEBUG_DUNGEON_COUNT // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
		UInt8 GENERATION_VIEWER_MODE // ByteSize{1}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 FULL_MINIMAP_VISIBILITY // ByteSize{1}, Index{20}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 COOP_TEST // ByteSize{1}, Index{21}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 DISABLE_ENEMIES // ByteSize{1}, Index{22}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 DISABLE_LOOPS // ByteSize{1}, Index{23}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 DISABLE_SECRET_ROOM_COVERS // ByteSize{1}, Index{24}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 DISABLE_OUTLINES // ByteSize{1}, Index{25}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 WALLS_ARE_PITS // ByteSize{1}, Index{26}, Version{1}, IsArray{0}, MetaFlag{4100}
	SemioticDungeonGenSettings PatternSettings // ByteSize{ffffffff}, Index{27}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector flows // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{29}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonFlow> data // ByteSize{c}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{800001}
		ExtraIncludedRoomData mandatoryExtraRooms // ByteSize{ffffffff}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{2f}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
				ExtraIncludedRoomData data // ByteSize{c}, Index{31}, Version{1}, IsArray{0}, MetaFlag{0}
					PPtr<$PrototypeDungeonRoom> room // ByteSize{c}, Index{32}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{33}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{34}, Version{1}, IsArray{0}, MetaFlag{800001}
		ExtraIncludedRoomData optionalExtraRooms // ByteSize{ffffffff}, Index{35}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{0}
				ExtraIncludedRoomData data // ByteSize{c}, Index{38}, Version{1}, IsArray{0}, MetaFlag{0}
					PPtr<$PrototypeDungeonRoom> room // ByteSize{c}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{800001}
		int MAX_GENERATION_ATTEMPTS // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{0}
		UInt8 DEBUG_RENDER_CANVASES_SEPARATELY // ByteSize{1}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 ForceRegenerationOfCharacters // ByteSize{1}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 ActuallyGenerateTilemap // ByteSize{1}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{4100}
	TilemapDecoSettings decoSettings // ByteSize{ffffffff}, Index{40}, Version{1}, IsArray{0}, MetaFlag{8000}
		WeightedIntCollection standardRoomVisualSubtypes // ByteSize{ffffffff}, Index{41}, Version{1}, IsArray{0}, MetaFlag{8000}
			WeightedInt elements // ByteSize{ffffffff}, Index{42}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{43}, Version{1}, IsArray{1}, MetaFlag{8000}
					int size // ByteSize{4}, Index{44}, Version{1}, IsArray{0}, MetaFlag{0}
					WeightedInt data // ByteSize{ffffffff}, Index{45}, Version{1}, IsArray{0}, MetaFlag{8000}
						string annotation // ByteSize{ffffffff}, Index{46}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{47}, Version{1}, IsArray{1}, MetaFlag{4001}
								int size // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{1}
								char data // ByteSize{1}, Index{49}, Version{1}, IsArray{0}, MetaFlag{1}
						int value // ByteSize{4}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{0}
						float weight // ByteSize{4}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{0}
						DungeonPrerequisite additionalPrerequisites // ByteSize{ffffffff}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{8000}
							Array Array // ByteSize{ffffffff}, Index{4d}, Version{1}, IsArray{1}, MetaFlag{8000}
								int size // ByteSize{4}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{0}
								DungeonPrerequisite data // ByteSize{ffffffff}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{8000}
									int prerequisiteType // ByteSize{4}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
									int prerequisiteOperation // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{0}
									int statToCheck // ByteSize{4}, Index{52}, Version{1}, IsArray{0}, MetaFlag{0}
									int maxToCheck // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
									float comparisonValue // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
									UInt8 useSessionStatValue // ByteSize{1}, Index{55}, Version{1}, IsArray{0}, MetaFlag{4100}
									string encounteredObjectGuid // ByteSize{ffffffff}, Index{56}, Version{1}, IsArray{0}, MetaFlag{8000}
										Array Array // ByteSize{ffffffff}, Index{57}, Version{1}, IsArray{1}, MetaFlag{4001}
											int size // ByteSize{4}, Index{58}, Version{1}, IsArray{0}, MetaFlag{1}
											char data // ByteSize{1}, Index{59}, Version{1}, IsArray{0}, MetaFlag{1}
									PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{0}
										int m_FileID // ByteSize{4}, Index{5b}, Version{1}, IsArray{0}, MetaFlag{800001}
										SInt64 m_PathID // ByteSize{8}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{800001}
									int requiredNumberOfEncounters // ByteSize{4}, Index{5d}, Version{1}, IsArray{0}, MetaFlag{0}
									int requiredCharacter // ByteSize{4}, Index{5e}, Version{1}, IsArray{0}, MetaFlag{0}
									UInt8 requireCharacter // ByteSize{1}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{4100}
									int requiredTileset // ByteSize{4}, Index{60}, Version{1}, IsArray{0}, MetaFlag{0}
									UInt8 requireTileset // ByteSize{1}, Index{61}, Version{1}, IsArray{0}, MetaFlag{4100}
									int saveFlagToCheck // ByteSize{4}, Index{62}, Version{1}, IsArray{0}, MetaFlag{0}
									UInt8 requireFlag // ByteSize{1}, Index{63}, Version{1}, IsArray{0}, MetaFlag{4100}
									UInt8 requireDemoMode // ByteSize{1}, Index{64}, Version{1}, IsArray{0}, MetaFlag{4100}
		int decalLayerStyle // ByteSize{4}, Index{65}, Version{1}, IsArray{0}, MetaFlag{0}
		int decalSize // ByteSize{4}, Index{66}, Version{1}, IsArray{0}, MetaFlag{0}
		int decalSpacing // ByteSize{4}, Index{67}, Version{1}, IsArray{0}, MetaFlag{0}
		int decalExpansion // ByteSize{4}, Index{68}, Version{1}, IsArray{0}, MetaFlag{0}
		int patternLayerStyle // ByteSize{4}, Index{69}, Version{1}, IsArray{0}, MetaFlag{0}
		int patternSize // ByteSize{4}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{0}
		int patternSpacing // ByteSize{4}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{0}
		int patternExpansion // ByteSize{4}, Index{6c}, Version{1}, IsArray{0}, MetaFlag{0}
		float decoPatchFrequency // ByteSize{4}, Index{6d}, Version{1}, IsArray{0}, MetaFlag{0}
		ColorRGBA ambientLightColor // ByteSize{10}, Index{6e}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{70}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{71}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{72}, Version{1}, IsArray{0}, MetaFlag{200001}
		ColorRGBA ambientLightColorTwo // ByteSize{10}, Index{73}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{74}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{75}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{76}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{77}, Version{1}, IsArray{0}, MetaFlag{200001}
		ColorRGBA lowQualityAmbientLightColor // ByteSize{10}, Index{78}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{79}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{7a}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{7b}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{7c}, Version{1}, IsArray{0}, MetaFlag{200001}
		ColorRGBA lowQualityAmbientLightColorTwo // ByteSize{10}, Index{7d}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{7e}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{7f}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{80}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{81}, Version{1}, IsArray{0}, MetaFlag{200001}
		Vector4f lowQualityCheapLightVector // ByteSize{10}, Index{82}, Version{1}, IsArray{0}, MetaFlag{200000}
			float x // ByteSize{4}, Index{83}, Version{1}, IsArray{0}, MetaFlag{200000}
			float y // ByteSize{4}, Index{84}, Version{1}, IsArray{0}, MetaFlag{200000}
			float z // ByteSize{4}, Index{85}, Version{1}, IsArray{0}, MetaFlag{200000}
			float w // ByteSize{4}, Index{86}, Version{1}, IsArray{0}, MetaFlag{200000}
		UInt8 UsesAlienFXFloorColor // ByteSize{1}, Index{87}, Version{1}, IsArray{0}, MetaFlag{4100}
		ColorRGBA AlienFXFloorColor // ByteSize{10}, Index{88}, Version{1}, IsArray{0}, MetaFlag{200000}
			float r // ByteSize{4}, Index{89}, Version{1}, IsArray{0}, MetaFlag{200001}
			float g // ByteSize{4}, Index{8a}, Version{1}, IsArray{0}, MetaFlag{200001}
			float b // ByteSize{4}, Index{8b}, Version{1}, IsArray{0}, MetaFlag{200001}
			float a // ByteSize{4}, Index{8c}, Version{1}, IsArray{0}, MetaFlag{200001}
		UInt8 generateLights // ByteSize{1}, Index{8d}, Version{1}, IsArray{0}, MetaFlag{4100}
		float lightCullingPercentage // ByteSize{4}, Index{8e}, Version{1}, IsArray{0}, MetaFlag{0}
		int lightOverlapRadius // ByteSize{4}, Index{8f}, Version{1}, IsArray{0}, MetaFlag{0}
		float nearestAllowedLight // ByteSize{4}, Index{90}, Version{1}, IsArray{0}, MetaFlag{0}
		int minLightExpanseWidth // ByteSize{4}, Index{91}, Version{1}, IsArray{0}, MetaFlag{0}
		float lightHeight // ByteSize{4}, Index{92}, Version{1}, IsArray{0}, MetaFlag{0}
		vector lightCookies // ByteSize{ffffffff}, Index{93}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{94}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{95}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$Texture2D> data // ByteSize{c}, Index{96}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{97}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{98}, Version{1}, IsArray{0}, MetaFlag{800001}
		UInt8 debug_view // ByteSize{1}, Index{99}, Version{1}, IsArray{0}, MetaFlag{4100}
	TileIndices tileIndices // ByteSize{ffffffff}, Index{9a}, Version{1}, IsArray{0}, MetaFlag{8000}
		int tilesetId // ByteSize{4}, Index{9b}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<$tk2dSpriteCollectionData> dungeonCollection // ByteSize{c}, Index{9c}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{9d}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{9e}, Version{1}, IsArray{0}, MetaFlag{800001}
		UInt8 dungeonCollectionSupportsDiagonalWalls // ByteSize{1}, Index{9f}, Version{1}, IsArray{0}, MetaFlag{4100}
		AOTileIndices aoTileIndices // ByteSize{6c}, Index{a0}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorTileIndex // ByteSize{4}, Index{a1}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallBaseTileIndex // ByteSize{4}, Index{a2}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallTileRightIndex // ByteSize{4}, Index{a3}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallTileLeftIndex // ByteSize{4}, Index{a4}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallTileBothIndex // ByteSize{4}, Index{a5}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOTopFacewallRightIndex // ByteSize{4}, Index{a6}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOTopFacewallLeftIndex // ByteSize{4}, Index{a7}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOTopFacewallBothIndex // ByteSize{4}, Index{a8}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallLeft // ByteSize{4}, Index{a9}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallRight // ByteSize{4}, Index{aa}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallBoth // ByteSize{4}, Index{ab}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceLeft // ByteSize{4}, Index{ac}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceRight // ByteSize{4}, Index{ad}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceBoth // ByteSize{4}, Index{ae}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceLeftWallRight // ByteSize{4}, Index{af}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorPizzaSliceRightWallLeft // ByteSize{4}, Index{b0}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallUpAndLeft // ByteSize{4}, Index{b1}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallUpAndRight // ByteSize{4}, Index{b2}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorWallUpAndBoth // ByteSize{4}, Index{b3}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNortheast // ByteSize{4}, Index{b4}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNortheastLower // ByteSize{4}, Index{b5}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNortheastLowerJoint // ByteSize{4}, Index{b6}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNorthwest // ByteSize{4}, Index{b7}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNorthwestLower // ByteSize{4}, Index{b8}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOFloorDiagonalWallNorthwestLowerJoint // ByteSize{4}, Index{b9}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallDiagonalNortheast // ByteSize{4}, Index{ba}, Version{1}, IsArray{0}, MetaFlag{0}
			int AOBottomWallDiagonalNorthwest // ByteSize{4}, Index{bb}, Version{1}, IsArray{0}, MetaFlag{0}
		UInt8 placeBorders // ByteSize{1}, Index{bc}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 placePits // ByteSize{1}, Index{bd}, Version{1}, IsArray{0}, MetaFlag{4100}
		TileIndexVariant chestHighWallIndices // ByteSize{ffffffff}, Index{be}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{bf}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{c0}, Version{1}, IsArray{0}, MetaFlag{0}
				TileIndexVariant data // ByteSize{10}, Index{c1}, Version{1}, IsArray{0}, MetaFlag{0}
					int index // ByteSize{4}, Index{c2}, Version{1}, IsArray{0}, MetaFlag{0}
					float likelihood // ByteSize{4}, Index{c3}, Version{1}, IsArray{0}, MetaFlag{0}
					int overrideLayerIndex // ByteSize{4}, Index{c4}, Version{1}, IsArray{0}, MetaFlag{0}
					int overrideIndex // ByteSize{4}, Index{c5}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<$TileIndexGrid> decalIndexGrid // ByteSize{c}, Index{c6}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{c7}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{c8}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$TileIndexGrid> patternIndexGrid // ByteSize{c}, Index{c9}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{ca}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{cb}, Version{1}, IsArray{0}, MetaFlag{800001}
		vector globalSecondBorderTiles // ByteSize{ffffffff}, Index{cc}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{cd}, Version{1}, IsArray{1}, MetaFlag{4000}
				int size // ByteSize{4}, Index{ce}, Version{1}, IsArray{0}, MetaFlag{0}
				int data // ByteSize{4}, Index{cf}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<$TileIndexGrid> edgeDecorationTiles // ByteSize{c}, Index{d0}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{d1}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{d2}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector roomMaterialDefinitions // ByteSize{ffffffff}, Index{d3}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{d4}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{d5}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$DungeonMaterial> data // ByteSize{c}, Index{d6}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{d7}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{d8}, Version{1}, IsArray{0}, MetaFlag{800001}
	DungeonWingDefinition dungeonWingDefinitions // ByteSize{ffffffff}, Index{d9}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{da}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{db}, Version{1}, IsArray{0}, MetaFlag{0}
			DungeonWingDefinition data // ByteSize{ffffffff}, Index{dc}, Version{1}, IsArray{0}, MetaFlag{8000}
				WeightedIntCollection includedMaterialIndices // ByteSize{ffffffff}, Index{dd}, Version{1}, IsArray{0}, MetaFlag{8000}
					WeightedInt elements // ByteSize{ffffffff}, Index{de}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{df}, Version{1}, IsArray{1}, MetaFlag{8000}
							int size // ByteSize{4}, Index{e0}, Version{1}, IsArray{0}, MetaFlag{0}
							WeightedInt data // ByteSize{ffffffff}, Index{e1}, Version{1}, IsArray{0}, MetaFlag{8000}
								string annotation // ByteSize{ffffffff}, Index{e2}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{e3}, Version{1}, IsArray{1}, MetaFlag{4001}
										int size // ByteSize{4}, Index{e4}, Version{1}, IsArray{0}, MetaFlag{1}
										char data // ByteSize{1}, Index{e5}, Version{1}, IsArray{0}, MetaFlag{1}
								int value // ByteSize{4}, Index{e6}, Version{1}, IsArray{0}, MetaFlag{0}
								float weight // ByteSize{4}, Index{e7}, Version{1}, IsArray{0}, MetaFlag{0}
								DungeonPrerequisite additionalPrerequisites // ByteSize{ffffffff}, Index{e8}, Version{1}, IsArray{0}, MetaFlag{8000}
									Array Array // ByteSize{ffffffff}, Index{e9}, Version{1}, IsArray{1}, MetaFlag{8000}
										int size // ByteSize{4}, Index{ea}, Version{1}, IsArray{0}, MetaFlag{0}
										DungeonPrerequisite data // ByteSize{ffffffff}, Index{eb}, Version{1}, IsArray{0}, MetaFlag{8000}
											int prerequisiteType // ByteSize{4}, Index{ec}, Version{1}, IsArray{0}, MetaFlag{0}
											int prerequisiteOperation // ByteSize{4}, Index{ed}, Version{1}, IsArray{0}, MetaFlag{0}
											int statToCheck // ByteSize{4}, Index{ee}, Version{1}, IsArray{0}, MetaFlag{0}
											int maxToCheck // ByteSize{4}, Index{ef}, Version{1}, IsArray{0}, MetaFlag{0}
											float comparisonValue // ByteSize{4}, Index{f0}, Version{1}, IsArray{0}, MetaFlag{0}
											UInt8 useSessionStatValue // ByteSize{1}, Index{f1}, Version{1}, IsArray{0}, MetaFlag{4100}
											string encounteredObjectGuid // ByteSize{ffffffff}, Index{f2}, Version{1}, IsArray{0}, MetaFlag{8000}
												Array Array // ByteSize{ffffffff}, Index{f3}, Version{1}, IsArray{1}, MetaFlag{4001}
													int size // ByteSize{4}, Index{f4}, Version{1}, IsArray{0}, MetaFlag{1}
													char data // ByteSize{1}, Index{f5}, Version{1}, IsArray{0}, MetaFlag{1}
											PPtr<$PrototypeDungeonRoom> encounteredRoom // ByteSize{c}, Index{f6}, Version{1}, IsArray{0}, MetaFlag{0}
												int m_FileID // ByteSize{4}, Index{f7}, Version{1}, IsArray{0}, MetaFlag{800001}
												SInt64 m_PathID // ByteSize{8}, Index{f8}, Version{1}, IsArray{0}, MetaFlag{800001}
											int requiredNumberOfEncounters // ByteSize{4}, Index{f9}, Version{1}, IsArray{0}, MetaFlag{0}
											int requiredCharacter // ByteSize{4}, Index{fa}, Version{1}, IsArray{0}, MetaFlag{0}
											UInt8 requireCharacter // ByteSize{1}, Index{fb}, Version{1}, IsArray{0}, MetaFlag{4100}
											int requiredTileset // ByteSize{4}, Index{fc}, Version{1}, IsArray{0}, MetaFlag{0}
											UInt8 requireTileset // ByteSize{1}, Index{fd}, Version{1}, IsArray{0}, MetaFlag{4100}
											int saveFlagToCheck // ByteSize{4}, Index{fe}, Version{1}, IsArray{0}, MetaFlag{0}
											UInt8 requireFlag // ByteSize{1}, Index{ff}, Version{1}, IsArray{0}, MetaFlag{4100}
											UInt8 requireDemoMode // ByteSize{1}, Index{100}, Version{1}, IsArray{0}, MetaFlag{4100}
				float weight // ByteSize{4}, Index{101}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 canBeCriticalPath // ByteSize{1}, Index{102}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 canBeNoncriticalPath // ByteSize{1}, Index{103}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector pathGridDefinitions // ByteSize{ffffffff}, Index{104}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{105}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{106}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$TileIndexGrid> data // ByteSize{c}, Index{107}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{108}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{109}, Version{1}, IsArray{0}, MetaFlag{800001}
	DustUpVFX dungeonDustups // ByteSize{90}, Index{10a}, Version{1}, IsArray{0}, MetaFlag{0}
		PPtr<$GameObject> runDustup // ByteSize{c}, Index{10b}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{10c}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{10d}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> waterDustup // ByteSize{c}, Index{10e}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{10f}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{110}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> additionalWaterDustup // ByteSize{c}, Index{111}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{112}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{113}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollNorthDustup // ByteSize{c}, Index{114}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{115}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{116}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollNorthEastDustup // ByteSize{c}, Index{117}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{118}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{119}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollEastDustup // ByteSize{c}, Index{11a}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{11b}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{11c}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollSouthEastDustup // ByteSize{c}, Index{11d}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{11e}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{11f}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollSouthDustup // ByteSize{c}, Index{120}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{121}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{122}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollSouthWestDustup // ByteSize{c}, Index{123}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{124}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{125}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollWestDustup // ByteSize{c}, Index{126}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{127}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{128}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollNorthWestDustup // ByteSize{c}, Index{129}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{12a}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{12b}, Version{1}, IsArray{0}, MetaFlag{800001}
		PPtr<$GameObject> rollLandDustup // ByteSize{c}, Index{12c}, Version{1}, IsArray{0}, MetaFlag{0}
			int m_FileID // ByteSize{4}, Index{12d}, Version{1}, IsArray{0}, MetaFlag{800001}
			SInt64 m_PathID // ByteSize{8}, Index{12e}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DamageTypeEffectMatrix> damageTypeEffectMatrix // ByteSize{c}, Index{12f}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{130}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{131}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonTileStampData> stampData // ByteSize{c}, Index{132}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{133}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{134}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 UsesCustomFloorIdea // ByteSize{1}, Index{135}, Version{1}, IsArray{0}, MetaFlag{4100}
	RobotDaveIdea FloorIdea // ByteSize{ffffffff}, Index{136}, Version{1}, IsArray{0}, MetaFlag{8000}
		vector ValidEasyEnemyPlaceables // ByteSize{ffffffff}, Index{137}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{138}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{139}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonPlaceable> data // ByteSize{c}, Index{13a}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{13b}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{13c}, Version{1}, IsArray{0}, MetaFlag{800001}
		vector ValidHardEnemyPlaceables // ByteSize{ffffffff}, Index{13d}, Version{1}, IsArray{0}, MetaFlag{0}
			Array Array // ByteSize{ffffffff}, Index{13e}, Version{1}, IsArray{1}, MetaFlag{0}
				int size // ByteSize{4}, Index{13f}, Version{1}, IsArray{0}, MetaFlag{0}
				PPtr<$DungeonPlaceable> data // ByteSize{c}, Index{140}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{141}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{142}, Version{1}, IsArray{0}, MetaFlag{800001}
		UInt8 UseWallSawblades // ByteSize{1}, Index{143}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseRollingLogsVertical // ByteSize{1}, Index{144}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseRollingLogsHorizontal // ByteSize{1}, Index{145}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseFloorPitTraps // ByteSize{1}, Index{146}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseFloorFlameTraps // ByteSize{1}, Index{147}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseFloorSpikeTraps // ByteSize{1}, Index{148}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseFloorConveyorBelts // ByteSize{1}, Index{149}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseCaveIns // ByteSize{1}, Index{14a}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseAlarmMushrooms // ByteSize{1}, Index{14b}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseMineCarts // ByteSize{1}, Index{14c}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 UseChandeliers // ByteSize{1}, Index{14d}, Version{1}, IsArray{0}, MetaFlag{4100}
		UInt8 CanIncludePits // ByteSize{1}, Index{14e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 PlaceDoors // ByteSize{1}, Index{14f}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$DungeonPlaceable> doorObjects // ByteSize{c}, Index{150}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{151}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{152}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonPlaceable> lockedDoorObjects // ByteSize{c}, Index{153}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{154}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{155}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonPlaceable> oneWayDoorObjects // ByteSize{c}, Index{156}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{157}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{158}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> oneWayDoorPressurePlate // ByteSize{c}, Index{159}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{15a}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{15b}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonPlaceable> phantomBlockerDoorObjects // ByteSize{c}, Index{15c}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{15d}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{15e}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$DungeonPlaceable> alternateDoorObjectsNakatomi // ByteSize{c}, Index{15f}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{160}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{161}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 UsesWallWarpWingDoors // ByteSize{1}, Index{162}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$GameObject> WarpWingDoorPrefab // ByteSize{c}, Index{163}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{164}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{165}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GenericLootTable> baseChestContents // ByteSize{c}, Index{166}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{167}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{168}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector SecretRoomSimpleTriggersFacewall // ByteSize{ffffffff}, Index{169}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{16a}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{16b}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{16c}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{16d}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{16e}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector SecretRoomSimpleTriggersSidewall // ByteSize{ffffffff}, Index{16f}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{170}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{171}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{172}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{173}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{174}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector SecretRoomComplexTriggers // ByteSize{ffffffff}, Index{175}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{176}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{177}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$ComplexSecretRoomTrigger> data // ByteSize{c}, Index{178}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{179}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{17a}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> SecretRoomDoorSparkVFX // ByteSize{c}, Index{17b}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{17c}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{17d}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> SecretRoomHorizontalPoofVFX // ByteSize{c}, Index{17e}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{17f}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{180}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> SecretRoomVerticalPoofVFX // ByteSize{c}, Index{181}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{182}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{183}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$GameObject> RatTrapdoor // ByteSize{c}, Index{184}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{185}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{186}, Version{1}, IsArray{0}, MetaFlag{800001}
	string NormalRatGUID // ByteSize{ffffffff}, Index{187}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{188}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{189}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{18a}, Version{1}, IsArray{0}, MetaFlag{1}
	PPtr<$SharedDungeonSettings> sharedSettingsPrefab // ByteSize{c}, Index{18b}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{18c}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{18d}, Version{1}, IsArray{0}, MetaFlag{800001}
	int BossMasteryTokenItemId // ByteSize{4}, Index{18e}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 UsesOverrideTertiaryBossSets // ByteSize{1}, Index{18f}, Version{1}, IsArray{0}, MetaFlag{4100}
	TertiaryBossRewardSet OverrideTertiaryRewardSets // ByteSize{ffffffff}, Index{190}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{191}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{192}, Version{1}, IsArray{0}, MetaFlag{0}
			TertiaryBossRewardSet data // ByteSize{ffffffff}, Index{193}, Version{1}, IsArray{0}, MetaFlag{8000}
				string annotation // ByteSize{ffffffff}, Index{194}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{195}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{196}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{197}, Version{1}, IsArray{0}, MetaFlag{1}
				float weight // ByteSize{4}, Index{198}, Version{1}, IsArray{0}, MetaFlag{0}
				vector dropIds // ByteSize{ffffffff}, Index{199}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{19a}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{19b}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{19c}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$GameObject> defaultPlayerPrefab // ByteSize{c}, Index{19d}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{19e}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{19f}, Version{1}, IsArray{0}, MetaFlag{800001}
	UInt8 StripPlayerOnArrival // ByteSize{1}, Index{1a0}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 SuppressEmergencyCrates // ByteSize{1}, Index{1a1}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 SetTutorialFlag // ByteSize{1}, Index{1a2}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 PlayerIsLight // ByteSize{1}, Index{1a3}, Version{1}, IsArray{0}, MetaFlag{4100}
	ColorRGBA PlayerLightColor // ByteSize{10}, Index{1a4}, Version{1}, IsArray{0}, MetaFlag{200000}
		float r // ByteSize{4}, Index{1a5}, Version{1}, IsArray{0}, MetaFlag{200001}
		float g // ByteSize{4}, Index{1a6}, Version{1}, IsArray{0}, MetaFlag{200001}
		float b // ByteSize{4}, Index{1a7}, Version{1}, IsArray{0}, MetaFlag{200001}
		float a // ByteSize{4}, Index{1a8}, Version{1}, IsArray{0}, MetaFlag{200001}
	float PlayerLightIntensity // ByteSize{4}, Index{1a9}, Version{1}, IsArray{0}, MetaFlag{0}
	float PlayerLightRadius // ByteSize{4}, Index{1aa}, Version{1}, IsArray{0}, MetaFlag{0}
	vector PrefabsToAutoSpawn // ByteSize{ffffffff}, Index{1ab}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{1ac}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{1ad}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$GameObject> data // ByteSize{c}, Index{1ae}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{1af}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{1b0}, Version{1}, IsArray{0}, MetaFlag{800001}
	string musicEventName // ByteSize{ffffffff}, Index{1b1}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{1b2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{1b3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{1b4}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{21}: Material
Material Base // ByteSize{ffffffff}, Index{0}, Version{6}, IsArray{0}, MetaFlag{8000}
	string m_Name // ByteSize{ffffffff}, Index{1}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{2}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{3}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{1}
	PPtr<Shader> m_Shader // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_ShaderKeywords // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	unsigned int m_LightmapFlags // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_EnableInstancingVariants // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_DoubleSidedGI // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{4000}
	int m_CustomRenderQueue // ByteSize{4}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
	map stringTagMap // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{11}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}
			pair data // ByteSize{ffffffff}, Index{13}, Version{1}, IsArray{0}, MetaFlag{8000}
				string first // ByteSize{ffffffff}, Index{14}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{15}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{17}, Version{1}, IsArray{0}, MetaFlag{1}
				string second // ByteSize{ffffffff}, Index{18}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{19}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{1}
	vector disabledShaderPasses // ByteSize{ffffffff}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{1d}, Version{1}, IsArray{1}, MetaFlag{c000}
			int size // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
			string data // ByteSize{ffffffff}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{20}, Version{1}, IsArray{1}, MetaFlag{4001}
					int size // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{1}
					char data // ByteSize{1}, Index{22}, Version{1}, IsArray{0}, MetaFlag{1}
	UnityPropertySheet m_SavedProperties // ByteSize{ffffffff}, Index{23}, Version{3}, IsArray{0}, MetaFlag{8000}
		map m_TexEnvs // ByteSize{ffffffff}, Index{24}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{25}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{0}
				pair data // ByteSize{ffffffff}, Index{27}, Version{1}, IsArray{0}, MetaFlag{8000}
					string first // ByteSize{ffffffff}, Index{28}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{29}, Version{1}, IsArray{1}, MetaFlag{4001}
							int size // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{1}
							char data // ByteSize{1}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{1}
					UnityTexEnv second // ByteSize{1c}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
						PPtr<Texture> m_Texture // ByteSize{c}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
							int m_FileID // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{800001}
							SInt64 m_PathID // ByteSize{8}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{800001}
						Vector2f m_Scale // ByteSize{8}, Index{30}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{31}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{32}, Version{1}, IsArray{0}, MetaFlag{200000}
						Vector2f m_Offset // ByteSize{8}, Index{33}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{35}, Version{1}, IsArray{0}, MetaFlag{200000}
		map m_Floats // ByteSize{ffffffff}, Index{36}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{37}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{0}
				pair data // ByteSize{ffffffff}, Index{39}, Version{1}, IsArray{0}, MetaFlag{8000}
					string first // ByteSize{ffffffff}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{3b}, Version{1}, IsArray{1}, MetaFlag{4001}
							int size // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{1}
							char data // ByteSize{1}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{1}
					float second // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{0}
		map m_Colors // ByteSize{ffffffff}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{8000}
			Array Array // ByteSize{ffffffff}, Index{40}, Version{1}, IsArray{1}, MetaFlag{8000}
				int size // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{0}
				pair data // ByteSize{ffffffff}, Index{42}, Version{1}, IsArray{0}, MetaFlag{8000}
					string first // ByteSize{ffffffff}, Index{43}, Version{1}, IsArray{0}, MetaFlag{8000}
						Array Array // ByteSize{ffffffff}, Index{44}, Version{1}, IsArray{1}, MetaFlag{4001}
							int size // ByteSize{4}, Index{45}, Version{1}, IsArray{0}, MetaFlag{1}
							char data // ByteSize{1}, Index{46}, Version{1}, IsArray{0}, MetaFlag{1}
					ColorRGBA second // ByteSize{10}, Index{47}, Version{1}, IsArray{0}, MetaFlag{200000}
						float r // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{200001}
						float g // ByteSize{4}, Index{49}, Version{1}, IsArray{0}, MetaFlag{200001}
						float b // ByteSize{4}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{200001}
						float a // ByteSize{4}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{200001}

// classID{114}: tk2dSlicedSprite
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 automaticallyManagesDepth // ByteSize{1}, Index{c}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 ignoresTiltworldDepth // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 depthUsesTrimmedBounds // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 allowDefaultLayer // ByteSize{1}, Index{f}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$tk2dBaseSprite> attachParent // ByteSize{c}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{12}, Version{1}, IsArray{0}, MetaFlag{800001}
	int OverrideMaterialMode // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 independentOrientation // ByteSize{1}, Index{14}, Version{1}, IsArray{0}, MetaFlag{4101}
	UInt8 autodetectFootprint // ByteSize{1}, Index{15}, Version{1}, IsArray{0}, MetaFlag{4100}
	IntVector2 customFootprintOrigin // ByteSize{8}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
		int x // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
		int y // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
	IntVector2 customFootprint // ByteSize{8}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
		int x // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
		int y // ByteSize{4}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 hasOffScreenCachedUpdate // ByteSize{1}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$tk2dSpriteCollectionData> offScreenCachedCollection // ByteSize{c}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{800001}
	int offScreenCachedID // ByteSize{4}, Index{20}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$tk2dSpriteCollectionData> collection // ByteSize{c}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{23}, Version{1}, IsArray{0}, MetaFlag{800001}
	ColorRGBA _color // ByteSize{10}, Index{24}, Version{1}, IsArray{0}, MetaFlag{200000}
		float r // ByteSize{4}, Index{25}, Version{1}, IsArray{0}, MetaFlag{200001}
		float g // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{200001}
		float b // ByteSize{4}, Index{27}, Version{1}, IsArray{0}, MetaFlag{200001}
		float a // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{200001}
	Vector3f _scale // ByteSize{c}, Index{29}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{200000}
		float z // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{200000}
	int _spriteId // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<$BoxCollider2D> boxCollider2D // ByteSize{c}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{30}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$BoxCollider> boxCollider // ByteSize{c}, Index{31}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{32}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{33}, Version{1}, IsArray{0}, MetaFlag{800001}
	PPtr<$MeshCollider> meshCollider // ByteSize{c}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{35}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{36}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector meshColliderPositions // ByteSize{ffffffff}, Index{37}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{38}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
			Vector3f data // ByteSize{c}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{200000}
				float x // ByteSize{4}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{200000}
				float y // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{200000}
				float z // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{200000}
	PPtr<$Mesh> meshColliderMesh // ByteSize{c}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{40}, Version{1}, IsArray{0}, MetaFlag{800001}
	int CachedPerpState // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{0}
	float m_heightOffGround // ByteSize{4}, Index{42}, Version{1}, IsArray{0}, MetaFlag{1}
	int renderLayer // ByteSize{4}, Index{43}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 IsBraveOutlineSprite // ByteSize{1}, Index{44}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsZDepthDirty // ByteSize{1}, Index{45}, Version{1}, IsArray{0}, MetaFlag{4100}
	Vector2f _dimensions // ByteSize{8}, Index{46}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{47}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{200000}
	int _anchor // ByteSize{4}, Index{49}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 _borderOnly // ByteSize{1}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 legacyMode // ByteSize{1}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{4100}
	Vector2f _anchorOffset // ByteSize{8}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{200000}
	UInt8 _tileStretchedSprites // ByteSize{1}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{4100}
	float borderTop // ByteSize{4}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
	float borderBottom // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{0}
	float borderLeft // ByteSize{4}, Index{52}, Version{1}, IsArray{0}, MetaFlag{0}
	float borderRight // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
	float borderCornerBottom // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 _createBoxCollider // ByteSize{1}, Index{55}, Version{1}, IsArray{0}, MetaFlag{4100}

// classID{108}: Light
Light Base // ByteSize{94}, Index{0}, Version{8}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	int m_Type // ByteSize{4}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
	ColorRGBA m_Color // ByteSize{10}, Index{6}, Version{1}, IsArray{0}, MetaFlag{200000}
		float r // ByteSize{4}, Index{7}, Version{1}, IsArray{0}, MetaFlag{200001}
		float g // ByteSize{4}, Index{8}, Version{1}, IsArray{0}, MetaFlag{200001}
		float b // ByteSize{4}, Index{9}, Version{1}, IsArray{0}, MetaFlag{200001}
		float a // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{200001}
	float m_Intensity // ByteSize{4}, Index{b}, Version{1}, IsArray{0}, MetaFlag{0}
	float m_Range // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	float m_SpotAngle // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	float m_CookieSize // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
	ShadowSettings m_Shadows // ByteSize{1c}, Index{f}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_Type // ByteSize{4}, Index{10}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_Resolution // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_CustomResolution // ByteSize{4}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}
		float m_Strength // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{0}
		float m_Bias // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
		float m_NormalBias // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
		float m_NearPlane // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
	PPtr<Texture> m_Cookie // ByteSize{c}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{19}, Version{1}, IsArray{0}, MetaFlag{800001}
	bool m_DrawHalo // ByteSize{1}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{4000}
	LightBakingOutput m_BakingOutput // ByteSize{11}, Index{1b}, Version{2}, IsArray{0}, MetaFlag{8000}
		int probeOcclusionLightIndex // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
		int occlusionMaskChannel // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
		LightmapBakeMode lightmapBakeMode // ByteSize{8}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{0}
			int lightmapBakeType // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
			int mixedLightingMode // ByteSize{4}, Index{20}, Version{1}, IsArray{0}, MetaFlag{0}
		bool isBaked // ByteSize{1}, Index{21}, Version{1}, IsArray{0}, MetaFlag{4000}
	PPtr<Flare> m_Flare // ByteSize{c}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{24}, Version{1}, IsArray{0}, MetaFlag{800001}
	int m_RenderMode // ByteSize{4}, Index{25}, Version{1}, IsArray{0}, MetaFlag{0}
	BitField m_CullingMask // ByteSize{4}, Index{26}, Version{2}, IsArray{0}, MetaFlag{0}
		unsigned int m_Bits // ByteSize{4}, Index{27}, Version{1}, IsArray{0}, MetaFlag{400001}
	int m_Lightmapping // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
	Vector2f m_AreaSize // ByteSize{8}, Index{29}, Version{1}, IsArray{0}, MetaFlag{200000}
		float x // ByteSize{4}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{200000}
		float y // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{200000}
	float m_BounceIntensity // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{0}
	float m_ColorTemperature // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
	bool m_UseColorTemperature // ByteSize{1}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{4000}

// classID{114}: tk2dSpriteCollectionData
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int version // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 materialIdsValid // ByteSize{1}, Index{d}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 needMaterialInstance // ByteSize{1}, Index{e}, Version{1}, IsArray{0}, MetaFlag{4100}
	tk2dSpriteDefinition spriteDefinitions // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
			tk2dSpriteDefinition data // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{0}, MetaFlag{8000}
				string name // ByteSize{ffffffff}, Index{13}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{14}, Version{1}, IsArray{1}, MetaFlag{4001}
						int size // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{1}
						char data // ByteSize{1}, Index{16}, Version{1}, IsArray{0}, MetaFlag{1}
				Vector3f boundsDataCenter // ByteSize{c}, Index{17}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{200000}
					float z // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{200000}
				Vector3f boundsDataExtents // ByteSize{c}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{200000}
					float z // ByteSize{4}, Index{1e}, Version{1}, IsArray{0}, MetaFlag{200000}
				Vector3f untrimmedBoundsDataCenter // ByteSize{c}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{20}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{200000}
					float z // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{200000}
				Vector3f untrimmedBoundsDataExtents // ByteSize{c}, Index{23}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{24}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{25}, Version{1}, IsArray{0}, MetaFlag{200000}
					float z // ByteSize{4}, Index{26}, Version{1}, IsArray{0}, MetaFlag{200000}
				Vector2f texelSize // ByteSize{8}, Index{27}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{29}, Version{1}, IsArray{0}, MetaFlag{200000}
				Vector3f position0 // ByteSize{c}, Index{2a}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{200000}
					float z // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{200000}
				Vector3f position1 // ByteSize{c}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{200000}
					float z // ByteSize{4}, Index{31}, Version{1}, IsArray{0}, MetaFlag{200000}
				Vector3f position2 // ByteSize{c}, Index{32}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{33}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{200000}
					float z // ByteSize{4}, Index{35}, Version{1}, IsArray{0}, MetaFlag{200000}
				Vector3f position3 // ByteSize{c}, Index{36}, Version{1}, IsArray{0}, MetaFlag{200000}
					float x // ByteSize{4}, Index{37}, Version{1}, IsArray{0}, MetaFlag{200000}
					float y // ByteSize{4}, Index{38}, Version{1}, IsArray{0}, MetaFlag{200000}
					float z // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{200000}
				vector uvs // ByteSize{ffffffff}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{3b}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{0}
						Vector2f data // ByteSize{8}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{200000}
				PPtr<$Material> material // ByteSize{c}, Index{40}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{41}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{42}, Version{1}, IsArray{0}, MetaFlag{800001}
				int materialId // ByteSize{4}, Index{43}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 extractRegion // ByteSize{1}, Index{44}, Version{1}, IsArray{0}, MetaFlag{4100}
				int regionX // ByteSize{4}, Index{45}, Version{1}, IsArray{0}, MetaFlag{0}
				int regionY // ByteSize{4}, Index{46}, Version{1}, IsArray{0}, MetaFlag{0}
				int regionW // ByteSize{4}, Index{47}, Version{1}, IsArray{0}, MetaFlag{0}
				int regionH // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{0}
				int flipped // ByteSize{4}, Index{49}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 complexGeometry // ByteSize{1}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{4100}
				int physicsEngine // ByteSize{4}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{0}
				int colliderType // ByteSize{4}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{0}
				int collisionLayer // ByteSize{4}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{0}
				TilesetIndexMetadata metadata // ByteSize{40}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{8000}
					int type // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
					float weight // ByteSize{4}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
					int dungeonRoomSubType // ByteSize{4}, Index{51}, Version{1}, IsArray{0}, MetaFlag{0}
					int secondRoomSubType // ByteSize{4}, Index{52}, Version{1}, IsArray{0}, MetaFlag{0}
					int thirdRoomSubType // ByteSize{4}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
					UInt8 preventWallStamping // ByteSize{1}, Index{54}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 usesAnimSequence // ByteSize{1}, Index{55}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 usesNeighborDependencies // ByteSize{1}, Index{56}, Version{1}, IsArray{0}, MetaFlag{4100}
					UInt8 usesPerTileVFX // ByteSize{1}, Index{57}, Version{1}, IsArray{0}, MetaFlag{4100}
					int tileVFXPlaystyle // ByteSize{4}, Index{58}, Version{1}, IsArray{0}, MetaFlag{0}
					float tileVFXChance // ByteSize{4}, Index{59}, Version{1}, IsArray{0}, MetaFlag{0}
					PPtr<$GameObject> tileVFXPrefab // ByteSize{c}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{0}
						int m_FileID // ByteSize{4}, Index{5b}, Version{1}, IsArray{0}, MetaFlag{800001}
						SInt64 m_PathID // ByteSize{8}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{800001}
					Vector2f tileVFXOffset // ByteSize{8}, Index{5d}, Version{1}, IsArray{0}, MetaFlag{200000}
						float x // ByteSize{4}, Index{5e}, Version{1}, IsArray{0}, MetaFlag{200000}
						float y // ByteSize{4}, Index{5f}, Version{1}, IsArray{0}, MetaFlag{200000}
					float tileVFXDelayTime // ByteSize{4}, Index{60}, Version{1}, IsArray{0}, MetaFlag{0}
					float tileVFXDelayVariance // ByteSize{4}, Index{61}, Version{1}, IsArray{0}, MetaFlag{0}
					int tileVFXAnimFrame // ByteSize{4}, Index{62}, Version{1}, IsArray{0}, MetaFlag{0}
				vector colliderVertices // ByteSize{ffffffff}, Index{63}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{64}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{65}, Version{1}, IsArray{0}, MetaFlag{0}
						Vector3f data // ByteSize{c}, Index{66}, Version{1}, IsArray{0}, MetaFlag{200000}
							float x // ByteSize{4}, Index{67}, Version{1}, IsArray{0}, MetaFlag{200000}
							float y // ByteSize{4}, Index{68}, Version{1}, IsArray{0}, MetaFlag{200000}
							float z // ByteSize{4}, Index{69}, Version{1}, IsArray{0}, MetaFlag{200000}
				UInt8 colliderConvex // ByteSize{1}, Index{6a}, Version{1}, IsArray{0}, MetaFlag{4100}
				UInt8 colliderSmoothSphereCollisions // ByteSize{1}, Index{6b}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector SpriteIDsWithBagelColliders // ByteSize{ffffffff}, Index{6c}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{6d}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{6e}, Version{1}, IsArray{0}, MetaFlag{0}
			int data // ByteSize{4}, Index{6f}, Version{1}, IsArray{0}, MetaFlag{0}
	BagelColliderData SpriteDefinedBagelColliders // ByteSize{ffffffff}, Index{70}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{71}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{72}, Version{1}, IsArray{0}, MetaFlag{0}
			BagelColliderData data // ByteSize{ffffffff}, Index{73}, Version{1}, IsArray{0}, MetaFlag{8000}
				BagelCollider bagelColliders // ByteSize{ffffffff}, Index{74}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{75}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{76}, Version{1}, IsArray{0}, MetaFlag{0}
						BagelCollider data // ByteSize{ffffffff}, Index{77}, Version{1}, IsArray{0}, MetaFlag{8000}
							int width // ByteSize{4}, Index{78}, Version{1}, IsArray{0}, MetaFlag{0}
							int height // ByteSize{4}, Index{79}, Version{1}, IsArray{0}, MetaFlag{0}
							int minX // ByteSize{4}, Index{7a}, Version{1}, IsArray{0}, MetaFlag{0}
							int minY // ByteSize{4}, Index{7b}, Version{1}, IsArray{0}, MetaFlag{0}
							int actualWidth // ByteSize{4}, Index{7c}, Version{1}, IsArray{0}, MetaFlag{0}
							int actualHeight // ByteSize{4}, Index{7d}, Version{1}, IsArray{0}, MetaFlag{0}
							vector bagelCollider // ByteSize{ffffffff}, Index{7e}, Version{1}, IsArray{0}, MetaFlag{c100}
								Array Array // ByteSize{ffffffff}, Index{7f}, Version{1}, IsArray{1}, MetaFlag{4100}
									int size // ByteSize{4}, Index{80}, Version{1}, IsArray{0}, MetaFlag{100}
									UInt8 data // ByteSize{1}, Index{81}, Version{1}, IsArray{0}, MetaFlag{100}
	vector SpriteIDsWithAttachPoints // ByteSize{ffffffff}, Index{82}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{83}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{84}, Version{1}, IsArray{0}, MetaFlag{0}
			int data // ByteSize{4}, Index{85}, Version{1}, IsArray{0}, MetaFlag{0}
	AttachPointData SpriteDefinedAttachPoints // ByteSize{ffffffff}, Index{86}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{87}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{88}, Version{1}, IsArray{0}, MetaFlag{0}
			AttachPointData data // ByteSize{ffffffff}, Index{89}, Version{1}, IsArray{0}, MetaFlag{8000}
				AttachPoint attachPoints // ByteSize{ffffffff}, Index{8a}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{8b}, Version{1}, IsArray{1}, MetaFlag{8000}
						int size // ByteSize{4}, Index{8c}, Version{1}, IsArray{0}, MetaFlag{0}
						AttachPoint data // ByteSize{ffffffff}, Index{8d}, Version{1}, IsArray{0}, MetaFlag{8000}
							string name // ByteSize{ffffffff}, Index{8e}, Version{1}, IsArray{0}, MetaFlag{8000}
								Array Array // ByteSize{ffffffff}, Index{8f}, Version{1}, IsArray{1}, MetaFlag{4001}
									int size // ByteSize{4}, Index{90}, Version{1}, IsArray{0}, MetaFlag{1}
									char data // ByteSize{1}, Index{91}, Version{1}, IsArray{0}, MetaFlag{1}
							Vector3f position // ByteSize{c}, Index{92}, Version{1}, IsArray{0}, MetaFlag{200000}
								float x // ByteSize{4}, Index{93}, Version{1}, IsArray{0}, MetaFlag{200000}
								float y // ByteSize{4}, Index{94}, Version{1}, IsArray{0}, MetaFlag{200000}
								float z // ByteSize{4}, Index{95}, Version{1}, IsArray{0}, MetaFlag{200000}
							float angle // ByteSize{4}, Index{96}, Version{1}, IsArray{0}, MetaFlag{0}
	vector SpriteIDsWithNeighborDependencies // ByteSize{ffffffff}, Index{97}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{98}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{99}, Version{1}, IsArray{0}, MetaFlag{0}
			int data // ByteSize{4}, Index{9a}, Version{1}, IsArray{0}, MetaFlag{0}
	NeighborDependencyData SpriteDefinedIndexNeighborDependencies // ByteSize{ffffffff}, Index{9b}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{9c}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{9d}, Version{1}, IsArray{0}, MetaFlag{0}
			NeighborDependencyData data // ByteSize{ffffffff}, Index{9e}, Version{1}, IsArray{0}, MetaFlag{0}
				IndexNeighborDependency neighborDependencies // ByteSize{ffffffff}, Index{9f}, Version{1}, IsArray{0}, MetaFlag{0}
					Array Array // ByteSize{ffffffff}, Index{a0}, Version{1}, IsArray{1}, MetaFlag{0}
						int size // ByteSize{4}, Index{a1}, Version{1}, IsArray{0}, MetaFlag{0}
						IndexNeighborDependency data // ByteSize{8}, Index{a2}, Version{1}, IsArray{0}, MetaFlag{0}
							int neighborDirection // ByteSize{4}, Index{a3}, Version{1}, IsArray{0}, MetaFlag{0}
							int neighborIndex // ByteSize{4}, Index{a4}, Version{1}, IsArray{0}, MetaFlag{0}
	vector SpriteIDsWithAnimationSequences // ByteSize{ffffffff}, Index{a5}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{a6}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{a7}, Version{1}, IsArray{0}, MetaFlag{0}
			int data // ByteSize{4}, Index{a8}, Version{1}, IsArray{0}, MetaFlag{0}
	SimpleTilesetAnimationSequence SpriteDefinedAnimationSequences // ByteSize{ffffffff}, Index{a9}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{aa}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{ab}, Version{1}, IsArray{0}, MetaFlag{0}
			SimpleTilesetAnimationSequence data // ByteSize{ffffffff}, Index{ac}, Version{1}, IsArray{0}, MetaFlag{8000}
				int playstyle // ByteSize{4}, Index{ad}, Version{1}, IsArray{0}, MetaFlag{0}
				float loopDelayMin // ByteSize{4}, Index{ae}, Version{1}, IsArray{0}, MetaFlag{0}
				float loopDelayMax // ByteSize{4}, Index{af}, Version{1}, IsArray{0}, MetaFlag{0}
				int loopceptionTarget // ByteSize{4}, Index{b0}, Version{1}, IsArray{0}, MetaFlag{0}
				int loopceptionMin // ByteSize{4}, Index{b1}, Version{1}, IsArray{0}, MetaFlag{0}
				int loopceptionMax // ByteSize{4}, Index{b2}, Version{1}, IsArray{0}, MetaFlag{0}
				int coreceptionMin // ByteSize{4}, Index{b3}, Version{1}, IsArray{0}, MetaFlag{0}
				int coreceptionMax // ByteSize{4}, Index{b4}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 randomStartFrame // ByteSize{1}, Index{b5}, Version{1}, IsArray{0}, MetaFlag{4100}
				SimpleTilesetAnimationSequenceEntry entries // ByteSize{ffffffff}, Index{b6}, Version{1}, IsArray{0}, MetaFlag{0}
					Array Array // ByteSize{ffffffff}, Index{b7}, Version{1}, IsArray{1}, MetaFlag{0}
						int size // ByteSize{4}, Index{b8}, Version{1}, IsArray{0}, MetaFlag{0}
						SimpleTilesetAnimationSequenceEntry data // ByteSize{8}, Index{b9}, Version{1}, IsArray{0}, MetaFlag{0}
							int entryIndex // ByteSize{4}, Index{ba}, Version{1}, IsArray{0}, MetaFlag{0}
							float frameTime // ByteSize{4}, Index{bb}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 premultipliedAlpha // ByteSize{1}, Index{bc}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 shouldGenerateTilemapReflectionData // ByteSize{1}, Index{bd}, Version{1}, IsArray{0}, MetaFlag{4100}
	PPtr<$Material> material // ByteSize{c}, Index{be}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{bf}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{c0}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector materials // ByteSize{ffffffff}, Index{c1}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{c2}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{c3}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$Material> data // ByteSize{c}, Index{c4}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{c5}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{c6}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector textures // ByteSize{ffffffff}, Index{c7}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{c8}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{c9}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$Texture> data // ByteSize{c}, Index{ca}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{cb}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{cc}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector pngTextures // ByteSize{ffffffff}, Index{cd}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{ce}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{cf}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$TextAsset> data // ByteSize{c}, Index{d0}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{d1}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{d2}, Version{1}, IsArray{0}, MetaFlag{800001}
	vector materialPngTextureId // ByteSize{ffffffff}, Index{d3}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{d4}, Version{1}, IsArray{1}, MetaFlag{4000}
			int size // ByteSize{4}, Index{d5}, Version{1}, IsArray{0}, MetaFlag{0}
			int data // ByteSize{4}, Index{d6}, Version{1}, IsArray{0}, MetaFlag{0}
	int textureFilterMode // ByteSize{4}, Index{d7}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 textureMipMaps // ByteSize{1}, Index{d8}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 allowMultipleAtlases // ByteSize{1}, Index{d9}, Version{1}, IsArray{0}, MetaFlag{4100}
	string spriteCollectionGUID // ByteSize{ffffffff}, Index{da}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{db}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{dc}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{dd}, Version{1}, IsArray{0}, MetaFlag{1}
	string spriteCollectionName // ByteSize{ffffffff}, Index{de}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{df}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{e0}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{e1}, Version{1}, IsArray{0}, MetaFlag{1}
	string assetName // ByteSize{ffffffff}, Index{e2}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{e3}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{e4}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{e5}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 loadable // ByteSize{1}, Index{e6}, Version{1}, IsArray{0}, MetaFlag{4100}
	float invOrthoSize // ByteSize{4}, Index{e7}, Version{1}, IsArray{0}, MetaFlag{0}
	float halfTargetHeight // ByteSize{4}, Index{e8}, Version{1}, IsArray{0}, MetaFlag{0}
	int buildKey // ByteSize{4}, Index{e9}, Version{1}, IsArray{0}, MetaFlag{0}
	string dataGuid // ByteSize{ffffffff}, Index{ea}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{eb}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{ec}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{ed}, Version{1}, IsArray{0}, MetaFlag{1}
	UInt8 managedSpriteCollection // ByteSize{1}, Index{ee}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 hasPlatformData // ByteSize{1}, Index{ef}, Version{1}, IsArray{0}, MetaFlag{4100}
	vector spriteCollectionPlatforms // ByteSize{ffffffff}, Index{f0}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{f1}, Version{1}, IsArray{1}, MetaFlag{c000}
			int size // ByteSize{4}, Index{f2}, Version{1}, IsArray{0}, MetaFlag{0}
			string data // ByteSize{ffffffff}, Index{f3}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{f4}, Version{1}, IsArray{1}, MetaFlag{4001}
					int size // ByteSize{4}, Index{f5}, Version{1}, IsArray{0}, MetaFlag{1}
					char data // ByteSize{1}, Index{f6}, Version{1}, IsArray{0}, MetaFlag{1}
	vector spriteCollectionPlatformGUIDs // ByteSize{ffffffff}, Index{f7}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{f8}, Version{1}, IsArray{1}, MetaFlag{c000}
			int size // ByteSize{4}, Index{f9}, Version{1}, IsArray{0}, MetaFlag{0}
			string data // ByteSize{ffffffff}, Index{fa}, Version{1}, IsArray{0}, MetaFlag{8000}
				Array Array // ByteSize{ffffffff}, Index{fb}, Version{1}, IsArray{1}, MetaFlag{4001}
					int size // ByteSize{4}, Index{fc}, Version{1}, IsArray{0}, MetaFlag{1}
					char data // ByteSize{1}, Index{fd}, Version{1}, IsArray{0}, MetaFlag{1}

// classID{114}: ResizableCollider
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	int placeableWidth // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	int placeableHeight // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	int difficulty // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
	UInt8 isPassable // ByteSize{1}, Index{f}, Version{1}, IsArray{0}, MetaFlag{4100}
	UInt8 IsHorizontal // ByteSize{1}, Index{10}, Version{1}, IsArray{0}, MetaFlag{4100}
	float NumTiles // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
	vector spriteSources // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{0}, MetaFlag{0}
		Array Array // ByteSize{ffffffff}, Index{13}, Version{1}, IsArray{1}, MetaFlag{0}
			int size // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
			PPtr<$tk2dSlicedSprite> data // ByteSize{c}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
				int m_FileID // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{800001}
				SInt64 m_PathID // ByteSize{8}, Index{17}, Version{1}, IsArray{0}, MetaFlag{800001}

// classID{114}: DungeonTileStampData
MonoBehaviour Base // ByteSize{ffffffff}, Index{0}, Version{1}, IsArray{0}, MetaFlag{8000}
	PPtr<GameObject> m_GameObject // ByteSize{c}, Index{1}, Version{1}, IsArray{0}, MetaFlag{41}
		int m_FileID // ByteSize{4}, Index{2}, Version{1}, IsArray{0}, MetaFlag{41}
		SInt64 m_PathID // ByteSize{8}, Index{3}, Version{1}, IsArray{0}, MetaFlag{41}
	UInt8 m_Enabled // ByteSize{1}, Index{4}, Version{1}, IsArray{0}, MetaFlag{4101}
	PPtr<MonoScript> m_Script // ByteSize{c}, Index{5}, Version{1}, IsArray{0}, MetaFlag{0}
		int m_FileID // ByteSize{4}, Index{6}, Version{1}, IsArray{0}, MetaFlag{800001}
		SInt64 m_PathID // ByteSize{8}, Index{7}, Version{1}, IsArray{0}, MetaFlag{800001}
	string m_Name // ByteSize{ffffffff}, Index{8}, Version{1}, IsArray{0}, MetaFlag{8001}
		Array Array // ByteSize{ffffffff}, Index{9}, Version{1}, IsArray{1}, MetaFlag{4001}
			int size // ByteSize{4}, Index{a}, Version{1}, IsArray{0}, MetaFlag{1}
			char data // ByteSize{1}, Index{b}, Version{1}, IsArray{0}, MetaFlag{1}
	float tileStampWeight // ByteSize{4}, Index{c}, Version{1}, IsArray{0}, MetaFlag{0}
	float spriteStampWeight // ByteSize{4}, Index{d}, Version{1}, IsArray{0}, MetaFlag{0}
	float objectStampWeight // ByteSize{4}, Index{e}, Version{1}, IsArray{0}, MetaFlag{0}
	TileStampData stamps // ByteSize{ffffffff}, Index{f}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{10}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{11}, Version{1}, IsArray{0}, MetaFlag{0}
			TileStampData data // ByteSize{ffffffff}, Index{12}, Version{1}, IsArray{0}, MetaFlag{8000}
				int width // ByteSize{4}, Index{13}, Version{1}, IsArray{0}, MetaFlag{0}
				int height // ByteSize{4}, Index{14}, Version{1}, IsArray{0}, MetaFlag{0}
				float relativeWeight // ByteSize{4}, Index{15}, Version{1}, IsArray{0}, MetaFlag{0}
				int placementRule // ByteSize{4}, Index{16}, Version{1}, IsArray{0}, MetaFlag{0}
				int occupySpace // ByteSize{4}, Index{17}, Version{1}, IsArray{0}, MetaFlag{0}
				int stampCategory // ByteSize{4}, Index{18}, Version{1}, IsArray{0}, MetaFlag{0}
				int preferredIntermediaryStamps // ByteSize{4}, Index{19}, Version{1}, IsArray{0}, MetaFlag{0}
				int intermediaryMatchingStyle // ByteSize{4}, Index{1a}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requiresForcedMatchingStyle // ByteSize{1}, Index{1b}, Version{1}, IsArray{0}, MetaFlag{4100}
				int opulence // ByteSize{4}, Index{1c}, Version{1}, IsArray{0}, MetaFlag{0}
				StampPerRoomPlacementSettings roomTypeData // ByteSize{ffffffff}, Index{1d}, Version{1}, IsArray{0}, MetaFlag{0}
					Array Array // ByteSize{ffffffff}, Index{1e}, Version{1}, IsArray{1}, MetaFlag{0}
						int size // ByteSize{4}, Index{1f}, Version{1}, IsArray{0}, MetaFlag{0}
						StampPerRoomPlacementSettings data // ByteSize{8}, Index{20}, Version{1}, IsArray{0}, MetaFlag{0}
							int roomSubType // ByteSize{4}, Index{21}, Version{1}, IsArray{0}, MetaFlag{0}
							float roomRelativeWeight // ByteSize{4}, Index{22}, Version{1}, IsArray{0}, MetaFlag{0}
				int indexOfSymmetricPartner // ByteSize{4}, Index{23}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 preventRoomRepeats // ByteSize{1}, Index{24}, Version{1}, IsArray{0}, MetaFlag{4100}
				vector stampTileIndices // ByteSize{ffffffff}, Index{25}, Version{1}, IsArray{0}, MetaFlag{8000}
					Array Array // ByteSize{ffffffff}, Index{26}, Version{1}, IsArray{1}, MetaFlag{4000}
						int size // ByteSize{4}, Index{27}, Version{1}, IsArray{0}, MetaFlag{0}
						int data // ByteSize{4}, Index{28}, Version{1}, IsArray{0}, MetaFlag{0}
	SpriteStampData spriteStamps // ByteSize{ffffffff}, Index{29}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{2a}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{2b}, Version{1}, IsArray{0}, MetaFlag{0}
			SpriteStampData data // ByteSize{ffffffff}, Index{2c}, Version{1}, IsArray{0}, MetaFlag{8000}
				int width // ByteSize{4}, Index{2d}, Version{1}, IsArray{0}, MetaFlag{0}
				int height // ByteSize{4}, Index{2e}, Version{1}, IsArray{0}, MetaFlag{0}
				float relativeWeight // ByteSize{4}, Index{2f}, Version{1}, IsArray{0}, MetaFlag{0}
				int placementRule // ByteSize{4}, Index{30}, Version{1}, IsArray{0}, MetaFlag{0}
				int occupySpace // ByteSize{4}, Index{31}, Version{1}, IsArray{0}, MetaFlag{0}
				int stampCategory // ByteSize{4}, Index{32}, Version{1}, IsArray{0}, MetaFlag{0}
				int preferredIntermediaryStamps // ByteSize{4}, Index{33}, Version{1}, IsArray{0}, MetaFlag{0}
				int intermediaryMatchingStyle // ByteSize{4}, Index{34}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requiresForcedMatchingStyle // ByteSize{1}, Index{35}, Version{1}, IsArray{0}, MetaFlag{4100}
				int opulence // ByteSize{4}, Index{36}, Version{1}, IsArray{0}, MetaFlag{0}
				StampPerRoomPlacementSettings roomTypeData // ByteSize{ffffffff}, Index{37}, Version{1}, IsArray{0}, MetaFlag{0}
					Array Array // ByteSize{ffffffff}, Index{38}, Version{1}, IsArray{1}, MetaFlag{0}
						int size // ByteSize{4}, Index{39}, Version{1}, IsArray{0}, MetaFlag{0}
						StampPerRoomPlacementSettings data // ByteSize{8}, Index{3a}, Version{1}, IsArray{0}, MetaFlag{0}
							int roomSubType // ByteSize{4}, Index{3b}, Version{1}, IsArray{0}, MetaFlag{0}
							float roomRelativeWeight // ByteSize{4}, Index{3c}, Version{1}, IsArray{0}, MetaFlag{0}
				int indexOfSymmetricPartner // ByteSize{4}, Index{3d}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 preventRoomRepeats // ByteSize{1}, Index{3e}, Version{1}, IsArray{0}, MetaFlag{4100}
				PPtr<$Sprite> spriteReference // ByteSize{c}, Index{3f}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{40}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{41}, Version{1}, IsArray{0}, MetaFlag{800001}
	ObjectStampData objectStamps // ByteSize{ffffffff}, Index{42}, Version{1}, IsArray{0}, MetaFlag{8000}
		Array Array // ByteSize{ffffffff}, Index{43}, Version{1}, IsArray{1}, MetaFlag{8000}
			int size // ByteSize{4}, Index{44}, Version{1}, IsArray{0}, MetaFlag{0}
			ObjectStampData data // ByteSize{ffffffff}, Index{45}, Version{1}, IsArray{0}, MetaFlag{8000}
				int width // ByteSize{4}, Index{46}, Version{1}, IsArray{0}, MetaFlag{0}
				int height // ByteSize{4}, Index{47}, Version{1}, IsArray{0}, MetaFlag{0}
				float relativeWeight // ByteSize{4}, Index{48}, Version{1}, IsArray{0}, MetaFlag{0}
				int placementRule // ByteSize{4}, Index{49}, Version{1}, IsArray{0}, MetaFlag{0}
				int occupySpace // ByteSize{4}, Index{4a}, Version{1}, IsArray{0}, MetaFlag{0}
				int stampCategory // ByteSize{4}, Index{4b}, Version{1}, IsArray{0}, MetaFlag{0}
				int preferredIntermediaryStamps // ByteSize{4}, Index{4c}, Version{1}, IsArray{0}, MetaFlag{0}
				int intermediaryMatchingStyle // ByteSize{4}, Index{4d}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 requiresForcedMatchingStyle // ByteSize{1}, Index{4e}, Version{1}, IsArray{0}, MetaFlag{4100}
				int opulence // ByteSize{4}, Index{4f}, Version{1}, IsArray{0}, MetaFlag{0}
				StampPerRoomPlacementSettings roomTypeData // ByteSize{ffffffff}, Index{50}, Version{1}, IsArray{0}, MetaFlag{0}
					Array Array // ByteSize{ffffffff}, Index{51}, Version{1}, IsArray{1}, MetaFlag{0}
						int size // ByteSize{4}, Index{52}, Version{1}, IsArray{0}, MetaFlag{0}
						StampPerRoomPlacementSettings data // ByteSize{8}, Index{53}, Version{1}, IsArray{0}, MetaFlag{0}
							int roomSubType // ByteSize{4}, Index{54}, Version{1}, IsArray{0}, MetaFlag{0}
							float roomRelativeWeight // ByteSize{4}, Index{55}, Version{1}, IsArray{0}, MetaFlag{0}
				int indexOfSymmetricPartner // ByteSize{4}, Index{56}, Version{1}, IsArray{0}, MetaFlag{0}
				UInt8 preventRoomRepeats // ByteSize{1}, Index{57}, Version{1}, IsArray{0}, MetaFlag{4100}
				PPtr<$GameObject> objectReference // ByteSize{c}, Index{58}, Version{1}, IsArray{0}, MetaFlag{0}
					int m_FileID // ByteSize{4}, Index{59}, Version{1}, IsArray{0}, MetaFlag{800001}
					SInt64 m_PathID // ByteSize{8}, Index{5a}, Version{1}, IsArray{0}, MetaFlag{800001}
	float SymmetricFrameChance // ByteSize{4}, Index{5b}, Version{1}, IsArray{0}, MetaFlag{0}
	float SymmetricCompleteChance // ByteSize{4}, Index{5c}, Version{1}, IsArray{0}, MetaFlag{0}


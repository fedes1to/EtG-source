using System.Collections;
using UnityEngine;

public class TemporaryInvulnerabilityPlayerItem : PlayerItem
{
	public float Duration = 5f;

	protected override void DoEffect(PlayerController user)
	{
		AkSoundEngine.PostEvent("Play_OBJ_powerstar_use_01", user.gameObject);
		Material[] array = user.SetOverrideShader(ShaderCache.Acquire("Brave/Internal/RainbowChestShader"));
		for (int i = 0; i < array.Length; i++)
		{
			if (!(array[i] == null))
			{
				array[i].SetFloat("_AllColorsToggle", 1f);
			}
		}
		user.StartCoroutine(HandleDuration(user, array[0]));
	}

	private IEnumerator HandleDuration(PlayerController user, Material userMaterial)
	{
		base.IsCurrentlyActive = true;
		float ela = 0f;
		m_activeDuration = Duration;
		m_activeElapsed = ela;
		while (ela < Duration)
		{
			ela = (m_activeElapsed = ela + BraveTime.DeltaTime);
			user.healthHaver.IsVulnerable = false;
			yield return null;
		}
		user.ClearOverrideShader();
		user.healthHaver.IsVulnerable = true;
		base.IsCurrentlyActive = false;
		AkSoundEngine.PostEvent("Stop_SND_OBJ", user.gameObject);
	}

	protected override void OnDestroy()
	{
		base.OnDestroy();
	}
}
